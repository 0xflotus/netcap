%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 1809.000000 1533.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.14.1 (Build 18B75) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 1809 1533
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 1809 1533
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: Futura-Medium
%!FontType1-1.0: Futura-Medium 1.0000.1.0000
/FontInfo 1 dict dup begin
/FSType 6 def
end readonly def
14 dict begin/FontName /Futura-Medium def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /s put
dup 34 /u put
dup 35 /r put
dup 36 /i put
dup 37 /c put
dup 38 /a put
dup 39 /t put
dup 40 /f put
dup 41 /fi put
dup 42 /period put
dup 43 /p put
dup 44 /l put
dup 45 /o put
dup 46 /g put
dup 47 /n put
dup 48 /e put
dup 49 /b put
dup 50 /d put
dup 51 /space put
dup 52 /w put
dup 53 /m put
dup 54 /h put
dup 55 /y put
dup 56 /T put
dup 57 /C put
dup 58 /P put
dup 59 /z put
dup 60 /U put
dup 61 /D put
dup 62 /F put
dup 63 /underscore put
dup 64 /v put
dup 65 /L put
dup 66 /x put
dup 67 /S put
dup 68 /V put
dup 69 /M put
dup 70 /ellipsis put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -1074 1 index div -591 2 index div 2707 3 index div 2164 5 -1 roll div]cvx def
/sfnts [<




00>] def
/CharStrings 41 dict dup begin
/.notdef 0 def
/space 1 def
/ellipsis 2 def
/hyphen 3 def
/period 4 def
/C 5 def
/D 6 def
/F 7 def
/L 8 def
/M 9 def
/P 10 def
/S 11 def
/T 12 def
/U 13 def
/V 14 def
/underscore 15 def
/a 16 def
/b 17 def
/c 18 def
/d 19 def
/e 20 def
/f 21 def
/g 22 def
/h 23 def
/i 24 def
/l 25 def
/m 26 def
/n 27 def
/o 28 def
/p 29 def
/r 30 def
/s 31 def
/t 32 def
/u 33 def
/v 34 def
/w 35 def
/x 36 def
/y 37 def
/z 38 def
/fi 39 def
/hbar 40 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontInfo 1 dict dup begin
/FSType 6 def
end readonly def
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-1074 -591 2707 2164}def
/UniqueID 4208071 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C55AC8266BDD340E521355EEF85826934CAE169B3813170EF21157F980278DEA2CE475C6187CB4267A04435AB7CCB196A466EDED31699319305B4913DB428C1F94A0BD0621B41DEC2216CE6C1E3EBC36487BA48FFFC5F94B7C8705655675D4E21DD11D422EFC346F0840F70FCA808FD56424C244741A5EEC370A3276C5E050182153744A195066BD7AA429092A1D177FBAF786F0AF577C4D7E983BFDF2B7FE821BBBBAF2C47B5474634AF8B344628B8124B51343393127FDC74C2A4773070343657F92053AB4FF6FA5805992EC65147615F4FF47E080EE62774EC8250C1E97C1E9AE2F9E215337982C64F9B4CB70BEC803FD7F3BD06D7994CA4FE2F218769BA341E99E87AD6301F74FBAEB6010C157DDFA784C733DBADCC77378B24ED844AC2265F44C807F15728F803BA00053E7CFB233FD05FBB509A2F8A496F4BCCCAA9057555F46EE9C01348A54FDF4B4466DA31D8E99E854B0ECC3F743A5AAC13BBE05EC4E20D9A041447F5D7E7E0FB9A3F9F01AC65329CB54DD8FEE7D551A4E36B5544EAA9DDDE3FEF5F65BF1066189E671663B1E0735508F28399CA4850D45F6CE714C9CDF8513A6DBCABBAFC0B62D0856D78ED75F2B51F39498129890B25B72ED9A743C7D2E36CB0D71697CABAC28E63FE6FC0A58DEBEDDF0DE3A2B4C866BA693AB7CF4013DD704212E282FA19602165635A2CCD54AB33E4B34B123DA5C960762B4666C5A2A1CE79E1A03BE91821DCA4D8AD31D6A61D799F3168A700D6C1B6D3FABA66A13EEC7E5C96AB733A3890CA196999516F63B70D1450FEADC7CCA9CD250D5A68F19E59B
1C2D6B4273AE224CB11C06A0636137980EB7C562307CA45828175F1D9AD07116E14093E50C735468462BF2E646B36DB537E4E186B08CC5799716AD8266B259738E0499291CCD176762B6B17DE3D0F2D15AFDDB2C91D440EAA04406682D1E00EF48263693937C6B34518F41BE679B885D759C5E2CE605094FB34CCBD4F6BA4FAD294B9E12B6E6DBD657FE722E4AF4C6F4C3F8BE507C94744625C92FF427548233047F9FC2E1F15B69CEDE4282A1CA21EE1156BF87FCE9A6C77F84CA305958B83522C691EBCBFDACCB3C41374C12D75889EC7A5B7FE03F7B2C059C810B204ADC404971939C88221A8753515BEA8B9D9FA4417236E782B161469CB9CB876099F8431193B8BB8D891166582080177EC0FC459A80140EC7CB9B45DE9CA1DEF8E6578BE7C371B8D13EF5CE33EF6502C76DB53CCDFEE60C4F774A5D567970485E880475AC5E412F9933FFEEE1C9093FAA3ED891CB01F84C0FAD7A71B499A5D526612C1BC9470FC47BAEF83D10821DE530EE07F870A65CA4305BD9BC2C3F468E8E063580E9A8EB71A869182EC88DC4FF9FCF84D23EC463E4A9A94EE9018E4A5FCDDAF53E22D351B00EFA9AE2F56572D4BEE67086A847489369AC60D02016C532BC919B216E514B0D549076C9A94A210BD91499917F7A30B4490DD64851F6A672A44849B7AE655386605C9FF2EEEFA423D385888769E82A728521860594BC9C05257514DA0CF4EC573EE5E5A103193DAF039BA8389D35667560149FE939189633EC8A4BBB9559DCC5A04505687A4E1C0E4E3A543EA776F4B6A0F9F9ED47B247A45DD78F313EBD7E3B327F40009F63A0739720760F4879A85C22BCE3DB6BF155B9256FBBBAE11AFEF14F70035F453B02495ABD5D8EC813F136A2A25DAFC2F654EDA2827374FEA892D405F2F9DEDE4141CEDBC27669C6DB23DB3562FF75EC067D72C95AE37F829C3E7490686E2D42CA76C1B4DBF31B395648A6025FC0AA51D229FE79FD8E423D520B409604780764F7C587F17541469DAA476CF605140C0507DDCC887E383CEC5AB8A405EE449860346AF4765130BB879DD497FB3855746F7F825EC0524D1A655658C8843797DD26E5B05500D3FE2751249F012E2E3796C0F372DDC70B771FDACE4517910A620D2BEF62B32C3D3A7CAD7375E58AD8DA403A6DB6CE26B846AEAB3D1C06B908648C3C5586CF0D9B6CEAB01D19EBE3DFB82D84CBBCE86AE6853DF7A00E54BD5DED7C7EB322256823BB2DBD70F90B5E2EB54BF1ABA4FAD657A4B282B8F6F942AC1E78393B1B1EA7ED7061046219FA407F698E0DC06480520AF46569F00255086802E7BD4DBC65E844A940B385F610586EB0816B2A016710B70A714FC0F4D1D053E1FA96FF81637F51AE88D40B4A8CB83BB2756D7DF3791349993DC808607DF96596CE496D917DCBF0120BB353A9F460EA9D38365D358135350001
9B572BBA7D0FBEEFC851FE5606E21F8BE530B548096C2DE2495272390D07031E4BF35D9B28CCD3C1DD0046826248DFC998C26CA333985B9F02866A3ED3AEB639BDA7252982327E2739F569792B40AA853EC356E00D5F706DC8FEFB1924A16AA93FE9F2A0C7DB341650BF8A5FD61E238F885C135D98D1F9A2526408716A1B248BA09A1687355CE216DE6CBB901179FCA5974668869683AC04120281DD2ECB2B725369E17E2C0594128CE510E42566CC84B68006962D9EA34CEC9954D9ADE3AA466CC29854644EFD25E9618ADDB850708FDD9D898354BBE58DD6C1261C3150403184AFDA21207E728402F4ABA005EBC7A7F520EE8AD2A482A63EEAC7263481633469B9F8A7464B32CE9288FC2157EDD3013EBF3096339967EED6C2A6CA6305DA4E932F9C2DF746C49472F1FA55B0E2755FB33C81648AF029E46BC41E498F06783D08F865F4A8561F06B41C177651D2D1DC9871E2A27CAE74B3ADBCBC37AAA97953086F81E708D5B0C1E58F4ACFF8C7D8074E9BD0532F8CA67B0FB0C0A18CD1EAB0FE178E26CAAF27EFB18FFC0BFE5CAD985FD79807FAAF480324EC6485822A61B41C7CCB190B85EA499F8C5C9CDDC7B108BEE5A4CE686C96B134921C408458776B3954E91408DE5DB3122180DEB9458043990720BC785C9003B1406D07EA4CD7157F369B9B477B0D1F0C0741A4BE23CEFA420AF7B7D3027F4266822B8F3DDC78EF2C8DB8234F6F5C334C3CC18790B19E3B579AFD6FE9A39BF20D8051BFD8FDD6553991113425D2F6019C30874B17132B47A2302CB4E8A08C4E5841D7E2EA8944ADAA51FA01A79FE25461B2EC1337DE70C64E187BF756CD401F75C657F7DEDAEC91FE31D9B21B2B61001034348C70C6899A8299441811208469D239145995AFEF05B620825866378E146BFD3227D1A90FECA1470202CBD4A29573F289C64C118943E9C02CF1E0D6DAE83762DFCAB98B4D334CE520EE4A848D76E530DFFB0E9062BF352AAE07FCD3ACF9A0B60FC2D4F9E5C5AE346A6DDBCD2E256CEDCE5B7D41E71EEBAAE07AA307F7790E7B4A052925853DB2B3C15C97103089203456C525722CC6112DC822BC365F2CD34F59A17D15CFF3B1930D919FDF3884DB8DF9770D0F0BAAFDFC3BB43879D7E034B3D5FD055F3AFC0021BB0FE13972343906D22EFA366CA84545976E6873B322A26AFF44AD1BB495590E66C58694D541646D6C136D2A5915BDA3C38668F3B942ED50F1A7F4644B04EC70DB50094EB4F8DC61E606BA305DEBBAB79A63388D6B3BF82A32C89F76EC27786EF586B92827B1055FAAC6238B4DF21DB361D6AD04D9B864F9A71EFCE9E4EB8D485B471ACAC1A920DAE099CBFB7C2289AC79AB1D7D2384E1ED89ABCE064B6CE28374E39BB9D89E8B7CD4015AEE7821CDFED71D35817B4DF298DE4B6727CEE08C72B8B06E44DECBF80FE5EE745800D7

F468AF21D267B270E7FB16221CFA01920A93D431B81317A9BAA47D8A2566A67EB45D6F232AA3AB00BADE44E9FF95A838BF640F2A2B4CA952E5CA5370AEAF84CBC405D883F60AD41139EEB1F7161E2CA71F22B866AD4106423E9742F614D8657F92F9B3E171732814AA37868462E1098FA01A823C99FA7B050F0AA1CF06D138C96EB918B94F0D536019F1BA548EDAEB87E751DA34E41D2E991612AB744BAFF2ED859C559A652304DEB429085845B9B8FDE6120B315916A07E7F95009D8D9B7040C32CF8925A6C9A3505E0EEA02DF42FEBE157ACBF595D826B333DCCF04E97FA4DCB8B4C4353998C766C7F23DE442D481AFAE152F8CE2CCC1C9CF5075DF9336F9021A96DCDB0BF22F574FD492B33225A46124F10FC82D85460C9C2D6D2B5A529624FA2F932F27B66F780A78E3EF56A9AB9ADEC231BC5A14DDD85EB9599F4AB3EE6C36837C092357C1A0A8F822212C28BF6F8344D00395C69EBB432A85BC92DBEAEC3D7740A4FA1F867FD5C868BBC304685A1F500FBBA0FDC3E5D105C291109BCE74F26E43FA86BA20048125FD162B29050003E697ABDA8DC07B06D84997A3E575BA640F171A5DE1B1EA71F75FF60C922A1C4948C45D6FA67354F166957890ABCF7859B3CC0F798E15515B913A06C54AD9AE3F15C924C24B91CC7134C4C439BC0CCB5F4E6019B5AB69E98B7DE6E00A36FBC304769248117A47A8FFF2D0376B474DB652BD014D5AE64581C27498D225C9BD63440B0BF11D111FA66FA0E3958787D74E4A819EE77A244DE527D6C10ACC9177BEA0A6FABBED4A8E72B2BE5D89A6F0828558566593EC32F646EE6DF32AAB1F9CA519E71AD434899088CC1FF167BE63157DBB7584E2BF6922BE3E6AA1C8984BE01AE44411402B3F26CAD2BBDBFE29BC102151BB3FBEC3E02E68C24CA3C1E4D80C3D81BA842877740AB6030ED5DB7AF92AA6E6009C3F61C6A02EC4620EF251B8E57D3E57C46B23CA2A9CF7811C2B9E41138210B174A8836747B10960A63B267634F7AF1433CDB783AC625F5BC11DE9B085FFB87E764EF529F4180F4D05CE5D15FB7CE811AF1EA291CEEF3BA335DC611CBABED30182C0274578ED1DF186E338A242E4B203B22BA91FBF080DE9FF8DA9786E9014F07BFFBB6F37D4C1917C617241D4756C70440B1CDA39D06EB7846EB0259A93587A2A0B1712CC609F9AD10EABB829856D27CDC2481F4EE53773775ED66D53284E2DAC952064BBAA321D65CDCFA08606E45E94C80422471C236DD17A9EBEC90D23BA2BB2BC7858A2BDC5085841A5EAF5FF6EE355E312D0DA500A7E143EB02064D1E05BCDE32A86FE4BB4567D52D5822C62305D746DE796B729DB7437EFB8F9C316283254F5328F9C3D1014CB3A9805EB8C69247B1BFDD8B68E15571D04A1403AA0BA4B284F444F9ADBDB5F0FE33D2D0E57ED425A989E744E39615047E58B468
4E49E0FC3449829CA0296DF508C078BE93B4AEC442
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/Futura-Medium cguidfix
/F1.1/Futura-Medium renmfont
%RBIBeginFontSubset: Futura-Bold
%!FontType1-1.0: Futura-Bold 1.0000.2.0010
/FontInfo 1 dict dup begin
/FSType 8 def
end readonly def
14 dict begin/FontName /Futura-Bold def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /N put
dup 34 /E put
dup 35 /T put
dup 36 /C put
dup 37 /A put
dup 38 /P put
dup 39 /space put
dup 40 /h put
dup 41 /a put
dup 42 /s put
dup 43 /e put
dup 44 /one put
dup 45 /colon put
dup 46 /two put
dup 47 /three put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -227 1 index div -344 2 index div 1459 3 index div 1099 5 -1 roll div]cvx def
/sfnts [<


00>] def
/CharStrings 17 dict dup begin
/.notdef 0 def
/space 1 def
/one 2 def
/two 3 def
/three 4 def
/colon 5 def
/A 6 def
/C 7 def
/E 8 def
/N 9 def
/P 10 def
/T 11 def
/a 12 def
/e 13 def
/h 14 def
/s 15 def
/anoteleia 16 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontInfo 1 dict dup begin
/FSType 8 def
end readonly def
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-227 -344 1459 1099}def
/UniqueID 4364665 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C91B322782D282AC603D1F5A452D1E7AE90B2FF78B151C731C717F5B5A443943ACCCD5D99BBDB2EE53A431787AB717C578726AEE035A1503E279148C8E81C874BF29CE0DC9BA8855320A64B150CDD74FA1F543FDA2D38617080DB57DE26D9A10BB68AC751F54F8D9AE7A4B57BE5C39081DEC21F661A1AF1A1B266C02F59961B05E1E924D47AC8EF68BE929EB14D12212FEB107CB3796509200AF8F6EFD06ED8E423D9514E7AAA59BCD3EDD985A9E9089995CDABD695C0177DD5253B51813B19865AB0EED13A5FBEB78E1BA1F31586E3A8F5E9E49C049D469BA5C614946CD927BEEF95778542B756ECE494F3108AB40B35E5752F1D627BFE0527D84ADA09D94ED8B6A0B0DED1E0E986D59D6730DCB31B1B4031BBC35DFBA6F5B8E37E5F8686D5FDEFE54B4E2F9956165073B4425C1FC6B6DA4DEC822C70E25AE481AB30B57DF98BE33DD78D405785CB3BC0F98BAE861D9F9F3D8E845766A86970ECDAB8CEA1DE251381542EBF4F24B7C794AE219652051FE65E6526CFFC507631B8973CEF4338388897347B6D0D2BEB8F59A101344E0AD725F578A9FD8D81B120C0B876E6EC86EA338D286A94445C45A69D42712387898BF65504F51F49711053F6296CB55CA25CED5F670BBE1F4224FF029C3E464D4DB46462BBEB036F11826E60215F1C96C118C1583EAD1C6059BF9B5B32D1BFCEAA97A1E275209FF065087ACB331FFFD46DBFB47A195925024DDC8D027D6DE4E135C63C3D6F35178C56B5AC0909DFD95F4ABBD0
96DF10630CF972801FBE7E7EC451B9FCE5AB574B7DF22E776056481EEF1D60AA4ECEACC84A0EA319349710CD6B1001B581E61AF3958B7222030DF3231136A63653081D84DC6FC9980B7AAF9C273A1BF95138F66592965A0C2CC07AD5ED5AD8187CAD4DF4431DDB76EFD8D85208736EAC0F2077EC00D029CB77A952F18CBAB798710F9EC445A1D728E643A6C877FD7C3C6C494E4854B755EF75467C353BE0550728286E92959CF5D21FA1D2C75D6A9AED8B62CD7C7F0CA07300646BBFBDB05FFF0B16786B090321741C82FE4DAE925CE04405B5CCC6489418500E7C9C4BCB4E7C5BD63020C2C0A7FB436F75FA377B7CAD1CB95EA31768F824FF7CAE0D74E2891A5D96E79C0B5889805DBCBA1477F52BD66296959104A546E800AD5BB58A4D484FA3E7D13953DEDF5F6E594AAA8DC63590B5E2525A1334C9366712A8CBBD9B00D620DAE1494816636156533985758903EE35EC62AFCA7F784BE3E5FD49E1E3D6D71A511689517D08F8F2BE1DC4FDDB86A4A6AF8A116F0D289DEFCE143794752D3876F2965DFA5BDC7AC0D0EFA15CD61C684A919CD6F97FAB22B401B82DCFFA549A3E849D49116A09BB175E4B32888C1E8103D9256530BB45C3F10CB4A449C74CEFB59F558C5E37DA88FD4E1FB5E315F4A596C76A21196BE3ECF1B48867BDD950318A732D5654964511A853D830C1D8F022912E19D831E0B731BD686E47ADED65D042518F552F328033C9E7FECB5518D2906B415E675BE8768EB67D73743604473AF5C556ADF5A1E9D940DB5679E6EBC037832A248919E7AB2B4902E277E2B45CBA2D4D326E510FB70CAD02F3E85AE1B886200BE05BAC79DAA055DCCCE6FB41EBB3A16DFFA20720EBB152562E26E19D6BDC6BAC34CFECAE3477C224187F0B2EED9D5077B09E75A43E12BCC44351E0E4C55F9BF4936CC3458615468BCBA54FD9FEA247A739F391085FBE24DDA2212C300251626ABCE0171CA219396914925AA3B97A846A87497E9E7FE78D820233AED6F873C6485606594E5CC8264F03427D64783D3D84121F40B7A97CCFD124DF8E9E0DECC88A54CEAA8D987E81BB68CDDCE0EA06895E850BC994DA50AD697E29B952AC742EFC865EC3AEFF0A827A5BE78F4A5D103F11D00EE164C7901A38FE2EAF60B36BE380CE61662959E38D049734107537DCB04FE498CD526822C9CD759B2A268DE1EE9DAE9ADA8E95AF339D0BF5460B1C8D396C24FFDE5BBC524F745FD6E61FD23430D19A4867D282E1073FA4FCA2B6062473CF67915781D517F52E99A6CB9BA574A8CBB41A2FF55773649B07BE7BA0717A70CFD90B2A801CB3D1B3813E445C8BD33DF32224D79033083F877432E2EF8F3A6C2D03A36111F05BA07C98858C533B97CF68F10F0B2533C6085E8AFF2C59F73436F767DE19133DD5EB46C730E40FAF8898671592079A5B9973665CEFFFDF572E
20423AAB9662948082289CB2C8D1AB01C565540DEC61D74C37E67E04E55559660A3B791685C80197BBB04955790BC7FF9F71CA7571C8943E7A366797E18363750489FA123673741FC23AD927EFDF74C985F8687C7620FD1F073D1E6E4648AEAEC42C791C582195C2CC48BE3D0AA9D28C36E7ACE0EB66C4949648096D545D4E8A0B9E85C87AD3CA3D5C6EBC8DD6FA9851258A89E9C1F0DB8093FF8463BCE65596F780F0014F2C0E537853599F06E917E5B66B276093A05C97C26C9873F656B1FCCD44411B2943B8ACA3EDD907FCE514D24729DC5535272C8060AF67C75CEC804B7F75631FB8DA52C9DCA6F2D3CF5A229DDE89E98FE3B2E717FC2015E69CE290BDD2DBE344E13C237245624667F9EE249144C67FE8DD313D4A1F275B29419FC038235CD9CCD79D23BED80734FA6FA85BC0AF27D1869B04F3B5EE52BE0AC4F880FEE122488B406DD40F020409C22DAA1C3DF4093F5DAC571707B73BEECE9883E083D65579863DDFDAE03AA5D7227EFB77E5ABEA3CCD21141BDA18EB88A87187DE7BDD41856F44D6A1AF79894564F6138C050CD7691033C05B43F0DC99F5A3C7ED3AEA6B1432F207D8B73EA260527CEA2A9512AA0D56716BBC9E871480A8B98A9D05BBB97A21183BEBE2291D3B3958222B163E4E2CEA6C7D19283529BDB92F52E0C8EA8E1A4B176D2DDA9AD2D189A3CAF0761F63AC5092E397239D958A4DA5958AF58F984F7096B1E43546CD7D1FAA1D9EF50643870E6508CB07E9F27609AFA57FFFE15932ECA3429EF48AEB30AD65DD73E0D6F331F7AD499038116C0691079958B6E68F57F4339C29624F28F9556C4378C7908AEFCA9458D97D36E378257826A14DD056AC5B8C8BA047303B442C909DF6BAED9BADB7D73E8AF22AE2D6567AFA95D832F33F277B6BC026CA43D972028286AE93C102BAB120C8921C503BA006B5E17EE4CE8B3D3E40EEB5413A8633187B0559CEB7DDA4945A803DDCB7A232698FEB5209976A919744C502127B157E710AD0E293A07A3955457324F4B26B90A73D5C342F32629EE14B6FCFD1929294D13F32F13CC621CD68F6934D812427E6D4012005E008E877073E5BCE5536C376A59B7E48D81F1119FB32EF7969A3873AC6E521A6F45106C8240907421779B5D1814C93B4FE469C3E5EBD5EB03CC4
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/Futura-Bold cguidfix
/F2.1/Futura-Bold renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
 exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 1 1 sc
q
0 0 1809 1533 rc
268 945 m
465.58093 945 l
465.58093 854.03912 l
268 854.03912 l
h
268 945 m
f
Q
10 w
1 J
1 j
0.60000002 i
0 0 0 sc
q
168 1045 m
565.58093 1045 l
565.58093 754.03912 l
168 754.03912 l
h
268 945 m
465.58093 945 l
465.58093 854.03912 l
268 854.03912 l
h
268 945 m
W*
0 0 1809 1533 rc
1 0 0 -1 -919 2589 cm
1187 1644 m
1384.5809 1644 l
1384.5809 1734.9608 l
1187 1734.9608 l
h
1187 1644 m
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 1809 1533 rc
1 0 0 -1 366.79047 899.51959 cm
/F1.1[ 32 0 0 -32 0 0]sf
-56.75 12.023438 m
(!"#$%&'&)[ 12.984375 17.437500 12.453125 7.968750 15.250000 19.187500 9.031250 0.000000 ] xS
5 w
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -919 2589 cm
1389.5809 1689.4805 m
1524.1 1689.4805 l
S
0 i
CM
619.5 899.51959 m
605.09998 904.91956 l
605.09998 894.11957 l
h
619.5 899.51959 m
f
0 J
0 j
1 0 0 -1 -919 2589 cm
1538.5 1689.4805 m
1524.1 1684.0804 l
1524.1 1694.8804 l
h
1538.5 1689.4805 m
S
1 1 1 sc
CM
632 945 m
829.58093 945 l
829.58093 854.03912 l
632 854.03912 l
h
632 945 m
f
Q
0.60000002 i
/Cs1 SC
0 0 0 sc
q
532 1045 m
929.58093 1045 l
929.58093 754.03912 l
532 754.03912 l
h
632 945 m
829.58093 945 l
829.58093 854.03912 l
632 854.03912 l
h
632 945 m
W*
0 0 1809 1533 rc
1 0 0 -1 -919 2589 cm
1551 1644 m
1748.5809 1644 l
1748.5809 1734.9608 l
1551 1734.9608 l
h
1551 1644 m
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 1809 1533 rc
1 0 0 -1 730.79047 899.51959 cm
/F1.1[ 32 0 0 -32 0 0]sf
-82.054688 12.023438 m
('#&\(\)%*+%&+)[ 8.750000 11.750000 19.187500 9.500000 16.984375 15.250000 9.875000 19.187500 15.250000 19.187500 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
1090 945 m
1287.5809 945 l
1287.5809 854.03912 l
1090 854.03912 l
h
1090 945 m
f
Q
0.60000002 i
/Cs1 SC
0 0 0 sc
q
990 1045 m
1387.5809 1045 l
1387.5809 754.03912 l
990 754.03912 l
h
1090 945 m
1287.5809 945 l
1287.5809 854.03912 l
1090 854.03912 l
h
1090 945 m
W*
0 0 1809 1533 rc
1 0 0 -1 -919 2589 cm
2009 1644 m
2206.5808 1644 l
2206.5808 1734.9608 l
2009 1734.9608 l
h
2009 1644 m
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 1809 1533 rc
1 0 0 -1 1188.7904 899.51959 cm
/F1.1[ 32 0 0 -32 0 0]sf
-53.570312 12.023438 m
(\(&!'*,-.)[ 9.984375 19.187500 12.984375 8.750000 9.875000 7.968750 19.234375 0.000000 ] xS
5 w
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -919 2589 cm
1753.5809 1689.4805 m
1982.1 1689.4805 l
S
0 i
CM
1077.5 899.51959 m
1063.1 904.91956 l
1063.1 894.11957 l
h
1077.5 899.51959 m
f
0 J
0 j
1 0 0 -1 -919 2589 cm
1996.5 1689.4805 m
1982.1 1684.0804 l
1982.1 1694.8804 l
h
1996.5 1689.4805 m
S
1 1 1 sc
CM
1420 628.125 m
1617.5809 628.125 l
1617.5809 439.125 l
1420 439.125 l
h
1420 628.125 m
f
Q
0.60000002 i
/Cs1 SC
0 0 0 sc
q
1320 728.125 m
1717.5809 728.125 l
1717.5809 339.125 l
1320 339.125 l
h
1420 628.125 m
1617.5809 628.125 l
1617.5809 439.125 l
1420 439.125 l
h
1420 628.125 m
W*
0 0 1809 1533 rc
1 0 0 -1 -919 2589 cm
2339 1960.875 m
2536.5808 1960.875 l
2536.5808 2149.875 l
2339 2149.875 l
h
2339 1960.875 m
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 1809 1533 rc
1 0 0 -1 1518.7904 533.625 cm
/F1.1[ 32 0 0 -32 0 0]sf
-58.148438 12.023438 m
(/0',&10,)[ 17.546875 17.984375 8.750000 7.968750 19.187500 19.187500 17.703125 0.000000 ] xS
1 0 0 -1 416.5 1461.6434 cm
/F2.1[ 99 0 0 -99 0 0]sf
-356.49017 37.01506 m
(!"#$%&')[ 90.189000 56.430000 52.173000 67.815000 79.398000 67.122000 0.000000 ] xS
/F1.1[ 73 0 0 -73 0 0]sf
90.296822 37.01506 m
(,&10,$/.)[ 18.178711 43.771484 43.771484 40.385254 18.178711 18.178711 40.028809 0.000000 ] xS
1 0 0 -1 540.15533 918.5 cm
/F1.1[ 32 0 0 -32 0 0]sf
-38.976562 12.023438 m
(!%&/!)[ 12.984375 15.250000 19.187500 17.546875 0.000000 ] xS
1 0 0 -1 959.79047 918.5 cm
-71.382812 12.023438 m
(.0/0#&'0!)[ 19.156250 17.703125 17.546875 17.703125 11.750000 19.187500 9.031250 17.703125 0.000000 ] xS
5 w
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -919 2589 cm
2366.5962 1955.875 m
2225.8025 1759.1045 l
S
0 i
CM
1298.4231 841.60645 m
1302.4109 826.75323 l
1311.1941 833.03784 l
h
1298.4231 841.60645 m
f
0 J
0 j
1 0 0 -1 -919 2589 cm
2217.4231 1747.3936 m
2221.4109 1762.2467 l
2230.1941 1755.9622 l
h
2217.4231 1747.3936 m
S
/Cs2 SC
0 sc
1 0 0 -1 1518.7904 349.10544 cm
-212.38281 -29.929688 m
(+&#!023&,0#'!34$,,31035&++023)[ 19.187500 19.187500 11.968750 12.984375 17.703125 19.187500 9.875000 19.187500 7.968750 17.703125 13.125000 8.750000 12.984375 9.875000 24.765625 7.968750 7.968750 7.968750 9.875000 19.187500 17.703125 9.875000 25.312500 19.187500 19.187500 19.187500 17.703125 19.187500 0.000000 ] xS
-167.57031 12.023438 m
(-/'-3'603%-,,0%'0232&'&)[ 19.234375 17.546875 8.968750 19.234375 9.875000 9.390625 17.546875 17.703125 9.875000 15.250000 19.234375 7.968750 7.968750 17.703125 15.250000 9.031250 17.703125 19.187500 9.875000 19.187500 19.187500 9.031250 0.000000 ] xS
-284.99219 53.976562 m
(%-/%"##0/',73\(-#30&%63&"2$'3#0%-#23'7+0)[ 15.250000 19.234375 17.546875 15.250000 17.437500 12.453125 11.750000 17.703125 17.546875 8.750000 8.250000 17.390625 9.875000 9.890625 19.234375 11.968750 9.875000 17.703125 19.187500 16.078125 17.546875 9.875000 19.187500 17.437500 19.187500 7.968750 8.750000 9.875000 11.750000 17.703125 15.250000 19.234375 11.750000 19.187500 9.875000 8.750000 17.390625 19.187500 0.000000 ] xS
1 0 0 -1 1416 757.5 cm
-47.007812 12.023438 m
(+&#!0!)[ 19.187500 19.187500 11.968750 12.984375 17.703125 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
268 1265.9805 m
465.58093 1265.9805 l
465.58093 1175.0195 l
268 1175.0195 l
h
268 1265.9805 m
f
Q
0.60000002 i
/Cs1 SC
0 0 0 sc
q
168 1365.9805 m
565.58093 1365.9805 l
565.58093 1075.0195 l
168 1075.0195 l
h
268 1265.9805 m
465.58093 1265.9805 l
465.58093 1175.0195 l
268 1175.0195 l
h
268 1265.9805 m
W*
0 0 1809 1533 rc
1 0 0 -1 -919 2589 cm
1187 1323.0195 m
1384.5809 1323.0195 l
1384.5809 1413.9805 l
1187 1413.9805 l
h
1187 1323.0195 m
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 1809 1533 rc
1 0 0 -1 366.79047 1220.5 cm
/F1.1[ 32 0 0 -32 0 0]sf
-48.953125 12.023438 m
(/0'%&+)[ 17.546875 17.984375 8.750000 15.250000 19.187500 0.000000 ] xS
5 w
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -919 2589 cm
1389.5809 1368.5 m
1524.1 1368.5 l
S
0 i
CM
619.5 1220.5 m
605.09998 1225.9 l
605.09998 1215.1 l
h
619.5 1220.5 m
f
0 J
0 j
1 0 0 -1 -919 2589 cm
1538.5 1368.5 m
1524.1 1363.1 l
1524.1 1373.9 l
h
1538.5 1368.5 m
S
1 1 1 sc
CM
632 1265.9805 m
829.58093 1265.9805 l
829.58093 1175.0195 l
632 1175.0195 l
h
632 1265.9805 m
f
Q
0.60000002 i
/Cs1 SC
0 0 0 sc
q
532 1365.9805 m
929.58093 1365.9805 l
929.58093 1075.0195 l
532 1075.0195 l
h
632 1265.9805 m
829.58093 1265.9805 l
829.58093 1175.0195 l
632 1175.0195 l
h
632 1265.9805 m
W*
0 0 1809 1533 rc
1 0 0 -1 -919 2589 cm
1551 1323.0195 m
1748.5809 1323.0195 l
1748.5809 1413.9805 l
1551 1413.9805 l
h
1551 1323.0195 m
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 1809 1533 rc
1 0 0 -1 730.79047 1220.5 cm
/F1.1[ 32 0 0 -32 0 0]sf
-82.054688 12.023438 m
('#&\(\)%*+%&+)[ 8.750000 11.750000 19.187500 9.500000 16.984375 15.250000 9.875000 19.187500 15.250000 19.187500 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
1038 1437.326 m
1361.5809 1437.326 l
1361.5809 1346.3652 l
1038 1346.3652 l
h
1038 1437.326 m
f
Q
0.60000002 i
/Cs1 SC
0 0 0 sc
q
938 1537.326 m
1461.5809 1537.326 l
1461.5809 1246.3652 l
938 1246.3652 l
h
1038 1437.326 m
1361.5809 1437.326 l
1361.5809 1346.3652 l
1038 1346.3652 l
h
1038 1437.326 m
W*
0 0 1809 1533 rc
1 0 0 -1 -919 2589 cm
1957 1151.674 m
2280.5808 1151.674 l
2280.5808 1242.6348 l
1957 1242.6348 l
h
1957 1151.674 m
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 1809 1533 rc
1 0 0 -1 1199.7904 1391.8456 cm
/F1.1[ 32 0 0 -32 0 0]sf
-89.515625 12.023438 m
(89:*/%&+*.;)[ 14.578125 22.421875 14.562500 9.875000 17.546875 15.250000 19.187500 19.187500 9.875000 19.156250 0.000000 ] xS
5 w
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -919 2589 cm
1753.5809 1326.4752 m
1928.1125 1255.8074 l
S
0 i
CM
1022.46 1338.597 m
1007.086 1338.1979 l
1011.1392 1328.1874 l
h
1022.46 1338.597 m
f
0 J
0 j
1 0 0 -1 -919 2589 cm
1941.46 1250.403 m
1926.0859 1250.8021 l
1930.1393 1260.8126 l
h
1941.46 1250.403 m
S
/Cs2 SC
0 sc
1 0 0 -1 540.15533 1239.4805 cm
-40.40625 12.023438 m
(#0&2!)[ 11.750000 17.703125 19.187500 19.187500 0.000000 ] xS
0.92050487 0.39073113 0.39073113 -0.92050487 913.95972 1320.9399 cm
-71.382812 12.023438 m
(.0/0#&'0!)[ 19.156250 17.703125 17.546875 17.703125 11.750000 19.187500 9.031250 17.703125 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
1038 1323.0956 m
1361.5809 1323.0956 l
1361.5809 1232.1348 l
1038 1232.1348 l
h
1038 1323.0956 m
f
Q
0.60000002 i
/Cs1 SC
0 0 0 sc
q
938 1423.0956 m
1461.5809 1423.0956 l
1461.5809 1132.1348 l
938 1132.1348 l
h
1038 1323.0956 m
1361.5809 1323.0956 l
1361.5809 1232.1348 l
1038 1232.1348 l
h
1038 1323.0956 m
W*
0 0 1809 1533 rc
1 0 0 -1 -919 2589 cm
1957 1265.9044 m
2280.5808 1265.9044 l
2280.5808 1356.8652 l
1957 1356.8652 l
h
1957 1265.9044 m
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 1809 1533 rc
1 0 0 -1 1199.7904 1277.6152 cm
/F1.1[ 32 0 0 -32 0 0]sf
-94.453125 12.023438 m
(<=:*/%&+*.;)[ 23.640625 23.234375 14.562500 9.875000 17.546875 15.250000 19.187500 19.187500 9.875000 19.156250 0.000000 ] xS
5 w
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -919 2589 cm
1753.5809 1355.8604 m
1930.2606 1334.3441 l
S
0 i
CM
1025.5551 1256.3967 m
1010.6078 1260.0162 l
1011.9134 1249.2955 l
h
1025.5551 1256.3967 m
f
0 J
0 j
1 0 0 -1 -919 2589 cm
1944.5551 1332.6033 m
1929.6078 1328.9838 l
1930.9135 1339.7045 l
h
1944.5551 1332.6033 m
S
1 1 1 sc
CM
1038 1208.8652 m
1361.5809 1208.8652 l
1361.5809 1117.9044 l
1038 1117.9044 l
h
1038 1208.8652 m
f
Q
0.60000002 i
/Cs1 SC
0 0 0 sc
q
938 1308.8652 m
1461.5809 1308.8652 l
1461.5809 1017.9044 l
938 1017.9044 l
h
1038 1208.8652 m
1361.5809 1208.8652 l
1361.5809 1117.9044 l
1038 1117.9044 l
h
1038 1208.8652 m
W*
0 0 1809 1533 rc
1 0 0 -1 -919 2589 cm
1957 1380.1348 m
2280.5808 1380.1348 l
2280.5808 1471.0956 l
1957 1471.0956 l
h
1957 1380.1348 m
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 1809 1533 rc
1 0 0 -1 1199.7904 1163.3848 cm
/F1.1[ 32 0 0 -32 0 0]sf
-96.695312 12.023438 m
(>,-4*/%&+*.;)[ 16.265625 7.968750 18.625000 23.062500 9.875000 17.546875 15.250000 19.187500 19.187500 9.875000 19.156250 0.000000 ] xS
5 w
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -919 2589 cm
1753.5809 1381.1396 m
1930.2606 1402.6559 l
S
0 i
CM
1025.5551 1184.6033 m
1011.9134 1191.7045 l
1010.6078 1180.9838 l
h
1025.5551 1184.6033 m
f
0 J
0 j
1 0 0 -1 -919 2589 cm
1944.5551 1404.3967 m
1930.9135 1397.2955 l
1929.6078 1408.0162 l
h
1944.5551 1404.3967 m
S
1 1 1 sc
CM
1038 1094.6348 m
1361.5809 1094.6348 l
1361.5809 1003.674 l
1038 1003.674 l
h
1038 1094.6348 m
f
Q
0.60000002 i
/Cs1 SC
0 0 0 sc
q
938 1194.6348 m
1461.5809 1194.6348 l
1461.5809 903.67395 l
938 903.67395 l
h
1038 1094.6348 m
1361.5809 1094.6348 l
1361.5809 1003.674 l
1038 1003.674 l
h
1038 1094.6348 m
W*
0 0 1809 1533 rc
1 0 0 -1 -919 2589 cm
1957 1494.3652 m
2280.5808 1494.3652 l
2280.5808 1585.326 l
1957 1585.326 l
h
1957 1494.3652 m
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 1809 1533 rc
1 0 0 -1 1199.7904 1049.1544 cm
/F1.1[ 32 0 0 -32 0 0]sf
-145.33594 12.023438 m
(9-//0%'$-/*/%&+*.;)[ 22.421875 19.234375 17.546875 17.546875 17.703125 15.250000 8.750000 7.968750 19.234375 17.546875 9.875000 17.546875 15.250000 19.187500 19.187500 9.875000 19.156250 0.000000 ] xS
5 w
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -919 2589 cm
1753.5809 1413.3994 m
1928.3119 1488.9874 l
S
0 i
CM
1022.5283 1094.2952 m
1011.4559 1104.9688 l
1007.1679 1095.0564 l
h
1022.5283 1094.2952 m
f
0 J
0 j
1 0 0 -1 -919 2589 cm
1941.5282 1494.7048 m
1930.4559 1484.0312 l
1926.1678 1493.9436 l
h
1941.5282 1494.7048 m
S
/Cs2 SC
0 sc
1 0 0 -1 128.92558 1214 cm
/F2.1[ 37 0 0 -37 0 0]sf
-84.341499 13.445023 m
(&\(\)*+',-)[ 25.086000 24.568000 25.937000 18.833000 23.939000 12.580000 25.160000 0.000000 ] xS
1 0 0 -1 128.92558 893.01959 cm
-84.341499 13.445023 m
(&\(\)*+'.-)[ 25.086000 24.568000 25.937000 18.833000 23.939000 12.580000 25.160000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
465 672 m
892.0954 672 l
892.0954 581.03912 l
465 581.03912 l
h
465 672 m
f
Q
0.60000002 i
/Cs1 SC
0 0 0 sc
q
365 772 m
992.0954 772 l
992.0954 481.03915 l
365 481.03915 l
h
465 672 m
892.0954 672 l
892.0954 581.03912 l
465 581.03912 l
h
465 672 m
W*
0 0 1809 1533 rc
1 0 0 -1 -919 2589 cm
1384 1917 m
1811.0955 1917 l
1811.0955 2007.9608 l
1384 2007.9608 l
h
1384 1917 m
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 1809 1533 rc
1 0 0 -1 678.54773 626.51959 cm
/F1.1[ 32 0 0 -32 0 0]sf
-117.73438 12.023438 m
(89:?,&10,02*%!@)[ 14.578125 22.421875 17.281250 18.093750 7.968750 19.187500 19.187500 17.703125 7.968750 17.703125 19.187500 9.875000 15.250000 12.984375 0.000000 ] xS
5 w
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -919 2589 cm
2334 2040.6102 m
1839.4722 1970.2609 l
S
0 i
CM
906.2157 620.76727 m
919.71167 613.39301 l
921.23273 624.08539 l
h
906.2157 620.76727 m
f
0 J
0 j
1 0 0 -1 -919 2589 cm
1825.2157 1968.2328 m
1838.7117 1975.6069 l
1840.2327 1964.9147 l
h
1825.2157 1968.2328 m
S
1 1 1 sc
CM
465 557.76959 m
892.0954 557.76959 l
892.0954 466.80872 l
465 466.80872 l
h
465 557.76959 m
f
Q
0.60000002 i
/Cs1 SC
0 0 0 sc
q
365 657.76959 m
992.0954 657.76959 l
992.0954 366.80872 l
365 366.80872 l
h
465 557.76959 m
892.0954 557.76959 l
892.0954 466.80872 l
465 466.80872 l
h
465 557.76959 m
W*
0 0 1809 1533 rc
1 0 0 -1 -919 2589 cm
1384 2031.2305 m
1811.0955 2031.2305 l
1811.0955 2122.1912 l
1384 2122.1912 l
h
1384 2031.2305 m
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 1809 1533 rc
1 0 0 -1 678.54773 512.28912 cm
/F1.1[ 32 0 0 -32 0 0]sf
-122.67188 12.023438 m
(<=:?,&10,02*%!@)[ 23.640625 23.234375 17.281250 18.093750 7.968750 19.187500 19.187500 17.703125 7.968750 17.703125 19.187500 9.875000 15.250000 12.984375 0.000000 ] xS
5 w
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -919 2589 cm
2334 2059.5171 m
1839.6731 2079.2444 l
S
0 i
CM
906.28448 509.18143 m
920.88837 504.35992 l
920.4577 515.15137 l
h
906.28448 509.18143 m
f
0 J
0 j
1 0 0 -1 -919 2589 cm
1825.2845 2079.8186 m
1839.8884 2084.6401 l
1839.4578 2073.8486 l
h
1825.2845 2079.8186 m
S
1 1 1 sc
CM
465 443.53915 m
892.0954 443.53915 l
892.0954 352.57828 l
465 352.57828 l
h
465 443.53915 m
f
Q
0.60000002 i
/Cs1 SC
0 0 0 sc
q
365 543.53912 m
992.0954 543.53912 l
992.0954 252.57829 l
365 252.57829 l
h
465 443.53915 m
892.0954 443.53915 l
892.0954 352.57828 l
465 352.57828 l
h
465 443.53915 m
W*
0 0 1809 1533 rc
1 0 0 -1 -919 2589 cm
1384 2145.4609 m
1811.0955 2145.4609 l
1811.0955 2236.4216 l
1384 2236.4216 l
h
1384 2145.4609 m
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 1809 1533 rc
1 0 0 -1 678.54773 398.05872 cm
/F1.1[ 32 0 0 -32 0 0]sf
-124.40625 12.023438 m
(>,-4?,&10,02*%!@)[ 16.265625 7.968750 18.625000 24.765625 18.093750 7.968750 19.187500 19.187500 17.703125 7.968750 17.703125 19.187500 9.875000 15.250000 12.984375 0.000000 ] xS
5 w
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -919 2589 cm
2334 2077.636 m
1839.2035 2183.7603 l
S
0 i
CM
906.12372 402.21988 m
921.33594 399.95981 l
919.07104 410.51965 l
h
906.12372 402.21988 m
f
0 J
0 j
1 0 0 -1 -919 2589 cm
1825.1237 2186.78 m
1840.3359 2189.0403 l
1838.071 2178.4802 l
h
1825.1237 2186.78 m
S
1 1 1 sc
CM
465 329.30872 m
892.0954 329.30872 l
892.0954 238.34787 l
465 238.34787 l
h
465 329.30872 m
f
Q
0.60000002 i
/Cs1 SC
0 0 0 sc
q
365 429.30872 m
992.0954 429.30872 l
992.0954 138.34787 l
365 138.34787 l
h
465 329.30872 m
892.0954 329.30872 l
892.0954 238.34787 l
465 238.34787 l
h
465 329.30872 m
W*
0 0 1809 1533 rc
1 0 0 -1 -919 2589 cm
1384 2259.6912 m
1811.0955 2259.6912 l
1811.0955 2350.6521 l
1384 2350.6521 l
h
1384 2259.6912 m
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 1809 1533 rc
1 0 0 -1 678.54773 283.82828 cm
/F1.1[ 32 0 0 -32 0 0]sf
-172.19531 12.023438 m
(9-//0%'$-/?,&10,02*%!@)[ 22.421875 19.234375 17.546875 17.546875 17.703125 15.250000 8.750000 7.968750 19.234375 17.546875 18.093750 7.968750 19.187500 19.187500 17.703125 7.968750 17.703125 19.187500 9.875000 15.250000 12.984375 0.000000 ] xS
5 w
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -919 2589 cm
2334 2096.3459 m
1838.1608 2292.0764 l
S
0 i
CM
905.7666 291.63617 m
921.14355 291.90063 l
917.17804 301.94629 l
h
905.7666 291.63617 m
f
0 J
0 j
1 0 0 -1 -919 2589 cm
1824.7666 2297.3638 m
1840.1436 2297.0994 l
1836.1781 2287.0537 l
h
1824.7666 2297.3638 m
S
1 J
1 j
0.60000002 i
2307.481 1197.1544 m
2437.3054 1197.1544 l
2437.3054 1283.8007 l
2437.7905 1946.875 l
2437.7905 1955.875 l
S
0 i
CM
1374.0809 1391.8456 m
1388.481 1386.4457 l
1388.481 1397.2456 l
h
1374.0809 1391.8456 m
f
0 J
0 j
1 0 0 -1 -919 2589 cm
2293.0808 1197.1544 m
2307.481 1202.5543 l
2307.481 1191.7544 l
h
2293.0808 1197.1544 m
S
/Cs2 SC
0 sc
1 0 0 -1 1457 1074.157 cm
-40.40625 12.023438 m
(#0&2!)[ 11.750000 17.703125 19.187500 19.187500 0.000000 ] xS
0.98768836 -0.15643446 -0.15643446 -0.98768836 1207.6123 602.22217 cm
-71.382812 12.023438 m
(.0/0#&'0!)[ 19.156250 17.703125 17.546875 17.703125 11.750000 19.187500 9.031250 17.703125 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -919 2589 cm
2437.3484 1342.7136 m
2437.3484 1328.7136 l
2437.2493 1314.4041 l
2437.2493 1311.3848 l
2307.481 1311.3848 l
S
0 i
CM
1374.0809 1277.6152 m
1388.481 1272.2152 l
1388.481 1283.0153 l
h
1374.0809 1277.6152 m
f
0 J
0 j
1 0 0 -1 -919 2589 cm
2293.0808 1311.3848 m
2307.481 1316.7848 l
2307.481 1305.9847 l
h
2293.0808 1311.3848 m
S
1 J
1 j
0.60000002 i
2437.4343 1460.1626 m
2437.4343 1446.1626 l
2436.9788 1425.7076 l
2311.481 1425.6152 l
2307.481 1425.6152 l
S
0 i
CM
1374.0809 1163.3848 m
1388.481 1157.9847 l
1388.481 1168.7848 l
h
1374.0809 1163.3848 m
f
0 J
0 j
1 0 0 -1 -919 2589 cm
2293.0808 1425.6152 m
2307.481 1431.0153 l
2307.481 1420.2152 l
h
2293.0808 1425.6152 m
S
1 J
1 j
0.60000002 i
2437.5281 1588.0885 m
2437.5281 1574.0885 l
2437.4834 1541.3011 l
2437.4834 1539.8456 l
2307.481 1539.8456 l
S
0 i
CM
1374.0809 1049.1544 m
1388.481 1043.7544 l
1388.481 1054.5543 l
h
1374.0809 1049.1544 m
f
0 J
0 j
1 0 0 -1 -919 2589 cm
2293.0808 1539.8456 m
2307.481 1545.2456 l
2307.481 1534.4457 l
h
2293.0808 1539.8456 m
S
/Cs2 SC
0 sc
1 0 0 -1 128.92558 1134.0098 cm
-118.53125 -8.953125 m
(=&'&3.0/0#&'$-/3)[ 23.234375 19.187500 9.031250 19.187500 9.875000 19.156250 17.703125 17.546875 17.703125 11.750000 19.187500 8.750000 7.968750 19.234375 17.546875 0.000000 ] xS
-83.726562 33 m
(4$'63/0'%&+)[ 24.765625 7.968750 9.390625 17.546875 9.875000 17.546875 17.984375 8.750000 15.250000 19.187500 0.000000 ] xS
1 0 0 -1 128.92558 808 cm
-115.75 -8.953125 m
(A&10,30B'#&%'$-/)[ 14.187500 19.187500 19.187500 17.703125 7.968750 9.875000 17.093750 17.859375 8.750000 11.750000 19.187500 15.250000 8.750000 7.968750 19.234375 0.000000 ] xS
-91.523438 33 m
(4$'63!"#$%&'&3)[ 24.765625 7.968750 9.390625 17.546875 9.875000 12.984375 17.437500 12.453125 7.968750 15.250000 19.187500 9.031250 19.187500 0.000000 ] xS
1 0 0 -1 678.54773 47 cm
-175.39062 -8.953125 m
(\)/&,32&'&3$/39CD3\(-#5&')[ 16.984375 17.546875 19.187500 7.968750 9.875000 19.187500 19.187500 9.031250 19.187500 9.875000 7.968750 17.546875 9.875000 22.421875 18.593750 21.640625 9.875000 9.890625 19.234375 12.453125 25.312500 19.187500 0.000000 ] xS
-257.50781 33 m
(4$'635&++023&,0#'!3\(-#30&%63#0%-#2)[ 24.765625 7.968750 9.390625 17.546875 9.875000 25.312500 19.187500 19.187500 19.187500 17.703125 19.187500 9.875000 19.187500 7.968750 17.703125 13.125000 8.750000 12.984375 9.875000 9.890625 19.234375 11.968750 9.875000 17.703125 19.187500 16.078125 17.546875 9.875000 11.750000 17.703125 15.250000 19.234375 11.750000 0.000000 ] xS
1 0 0 -1 134.42558 540 cm
/F2.1[ 37 0 0 -37 0 0]sf
-84.341499 13.445023 m
(&\(\)*+'/-)[ 25.086000 24.568000 25.937000 18.833000 23.939000 12.580000 25.160000 0.000000 ] xS
1 0 0 -1 134.42558 454.98044 cm
/F1.1[ 32 0 0 -32 0 0]sf
-111.29688 -8.953125 m
(E&++$/.3&,0#'!3)[ 30.765625 19.187500 19.187500 19.187500 7.968750 17.546875 19.156250 9.875000 19.187500 7.968750 17.703125 13.125000 8.750000 12.984375 0.000000 ] xS
-83.726562 33 m
(4$'63/0'%&+)[ 24.765625 7.968750 9.390625 17.546875 9.875000 17.546875 17.984375 8.750000 15.250000 19.187500 0.000000 ] xS
1 0 0 -1 1457 1186.8593 cm
-40.40625 12.023438 m
(#0&2!)[ 11.750000 17.703125 19.187500 19.187500 0.000000 ] xS
1 0 0 -1 1457 1303.5 cm
-40.40625 12.023438 m
(#0&2!)[ 11.750000 17.703125 19.187500 19.187500 0.000000 ] xS
1 0 0 -1 1457 1415.6434 cm
/F1.1[ 30 0 0 -30 0 0]sf
-37.880859 11.053223 m
(#0&2!)[ 11.015625 16.596680 17.988281 17.988281 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
465 215.07829 m
892.0954 215.07829 l
892.0954 124.11744 l
465 124.11744 l
h
465 215.07829 m
f
Q
0.60000002 i
/Cs1 SC
0 0 0 sc
q
365 315.07828 m
992.0954 315.07828 l
992.0954 24.117437 l
365 24.117437 l
h
465 215.07829 m
892.0954 215.07829 l
892.0954 124.11744 l
465 124.11744 l
h
465 215.07829 m
W*
0 0 1809 1533 rc
1 0 0 -1 -919 2589 cm
1384 2373.9216 m
1811.0955 2373.9216 l
1811.0955 2464.8826 l
1384 2464.8826 l
h
1384 2373.9216 m
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 1809 1533 rc
1 0 0 -1 678.54773 169.59787 cm
/F1.1[ 32 0 0 -32 0 0]sf
-15.109375 12.023438 m
(F)s
5 w
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -919 2589 cm
2334 2116.6096 m
1836.6523 2410.0366 l
S
0 i
CM
905.25006 171.64621 m
920.39636 174.31252 l
914.90845 183.61429 l
h
905.25006 171.64621 m
f
0 J
0 j
1 0 0 -1 -919 2589 cm
1824.25 2417.3538 m
1839.3964 2414.6875 l
1833.9084 2405.3857 l
h
1824.25 2417.3538 m
S
ep
end
%%Trailer
%%EOF

%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 2231.000000 689.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.14.1 (Build 18B75) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 2231 689
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 2231 689
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: Futura-Medium
%!FontType1-1.0: Futura-Medium 1.0000.1.0000
/FontInfo 1 dict dup begin
/FSType 6 def
end readonly def
14 dict begin/FontName /Futura-Medium def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /P put
dup 34 /U put
dup 35 /B put
dup 36 /L put
dup 37 /I put
dup 38 /C put
dup 39 /space put
dup 40 /K put
dup 41 /E put
dup 42 /Y put
dup 43 /N put
dup 44 /T put
dup 45 /A put
dup 46 /O put
dup 47 /D put
dup 48 /three put
dup 49 /two put
dup 50 /b put
dup 51 /y put
dup 52 /t put
dup 53 /e put
dup 54 /n put
dup 55 /c put
dup 56 /r put
dup 57 /p put
dup 58 /d put
dup 59 /s put
dup 60 /g put
dup 61 /z put
dup 62 /i put
dup 63 /M put
dup 64 /S put
dup 65 /G put
dup 66 /Z put
dup 67 /H put
dup 68 /R put
dup 69 /ellipsis put
dup 70 /period put
dup 71 /v put
dup 72 /a put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -1074 1 index div -591 2 index div 2707 3 index div 2164 5 -1 roll div]cvx def
/sfnts [<




00>] def
/CharStrings 44 dict dup begin
/.notdef 0 def
/space 1 def
/ellipsis 2 def
/hyphen 3 def
/period 4 def
/two 5 def
/three 6 def
/A 7 def
/B 8 def
/C 9 def
/D 10 def
/E 11 def
/G 12 def
/H 13 def
/I 14 def
/K 15 def
/L 16 def
/M 17 def
/N 18 def
/O 19 def
/P 20 def
/R 21 def
/S 22 def
/T 23 def
/U 24 def
/Y 25 def
/Z 26 def
/a 27 def
/b 28 def
/c 29 def
/d 30 def
/e 31 def
/g 32 def
/h 33 def
/i 34 def
/n 35 def
/p 36 def
/r 37 def
/s 38 def
/t 39 def
/v 40 def
/y 41 def
/z 42 def
/hbar 43 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontInfo 1 dict dup begin
/FSType 6 def
end readonly def
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-1074 -591 2707 2164}def
/UniqueID 4208071 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C55AC8266BDD340E521355EEF85826934CAE169B3813170EF21157F980278DEA2CE475C6187CB4267A04435AB7CCB196A466EDED31699319305B4913DB428C1F94A0BD0621B41DEC2216CE6C1E3EBC36487BA48FFFC5F94B7C8705655675D4E21DD11D422EFC346F0840F70FCA808FD56424C244741A5EEC370A3276C5E050182153744A195066BD7AA429092A1D177FBAF786F0AF577C4D7E983BFDF2B7FE821BBBBAF2C47B5474634AFDBBFC052427B10B220028671B12648B783B17726F5A54E520EF2DA28588F24F4FDCFFC182AEFE31664C0C09A2E3572A8BB1CD46F1363F6F5BCB94E3359C26F19BBD0E809EF00E6E26F7C863F96A1FD139B619D648FD89E582B694F323ABF07D6FA32B66E34772A1148FF24E022D80327E461E7DB6C2CAEBEB8F782DD062E249FC47E86858F571B06B78DD33642F64B09869B062EF399C742E6A2D85C368C0110A83996B48D0BA5EECD8DC7061FAEBCCBEE00C5C29F05DB0CE9106402CDCEA48963DC484907FDE6D0A8771403F25AEC5870058046D73B7450FDF20E42ED4B9D01320EF2B0002D8BBDB6F452AAE5911AC5AC5C98DC10078429CAF507B058E3AFE9AB87D2C93E357AF6C75FD0CF78DF939195A27AAA8A2975E5BD4C28C34D5B0FE4A34F128F5E4DE3A46A6140D7F74976F660D303F3AEF84770B8692BB0D514CAE48AA6B1C63134C703A4B0BB8E6B58BD06CD6303D1DEF63F990A51489939231FDEA7ADDF0A6245FE8408889EFB078A34C2830A75B8784A2B9733C5C4983276CF3CCAB2E30589476F856CEDC8F4ABDBCB3BBCAD3C637E2541FB5D4
6ABA46073F064544A8751DC829561651754BB8725A040894F7C2136FEAE12D4E698D2FD1A3B72C55BFB3F5AA4F41F749D25DD94BB2B075AAC396743CB793B06B5D375D1BC4482E524B9A6258FC5C2AB9EE93C0EA2034115C33C88F775332F6EA3F8CB1DB9195C7577AB9A423D21EC37AAA37FE7D7D870C1483F5122E2B14ADFC0C54FF34818B862C15922458CF342C35F251014EFCECB4C01DE7FDA66FC0AFCA5D15D637EBDCB601DF4C0B19AFB0B3D338BC740F3F5D563BB20739C0E1295B6137A939BD4FA987644C32A4DA369C6F97163619C808268EF11FD7484D0F09E56E30CA7F81D0CC5EAFB00451304B9EA9E4A17565E348C19D5F060B3D2000CCDA355711E574C3D823B582493FD2411E1B288C12BCE64AF960DDFBFC2564563271FAB172DC36F475744913D401FF700CCA5AA7DFFEC86DCFEFA8745AD15488B8724D86E6BBF433CB70D9C77ECBF822821A91485404245B18EE5159B1E271786BB3FC288EFB01EE7D9C755F8B0A0B9D22503924073BE6E20E2E81449FECC9EA462335A96700E6665DB43D6C90CFFC941B6D69537505EE9BBFAFF2A7EF29472FF49D0AAEEC0996C75D0EC64EB8DD2557F784C9D47325B59384DE053DD7BA5BAD55BD13D00BC00553C53732F2C55D213EF7FBC8867026A7E8EF19146CDF9C463DCDF3DB607896475909272482D90F752D26F866FC5195E243F4B1F61C197E9ADAB0F3B24EBF1CE278BCAF6A122E6C75E50BA2CDF3DA394DCA08AE286F5ED225D1FDE1A93D53FE546E1159DF02C17CCA179E89AA3B2BC3FEAEBD5B54AC9CB2D1A16CAD9EDDA3D3DE59AE77C70738B6CAF715903AD42783A271735C31274E21645535CCFBF0319A388A6C8D67C9D53B7D2933C00FAB651E64A7D0CC83632BD35BA8189A6D5EEF6E04BCF6230154896FB22FDBD2BE7BC09E2229AD0C97DAD053055F5F91479FEC79FBBAFA1758C703FF56702D39C59D90868619E8D65406AB6066A34D921632DED38535406D6FDA57C3D0064C027508EC76F79FA2CB4BD0E724E751A8D8FF73A873108C6B2404C1C0FEDC1D1BF97C81D9F802B55CCE36BEF48AFF1E2958EF9FC79D964E7C7E115C257B42C1716B1DA79E10F58803253CC919962092908C12B6A3EB3358DD5FACEB7E9C37642039F3C6203EB647BFF5F3F3B79EB3FEAAF3DF55117E23DA4A30F700ABC61E8E838E4FD82E7BD0505EADC52B36F5D40351E02D78C4D90C60DD14F24EBD9EE30835CC5C1BB40468A64823AD2FB7FCD7BF6F28CB3B9BA059CABBA17984CC9293E2C1173A7A24B9B3DA7621369CF9E83462C76B64E6C8F610CD3E54F9CDC9357162F209C07F5ECA8F7BC57DD571E0BE83A9791F042B1A6E796483F94137A667D0C4737EAE3F20A614605DEA0DB70576F4C8B0B28DB87D5D2131B6E08BA11FCEE63D2618D89D491DAABA678B44AADD961479627D63
B715DDA2CB6194C711B8C5747693BAC13422C04AA5AE84799CC7741DA74F561F94EB03EEB1BBE8BE34D8326C5A463A5D722BB3BD7F7E79F63C344E37F9736C43B8EDE714C5258026B17AC57180F0BDDF1C0C4022E92693A8F783723E35FD702F78BE425356A64BCCD7845DBB7E0465F01062A7B06BBABDCD695286E1F320CA3CCED424C6346856CB3AB6509F47FEDC2751A98F294E9B2A6F7073E9EB4AF6CE4CB816D3549154B9C836FAB7D3B385B855F19656EDF467AA8E3559E9EA6B995655ECB017E11379523A97E9FF200316EE72E44D0CF43705675FC5CBDE14D9D954E721E9B4B81883E524890BDE75DA21CF37321B7CA9C12DAC0F62E2075762249CE2F94B11C355DDF36311158440BE630B93DC5B98E7704CEB95409BA2729EBD0C6811F51AE699EC9890B7C95E948A4DEFA70F57513E50D487B794DD38E97871E32124ABA97D1615D8E82DFC310AE4D5AC4C64DDC823052D14B78E8BE744630BB2BD7E6AB3DBECEFC454C4B14697059F205521DD14D96A47170626DEF4AAB8D9E82CCD5A393EAD4850665E36C1C7C4029CBABBCED59B6BCDE62ACEBB8E60C4AD922DD1047AFDD57A1F977D612F63F0171E4347A2020BE7D82BEBF26680FEFA5C0078E3D1FE29CAEF2ED58E8A8D17741D5E468B255A2A5A1CECF8F5283BFF850CDF711610B6CA5695ABFE517FA4424A69341C9FEE082F9EAFBB871139C79ECD06F10763225F241C847184D610D5BEF92C0BB3CB1BFA2EFDC204FC6D46FA054A05587872ABC9893676349ADAC840C5B4EA8503C05BBF2AE4D178CC57F0EFE4B9B5DCDEAD2A53D428A2118EA467C82312388089A30326DD4B5A92201FDE2D46157B81A5E8998E645B1660A32885CB591E2D52B4160583B80CDB223E1C6B9ABE2EC6B8BB3B133993E300453042FC07F4E60BD4BA12F48A90529D9F52F81D034150DCDA2F5DC3CFF73E81A01623F629DC7645913D5C74CD348FD222134BE31C5E02631D8E4FD61479D874F1A92B86D3ED5F274739E5E993F27B72EBE0F4B741235BF0217E86C7CBFEEC22A4641639C2C8289130FFFC3107DB0190E6FA578394FBA55ABC04F1E89192CBDBF654BAE6018CD08B45213FC9140FD56A47D44A5DD17649612051EE5B854345371E2BB20DE79B9A499D5DF950D4691C50A338661C9B0B25509B96561D4051D97429AE7700B646CF4BCB12F51AB07F1277D2CAE239EF8B24894302D9D3B41605305E843FD930B2D1D8E19CD9407B2951C9BD82EF4EA617EA7D29BC7279B1656B68F2757F6A0AC61C8DF69C3533D9CC3C175D482E4482151AE3C332365776C3C9B77C4C0453446DFA82B2836A28F0CD9DA96776C5AF71E3E9C18BA696DD3BB48650D3DA28EDE1A7FB2EF0F3478B5CDBD3D90B465E912C09806DF72C8DB96BB7BC12EDF980636004AD184066AF306F7E834302AB941A6F8329A2EB15
0161618E6AEB16B02B658CA969E31C729D25A46034AE62AA9582358BE35FDF1FBE20999ED003BFBDBEBFBB3406A1EE2E2E1A180AD4C6286CB27BD717CF4F270E61E7E75CC6A21D251F9708A534AECE949287492103F5791603D1E089AAB704972FB6A985A21D4C765B952A74DEA61634110E431F775A3E09273AAF8CE5F68CC378C9A28F2016258EE471F4A6B750378095482FD044F42854EC5EDE79E6BF5F3279E8562609AA8FB831A31F1C46BCE58F5382B8FDD470661CFFDC8892CE2DDA7DDEFEAE9CB4C49C71511AE97B40ABEDF67DAE7DF375DC4C8BEE1AFC9DE67201C80D174521878CB240C683C9FFCF5331734AD415574B7CAD6E646283BC46D1AE11339535D2EC48BA9C13B96C2D688F798C25940FDBD610CD273E0BEC50037DE93B6B5ADF1CE257F9B2D7F76C0D6148966B598307FB1855DC5AEB0C1905C595230D0F8A6703BFFF47F90BFBD61D571A652C4407F48229283838D7199294FC3EA46B01E47F72E358A162EC6A8534F858B8353B160E785BE6F9BE03C0FA5C655457B3C70883F8424D6D2BAD1EDAE746A8A222CD4FABE20549E6CE7EFFFF6A17A2802752A9857615C95CBE1B57D975F056492257B079B51435ED4F50EF5DB51F16CA0672B195211903451095ADA33BCABE96476FB7025D6FCB8A910824E9358D9E5D75A74DC36A4031E21A85F119FD1FA83DE59CD9F32266788A178950192D4396CB0D908A532D2E57AE2710675101AE9891A38A11AAC7AC5D8D82354422AEE503ABC924302ED27ADB098C7BA1A056AAB467EDFFAB43F782C9AF1CB6023173E1D62A56B2930678FF995BA32D571B999459E655E2FF7F0EF792E716AD92996A6A7B34231E13AF7FA1EDA923E17F42AC2AF85F366ECE267BA12221840F530FE2A289D139BCDE80F86939F4492B5DCBF0DC202D3A08312BB0999A9AEA81A6B994F3CD04C482D1D6A042BDD43A0B63636BFC61BE6A1CA6841BC9596F72BFB3DECBC36FC13EA6EF1124F96E46FAF41FFE72A48E5000D2197C29A423D46180B6EFDB07E1E6AE60F0EE3E46317D588F94A496CCBCD05DB306E8C26561CE279126C5DDDA1B34802C3D365AD1A2BF164F34EC2E9F688818517C9ED484957462FFD3A1B330AAAD742CECF4568E6A986AD0685ED96E5822826A134304949FC151EF4CF8C90D89488162087304085EFB029DB9CE18FE6222A328CD5ECD09E1008C03C0F8EC08E2B66CA5FCDBA40CD78F00BD71829A5ACC6CDA904025FC45294DA3753A82E5AA7B6EAFB08D5AB0F4424AB7917FF516B7351024F002F74888936B64AF7FA0C35ACA6FF6C5BA585AC846703C6F22E579546A0424C748D810DDF7E2AFC8312B35530C3964944D1FCF80D8BDFE5C7A2DB24E5C0F138C9535BBE9E13A2DF878696CD11E5E3088C3A38BE9FED0F5D66CAA389A9065F7CFDFAC6631A4B54E25694B72D75FA029
8ED066F12F43C7B340F0DA72546BC4E7C9034A68A42CA31007CAFD626804C6781D8E6910B97CFB092F5BB507D3A7CB7CAF520CD61162BC7DDA915AD774F754CA63B0E6D69409B8A1981B8DC7ACC0B0EF63E91D68110E663228785D6673A8C418EC9D9AA5A04132A053A8C164CAA61B0FD152396A1C4B508FBE040D2369DDD84F655EC8C44338B6865B156A569A01B208FE2CEF150F1B901E62D2A704D5062272C05AE0B16F358658989A78E1651C004B3E363EE8AE7B01EABE0159EF813CF901BEC4B2F13FEBDE05D0BAC9F8DC162210762D985EB7DD41A602D38F1B9FC61C1CA714FF4EF4B76AB7D7B729D38C270A0FAA6581441581E79C6A2790FF7AFACCB381605D3714F1B7E2A4F7970041B271B98B54C557FBE93A5A6398BB8ED1E16E7A42A28137719B89891F6387FD5467F72DA920B76DB01FAACE20D8997AEC1E7BD62477821D0886E1B0BBBF7B716CC339DA4FEC574CF8B9D9D20465D4CC37FFF007B0BCB43DF1488B93DEF349C773DAB74B936730E9F64A89646E0B7DCD87C7A650A8CBAE86873DDBE7E7C0FFCFA5C72A9BE48EA9432CA4F407884240F1DC58830C7B38D39A8F8BA0578E206302B1302F0F8A7EB7B45B326643CF6E56F70E8EA6B039A25A608D5DC75C344F695BC132B709891275B5C7D59DD7131DBD09600A9A14A15D4CD1822E3228488468764A84E9E0975EEA31BD05C9C7C6AC79E9CDEA697D3C4FE0B36BA4CF7735C2374AFCF8BCA5E3242095209C73D5DAB2EA523C8F9BB76B4ADCB72F1252613BC073FA3D17C7BACAF9F9C25D0872F3B8E09F66E617A177A2AB61DDC3E5E078093D47876172FD5899CBFECC0B0C2D139955E2A7A81DD9009002B77C78E79C3FF776EF5027413FD0768F6EB2D98D298D24922D2B9169C6A2851BE8300366630D85FD1636D398E57FB9B5F689FC50E061A068F46F5E729E28AC060F119E28624DB02E9B91509C1555C572984DB67972A1581DD78E4C37B56FC192245F334B460B3D164C7CB100473BA047CD3D66CFA18728D7D4436C01B30C51CDAB44815C51310730E82941F420182F81BAFEC587CC56553B9F0C80D7A5614E80D76D2E72546AF3ED8C6070838D1794D779AAB73B5D800CA36C53A527E92CA59CA4307AADC7DC9FFD9790CA3E610AEE48930F20257B3B8D55413A4140211DFB8F4566EF702591695B3E95F35FD459F86FD91EC9BFB99DD5C95DC8FFFEF5319287C02C2499ADA7D8F0977292229BFD98F83F16EEA2AAA3CA8B593917E4EDA8CEA47330A937C45373C47FC508A02445AA9BA5C3F7D0DEF1F7131EDB655CB829EA4F11C6847FC2D83665967AF4B9249B264E1691569B49DC117A837F2598E736DB459013C32371CA312EA1244F701301E8DEE96F5F54B4CA2795260B5A4C9D04CCA9F671BC78B448BD7E60807C3E54AE6F51D64A29228EE3051241D78CC3C0FA
E8C91CE4E0668C771871FFBF1592F90853BFEE6B10E77438EE8490213577ADE616B30A88E59DA339E6C3412D5DF6026ECBFE513B180A2B73B4E1F1A6AA71F6FBE7187B8F20F2036DC672468945E03F7B2C059CB6C790891E5F1E1C12D874EF8A26D1DDD6B09321AC9357FFC1FB423FF32953A1E2F7FEA03106D63A171D0F3B257C4E1698B12D94EDE73A4D6BE3ABDB83435B7DCC0E7D4BA6B070196177E1F9BEE387FD7C6CD54B2C8C2EE55FA5FCFAFB6BAA89A5CB5D963F3EE23CC09839AC7728304DD963457E4AD99C948027452BBCAEADB5F75AF728B8F3216F98C86F7848F534E28C4D4657410372EAB79D6D4DC8EF7DA0E72216D9515E735130FAE77341662B240C48FEE480317190F59E6331D53C101FC55277D0A1C7898243A03466CADCBC585089002DEC1C1712F908549B2640BCFC886AF3D4501CFB939D807A501C8C163F55BDCAC32822AF63B08AA03A6F634FCA8C60AF8F0073F9D4D81792CD74FF2DD0F3167226CA36BE841B668B644F383FF10D00EDB48950214F50981ED11F746547E458E12FFA1575E5DD7AB37FDE59F2D69853B013540C2FBED7AC80EC41F8CC8415EC08A0CF2C2A45E7365C58DB1E2D4BA5B4C6F6A26DFEB12C77029EE74D2774E1E63D442983A8CDD8179D383DA11BCA19F97C483A1971D4600A11000E7200EA4E6A0B5E39DE3B1FA1F8180E1A795BE0DD92B38EE4111972D5AFDCAC4C781955DDBFEBAE7CD2E7BCAA6ADC6AE36C828D093219CFF5D815CC7F75D5C7770DDA39A43B5C7EB3D2EECE3B4C05ACFB22D4763D84BDD58B1C9F3BE5998848FFA59F9B061F487247507BBC67EEE905D43E87EC5173592DB4A4063E8B747D5938B1B672C6A086436EF779A4422472530B49
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/Futura-Medium cguidfix
/F1.1/Futura-Medium renmfont
%RBIBeginFontSubset: Futura-Bold
%!FontType1-1.0: Futura-Bold 1.0000.2.0010
/FontInfo 1 dict dup begin
/FSType 8 def
end readonly def
14 dict begin/FontName /Futura-Bold def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /U put
dup 34 /D put
dup 35 /P put
dup 36 /space put
dup 37 /a put
dup 38 /y put
dup 39 /l put
dup 40 /o put
dup 41 /d put
dup 42 /S put
dup 43 /t put
dup 44 /e put
dup 45 /p put
dup 46 /one put
dup 47 /colon put
dup 48 /c put
dup 49 /r put
dup 50 /two put
dup 51 /m put
dup 52 /s put
dup 53 /three put
dup 54 /u put
dup 55 /n put
dup 56 /h put
dup 57 /b put
dup 58 /B put
dup 59 /A put
dup 60 /T put
dup 61 /C put
dup 62 /H put
dup 63 /M put
dup 64 /E put
dup 65 /I put
dup 66 /N put
dup 67 /F put
dup 68 /O put
dup 69 /R put
dup 70 /L put
dup 71 /Z put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -227 1 index div -344 2 index div 1459 3 index div 1099 5 -1 roll div]cvx def
/sfnts [<




00>] def
/CharStrings 41 dict dup begin
/.notdef 0 def
/space 1 def
/one 2 def
/two 3 def
/three 4 def
/colon 5 def
/A 6 def
/B 7 def
/C 8 def
/D 9 def
/E 10 def
/F 11 def
/H 12 def
/I 13 def
/L 14 def
/M 15 def
/N 16 def
/O 17 def
/P 18 def
/R 19 def
/S 20 def
/T 21 def
/U 22 def
/Z 23 def
/a 24 def
/b 25 def
/c 26 def
/d 27 def
/e 28 def
/h 29 def
/m 30 def
/n 31 def
/o 32 def
/p 33 def
/r 34 def
/s 35 def
/u 36 def
/y 37 def
/l 38 def
/t 39 def
/anoteleia 40 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontInfo 1 dict dup begin
/FSType 8 def
end readonly def
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-227 -344 1459 1099}def
/UniqueID 4364665 def
currentdict currentfile eexec

2242A24DDC08EB5DCCA801A06D8EA93CE0EB91AA88A3D6171E93AB52033C7D9B20170A80A56A775FF8732B1AF00442D2BFD5AB1371C7F740CA72938934E1362FFB3070ACAE183DC5C3C12480F8A125F4EBB368B3A719CBD069454399A70127AE165671EBB89524AA658F4F23CE8D8F58D56DFF585B95B0767316849C3A07027427EA347C39C713DBCE808E2BECEC8EC2D9B98B2858D2CA3F0ED9E1B45CC5C0E6827F7F822D7F7E332F0E0951AF44A7DE755B707D9328AE9499944EA7F100251C4E87B01A8FF1F91B6C1E2011E978AEC2A0EF76AEA2D9402D7363950520BFCFD49747A14450E69AD2B4E3D8E0D303795D37DE700EAEFFC29835CA809DCE2753B49E30D51BE28AC825CA4352B0111F2855D85375B5DD3FBC91289032E6AA320F3C86C4581BDC9ABC615BB055CA41659D2604B6F5F2565F6FD717A23D6F706D9CDD444D0BB191CFA810D4FAD9D9B51CBFC7373CF08BA05417630E296903150361B61716B02CEE175C48A200717AF79D49CA3B5ED4C8D517D79D5544DBAA5E038A3E28EA53E4F15589A10D4B5E713418FF7860000E5A2462B543465288F5893CBDF657699CB8A6456FE70541E862FB198AE0F6C2CECD9F1A76D0AFF2D16E93B39C23E8FBAF67F9996DCD2619D573660B46B031E236AE919BB6365E7825C24982AD3E819C44D6FB63E4AC3A67291EEEE4777CD69D765CFE13DD37B7E06F2A69111BB424010BE1A4469BE582AA71CDC5452791BF3EB0A47E8200EA6DA55F5941F5369E9618148763C834C72715B382D89EC6ED5D89974019A3C3D14F265F5D2910FFE855918635261AAA371E50D996EC8A6CDA0770FF4915A145A7D444EDA6A3914D8BA193BBD2755FB1436DFAC38FBC055E597BD50E14E6AECAFCBF41D1496BE3E8AE9D432FCFA93C25CB59389E35138C438FA8ED44444FE3DF6F761CF9FA7E76362AC7EF94DA12ED1C16B999EA9A2292CF791C9353417845CFC1A99F03910CA168AC69CBD3CE80DEEED159CA66B59F229FC60EF6FE7CE1C401F12428D4842FB6F6867958E570174911C75D73726B7AEF12023F0EA1C54489F8F2F25530B7A07C3F08FBBFB5D2DFF4E350624A2B5765DCF70BEC046B5509AA1C9CD1D1CFAB962456B2EB9C509378C49FD8F667AF36EDDEDF47DF8BD36C6D940420C9E8A53E20A2CB8E071364365D251BCAAE97B49296F809178F71F5E34C6A7B07F48E110D6E054E02DC04528793FDEF6A4D4B38817B4A9C23F9F72414C17C60DF8CD28DCBBAC0F11D989123D53FA27B6A14B94969BD5A0481DE023902523CFFD6D2AD522E81557DFE560C0B1DA14F00F03D833360D51BB31C0F33FB8A5A650E5E2B15842B78768B2FBE9BAE9916D85DFAC6B8D1789A21044A9F76FDC1DB283FBF9B9526989AD46F0067AFEE46C42055E52F97183F8A7CB8E40CBECED4408213490DAF684B8F660428
0CC591D16D7DF8B45DC80FD152FC320B80D665D9CBBD023A46EE4B72ADE8FA07F486C77A07C8B595C0DAB9F594F0816D92CF5760EF26BBF2465DB6DE80B06F1FCD514677D3B7CA8085AF8FEBB8AA40FB289ABE61009C7B08B7ABF9581AF48A8D0E8387DADA2F100D015D54ECA775F7246D3A846E810F8B931679A458C1A5A4A7BD70B49723C90E55ABACCAD0FEBCB4A7E8B84378D0AF7B90C41BCAB6E3731D4A16CD87FA0578D209AA6F604C04AEE8492FFCB5623DC925D385F3D43E998985A6A4B1F053460FAF3A5321DEC176BB214B85CC3544E631C23BFE330C62702342C1B1453A017BE61199A7F7B8ED37A9FA253CEC51B2C28693CC34261963FF9BD9207ED22CB967E60555F198D5B342A1719AFC39E1859FB1212374EDDD62B59746C372C72B9C592B8BF7EF29D2158EED5720E8F3BC6C14241B70E4B55A86F4F1F71CF0856FCE5F3D247A65930C05201BE620507FB2BAF4F336B574E9AA3029E9E1DB98D61D91E17F1627BB417425EFEFDF918C876C46029754F84B1EBC7C8A0CE6763820664D860BD053E02119F95437BA5DD76A3A3EE2BF3121313B01C0172D7C82A7D340088DC7BD3A0CCE3B01C353C7E39513058AA38591BF34B63126E6557B62CA8976287AB0E495A9691689FA1346373949EB39DBF571B97A5B6C8D8A3D0AAB8068CFB7A4262CA9AB88AAD466784E6319EC03D32DAF423B36201D88E75122E1800669E056A1B0B5FB0FEFB65E07C2A63724D24B8965DB785D7D964E7DA806E56EDA36F83ACA009416AE2DFCA6EEB543BEC6C639E70EA8E4FB12D983F6D5DFCB0080F30B88F221778DE9004EC957CADFDD87D035DB398095E987AA3AD5715A34FD1F674EAB4FF08A08FE5E2E704F088F8F0E91199A8D15618EFADB4A45BF445B9165AD2AE4315738D7AD1C809BE5EEC9B0E81EEF91AED1D026803D92E46796F9A1E696269F394A97DAC8F651E24CCBB629795FF5240C597CA5E900788E8EE85BC6953ECDAF67146833BB6196E21D561171BD674CBFA7D2A18A4F246D1B8683EF9D8C2C2543B8D0D1182AE620AA1FE37BBCD2A70467CA94A16F364328CAAAEDFD088ECEBE28D3BBAD81361EFECC5C1659B85D654BC8AE64CC6453F41C1733492925A97E3B9C657394545A8DE7B688BEFF15A7612F6A2CBA70CFE2821803B8CF50262C756918EE05AA296F04B22EB502E6ECF05B68FA18C1A5166F1ED85C4D4D3396081133CF3505C555C5166F78A5C2C763E368634DD01115DCF7FC060075F0C2EAA7E53825A70FCF35DD83E5ACC5FC78A4FD0ECCAFADDDE92F600AB5463077E9B739246E641CDF19ACD3116F61179012BEC53E829350941F8C0B5B314731CA164516466075F3B8EC925373C240B604E028FA31D55D9E8099CB8BFEE09927382E440F0F8C05EDA508ABB451296B30FC9302C6FD4B867885A9CF55CC1EFBA70149
4D05C55D611D6E235A7165F6BA9A89597625B322EEE2703655D8D8F2572E9223AC9CE91C44D858B907F351D9AE0AE1D65BD691CED85F2727F59672E13FB14CD53A8251D1A558E3204DDE5F0131DE743A08E3289F7670047FEFD0B8227A59A2D599B7755D991993B6F6F3C598921D8B91036B67BE0371527417AD85024EDF04473C32F5D29DEA7FE4D1C3EBFDBEC4F72D4C88246F3B64C465D0C2A2A746827DC774ADA28A02A49F9FABA13CD6348DBB1569CD585485EFFCCBE7BC23AE7433003BE9DCE960FC130479C8D1795E00246C4E3BB98349F79B6980F33B891E697EE7E05D8CDC5D8875FF3847A6AD94842C50834AA9AE51746ADB921923E631041325FB02C416C4231BA0BAC447FAB481A4D0493BD36E99413D7F334731C0E78CA570CEC3C9B217D7693C59CAA4B0B454C8B0A6C462413FB7A899D9FB87B18904B45D953DB5154D5F158D715122EE7FC467C195D9079AC6675DFB5656D01139E3F67EF7F6DB366043CDCE90F8334F90F17F9ACB201D89E334025F87D56AAA8179FC4DF394318064D76E02C90144032B9399621F5B65065EAC6DDBD642367884E9705EB230E0AC1E00C0151E21B4BA56A627EFC877B56349ECAD060E8E7C29BECE5F1120867E26BAC8378E368FCEC6E2962BF1E15A62E1CB197C8F77CEB4841370D5526E1BD188E723F2E0604E9706EEE051D3889DAA5D5960B91E569607E50286496918D6330160996ABC2627F97939C0EE7356152E1EA69749183F8DBCBD3DFF4641DD0BFC5E812AC062C0F53728D32F23A19B4CA600453E7B2498F6B560045D1C583364E6FA8BA2C50EEB7DD846F31673793857598A4D4783E66CA8F527759327AEBC1794DB391CFBBF79CE3A56E981BB81F1764A0E4CD9D4F83039136555351B52BCD277E749D74B294B558B702D73EB2824EED24CE876E3F4D5FE431250C5B7DADDB5F2E2C823572B7897022F402F4DDAEAF1308EFF7BA0EB4DDB461B5DAE3E6976425198FDFDA2D0A92B2FB06420F6F900DFE38B6A03FF75CD485B935A68AD01EAA35458809E1037A37C74A0D7C364D07CD1337E6483829AB2689FD3DE89852A4452F6AA0CE66E16D0E47515EBEA08EF55B2C4ABA5C14B5F712D1EEABBDAD3B75F769B594FE4E60114FA5960A72B8E0C4CF3CEED6613A71CBD38EE684F4F80733EDCC177C8EA892E5366B24B872C1D846E520C815DCB5245A22A940EF5C04DF0395F80870D053C284D8D0D63A601E1A4DB97C5F2042F8A3DBC6B2E0C816F2D1D84AFB82D4AAB12ACCFAAEC9778704010E4AA1CE1F8C47AE03936E546C5C9D7786119D847A427881249F2928D403A64FB3AD354112D5D71440BE37853E8D5E9544203F5C4FF6907C85479A26F8E31E8B42FB52A32326B22782A45739FD222896D350B75CF512BCBE368CCECAFDC9A875C5B5E3AA763577F1BE57BAF812139F4128F


0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/Futura-Bold cguidfix
/F2.1/Futura-Bold renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
 exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 1 1 sc
q
0 0 2231 689 rc
397 579 m
618 579 l
618 525 l
397 525 l
h
397 579 m
f
Q
10 w
1 J
1 j
0.60000002 i
0 0 0 sc
q
297 679 m
718 679 l
718 425 l
297 425 l
h
397 579 m
618 579 l
618 525 l
397 525 l
h
397 579 m
W*
0 0 2231 689 rc
1 0 0 -1 -340 837 cm
737 258 m
958 258 l
958 312 l
737 312 l
h
737 258 m
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 2231 689 rc
1 0 0 -1 507.5 552 cm
/F1.1[ 19 0 0 -19 0 0]sf
-86.311768 7.217041 m
(!"#$%&'\(\)*'&$%\)+,)[ 10.260742 14.036621 11.234863 8.423828 5.603516 13.312988 5.863281 12.589355 10.743164 11.401855 5.863281 13.312988 8.423828 5.603516 10.743164 16.040527 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
620 579 m
950.0293 579 l
950.0293 525 l
620 525 l
h
620 579 m
f
Q
0.60000002 i
/Cs1 SC
0 0 0 sc
q
520 679 m
1050.0293 679 l
1050.0293 425 l
520 425 l
h
620 579 m
950.0293 579 l
950.0293 525 l
620 525 l
h
620 579 m
W*
0 0 2231 689 rc
1 0 0 -1 -340 837 cm
960 258 m
1290.0293 258 l
1290.0293 312 l
960 312 l
h
960 258 m
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 2231 689 rc
1 0 0 -1 785.01465 552 cm
/F1.1[ 19 0 0 -19 0 0]sf
-42.698975 7.217041 m
(!-*$.-/)[ 9.212402 12.821289 11.401855 7.839355 16.253906 14.073730 0.000000 ] xS
4 w
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -340 837 cm
737 217.81094 m
737 200.05612 l
1290.0293 200.05612 l
1290.0293 221.29353 l
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 673.51465 667.5 cm
/F2.1[ 25 0 0 -25 0 0]sf
-88.762497 9.6250153 m
(!"#$#%&'\(%\))[ 20.375000 19.650000 16.950000 8.500000 16.650000 17.775000 17.450000 7.625000 17.500000 17.525000 0.000000 ] xS
1 0 0 -1 505.5 495 cm
/F1.1[ 21 0 0 -21 0 0]sf
-36.785889 8.1872559 m
(01'2345)[ 12.960938 12.960938 6.480469 12.212402 11.412598 5.926758 0.000000 ] xS
1 0 0 -1 785.01465 495 cm
-76.207031 8.1872559 m
(56783945:'2345;)[ 11.617676 11.515137 10.007812 8.777344 11.412598 12.776367 5.926758 11.617676 12.591797 6.480469 12.212402 11.412598 5.926758 11.617676 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
397 431 m
950.0293 431 l
950.0293 377 l
397 377 l
h
397 431 m
f
Q
0.60000002 i
/Cs1 SC
0 0 0 sc
q
297 531 m
1050.0293 531 l
1050.0293 277 l
297 277 l
h
397 431 m
950.0293 431 l
950.0293 377 l
397 377 l
h
397 431 m
W*
0 0 2231 689 rc
1 0 0 -1 -340 837 cm
737 406 m
1290.0293 406 l
1290.0293 460 l
737 460 l
h
737 406 m
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 2231 689 rc
1 0 0 -1 673.51465 404 cm
/F1.1[ 19 0 0 -19 0 0]sf
-42.698975 7.217041 m
(!-*$.-/)[ 9.212402 12.821289 11.401855 7.839355 16.253906 14.073730 0.000000 ] xS
1 0 0 -1 673.51465 337 cm
/F1.1[ 21 0 0 -21 0 0]sf
-67.388672 8.1872559 m
(<=>995:'2345;)[ 12.571289 11.412598 5.229492 12.591797 12.591797 11.617676 12.591797 6.480469 12.212402 11.412598 5.926758 11.617676 0.000000 ] xS
1 0 0 -1 114.5 545.5 cm
/F2.1[ 25 0 0 -25 0 0]sf
-102.3875 9.6250153 m
(*+,-$./$\),01&-+)[ 16.400000 9.575000 16.175000 17.525000 8.500000 17.000000 8.500000 8.500000 17.525000 16.175000 12.250000 12.425000 17.200000 17.700000 0.000000 ] xS
1 0 0 -1 136 403 cm
-130.91251 9.6250153 m
(*+,-$2/$\),0\(3-1,44)[ 16.400000 9.575000 16.175000 17.525000 8.500000 17.000000 8.500000 8.500000 17.525000 16.175000 12.250000 17.500000 25.250000 17.525000 11.800000 16.175000 12.725000 0.000000 ] xS
1 0 0 -1 168.5 79 cm
-163.1125 9.6250153 m
(*+,-$5/$673%148%'$9%+08)[ 16.400000 9.575000 16.175000 17.525000 8.500000 17.000000 8.500000 8.500000 16.725000 16.600000 24.800000 17.525000 11.575000 12.725000 16.600000 17.525000 7.625000 8.500000 17.525000 17.525000 9.325000 12.875000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
397 107 m
622.49194 107 l
622.49194 53 l
397 53 l
h
397 107 m
f
Q
0.60000002 i
/Cs1 SC
0 0 0 sc
q
297 207 m
722.49194 207 l
722.49194 -47 l
297 -47 l
h
397 107 m
622.49194 107 l
622.49194 53 l
397 53 l
h
397 107 m
W*
0 0 2231 689 rc
1 0 0 -1 -340 837 cm
737 730 m
962.49194 730 l
962.49194 784 l
737 784 l
h
737 730 m
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 2231 689 rc
1 0 0 -1 509.74597 80 cm
/F1.1[ 19 0 0 -19 0 0]sf
-44.276123 7.217041 m
(&$%\)+,'%/)[ 13.312988 8.423828 5.603516 10.743164 16.040527 9.166016 5.863281 5.603516 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
627.0166 107 m
848.0166 107 l
848.0166 53 l
627.0166 53 l
h
627.0166 107 m
f
Q
0.60000002 i
/Cs1 SC
0 0 0 sc
q
527.0166 207 m
948.0166 207 l
948.0166 -47 l
527.0166 -47 l
h
627.0166 107 m
848.0166 107 l
848.0166 53 l
627.0166 53 l
h
627.0166 107 m
W*
0 0 2231 689 rc
1 0 0 -1 -340 837 cm
967.0166 730 m
1188.0166 730 l
1188.0166 784 l
967.0166 784 l
h
967.0166 730 m
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 2231 689 rc
1 0 0 -1 737.5166 80 cm
/F1.1[ 19 0 0 -19 0 0]sf
-69.774902 7.217041 m
(?\)@@-A\)',*!\))[ 18.267090 10.743164 11.077148 10.928711 13.424316 16.003418 10.743164 5.863281 10.093750 11.401855 10.260742 0.000000 ] xS
4 w
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -340 837 cm
737 622.14923 m
737 606 l
2568.4792 606 l
2568.4792 652.29242 l
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 1312.7396 261.5 cm
/F2.1[ 25 0 0 -25 0 0]sf
-43.862499 9.6250153 m
(:;<=>)[ 17.025000 19.225000 13.175000 17.475000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
849.0459 107 m
1064.0459 107 l
1064.0459 53 l
849.0459 53 l
h
849.0459 107 m
f
Q
0.60000002 i
/Cs1 SC
0 0 0 sc
q
749.0459 207 m
1164.0459 207 l
1164.0459 -47 l
749.0459 -47 l
h
849.0459 107 m
1064.0459 107 l
1064.0459 53 l
849.0459 53 l
h
849.0459 107 m
W*
0 0 2231 689 rc
1 0 0 -1 -340 837 cm
1189.0459 730 m
1404.0459 730 l
1404.0459 784 l
1189.0459 784 l
h
1189.0459 730 m
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 2231 689 rc
1 0 0 -1 956.5459 80 cm
/F1.1[ 19 0 0 -19 0 0]sf
-19.649414 7.217041 m
(@%B\))[ 11.077148 5.603516 11.875000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
1066.5374 107 m
1292.0293 107 l
1292.0293 53 l
1066.5374 53 l
h
1066.5374 107 m
f
Q
0.60000002 i
/Cs1 SC
0 0 0 sc
q
966.53735 207 m
1392.0293 207 l
1392.0293 -47 l
966.53735 -47 l
h
1066.5374 107 m
1292.0293 107 l
1292.0293 53 l
1066.5374 53 l
h
1066.5374 107 m
W*
0 0 2231 689 rc
1 0 0 -1 -340 837 cm
1406.5374 730 m
1632.0293 730 l
1632.0293 784 l
1406.5374 784 l
h
1406.5374 730 m
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 2231 689 rc
1 0 0 -1 1179.2833 80 cm
/F1.1[ 19 0 0 -19 0 0]sf
-37.211426 7.217041 m
($\)+A,C)[ 8.423828 10.743164 16.188965 15.966309 9.166016 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
1294.5208 107 m
1624.55 107 l
1624.55 53 l
1294.5208 53 l
h
1294.5208 107 m
f
Q
0.60000002 i
/Cs1 SC
0 0 0 sc
q
1194.5208 207 m
1724.55 207 l
1724.55 -47 l
1194.5208 -47 l
h
1294.5208 107 m
1624.55 107 l
1624.55 53 l
1294.5208 53 l
h
1294.5208 107 m
W*
0 0 2231 689 rc
1 0 0 -1 -340 837 cm
1634.5208 730 m
1964.55 730 l
1964.55 784 l
1634.5208 784 l
h
1634.5208 730 m
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 2231 689 rc
1 0 0 -1 1459.5354 80 cm
/F1.1[ 19 0 0 -19 0 0]sf
-69.802734 7.217041 m
(-"/%,'D\)&.D/)[ 13.526367 14.036621 13.795410 5.603516 9.166016 5.863281 11.438965 10.743164 13.220215 16.977539 11.438965 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
1628 107 m
1891.0293 107 l
1891.0293 53 l
1628 53 l
h
1628 107 m
f
Q
0.60000002 i
/Cs1 SC
0 0 0 sc
q
1528 207 m
1991.0293 207 l
1991.0293 -47 l
1528 -47 l
h
1628 107 m
1891.0293 107 l
1891.0293 53 l
1628 53 l
h
1628 107 m
W*
0 0 2231 689 rc
1 0 0 -1 -340 837 cm
1968 730 m
2231.0293 730 l
2231.0293 784 l
1968 784 l
h
1968 730 m
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 2231 689 rc
1 0 0 -1 1759.5146 80 cm
/F1.1[ 20 0 0 -20 0 0]sf
-39.169922 7.7021484 m
($\)+A,C)[ 8.867188 11.308594 17.041016 16.806641 9.648438 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
1894.4253 107 m
2127 107 l
2127 53 l
1894.4253 53 l
h
1894.4253 107 m
f
Q
0.60000002 i
/Cs1 SC
0 0 0 sc
q
1794.4253 207 m
2227 207 l
2227 -47 l
1794.4253 -47 l
h
1894.4253 107 m
2127 107 l
2127 53 l
1894.4253 53 l
h
1894.4253 107 m
W*
0 0 2231 689 rc
1 0 0 -1 -340 837 cm
2234.4253 730 m
2467 730 l
2467 784 l
2234.4253 784 l
h
2234.4253 730 m
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 2231 689 rc
1 0 0 -1 2010.7126 80 cm
/F1.1[ 19 0 0 -19 0 0]sf
-69.802734 7.217041 m
(-"/%,'D\)&.D/)[ 13.526367 14.036621 13.795410 5.603516 9.166016 5.863281 11.438965 10.743164 13.220215 16.977539 11.438965 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
2131 107 m
2223.2871 107 l
2223.2871 53 l
2131 53 l
h
2131 107 m
f
Q
0.60000002 i
/Cs1 SC
0 0 0 sc
q
2031 207 m
2323.2871 207 l
2323.2871 -47 l
2031 -47 l
h
2131 107 m
2223.2871 107 l
2223.2871 53 l
2131 53 l
h
2131 107 m
W*
0 0 2231 689 rc
1 0 0 -1 -340 837 cm
2471 730 m
2563.2871 730 l
2563.2871 784 l
2471 784 l
h
2471 730 m
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 2231 689 rc
1 0 0 -1 2177.1436 80 cm
/F1.1[ 19 0 0 -19 0 0]sf
-8.9711914 7.217041 m
(E)s
4 w
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -340 837 cm
737 689.81097 m
737 672.05615 l
1404.0459 672.05615 l
1404.0459 691.11108 l
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 737.5166 195.5 cm
/F2.1[ 25 0 0 -25 0 0]sf
-140.2625 9.6250153 m
(?@<;$ABCDE?;<ADB)[ 25.875000 14.250000 12.475000 20.050000 8.500000 8.850000 22.775000 13.700000 23.125000 17.725000 25.875000 19.225000 13.350000 8.850000 23.125000 0.000000 ] xS
1 0 0 -1 507.5 23 cm
/F1.1[ 21 0 0 -21 0 0]sf
-25.875732 8.1872559 m
(;48>6<)[ 8.520996 5.742188 8.172363 5.229492 11.515137 0.000000 ] xS
1 0 0 -1 730.52295 23 cm
-50.587646 8.1872559 m
(4395;F,395)[ 5.742188 11.412598 12.591797 11.617676 8.520996 6.480469 9.187500 11.412598 12.591797 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -340 837 cm
1413 691.11108 m
1413 672.05615 l
2568.4792 672.05615 l
2568.4792 699.44446 l
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 1617 195.5 cm
/F2.1[ 25 0 0 -25 0 0]sf
-187.625 9.6250153 m
(*@EA;FAG@"$;!"A<$E@=DE"*)[ 16.150000 14.250000 17.725000 8.850000 20.050000 13.300000 8.850000 17.850000 14.250000 19.650000 8.500000 19.525000 20.375000 19.650000 8.850000 13.350000 8.500000 17.725000 14.250000 16.950000 23.125000 17.725000 19.650000 0.000000 ] xS
1 0 0 -1 956.5459 19 cm
/F1.1[ 21 0 0 -21 0 0]sf
-24.204346 8.1872559 m
(>6401)[ 5.229492 11.515137 5.742188 12.960938 0.000000 ] xS
1 0 0 -1 1179.2833 19 cm
-26.72168 8.1872559 m
(GH8>64)[ 10.192383 12.591797 8.172363 5.229492 11.515137 0.000000 ] xS
1 0 0 -1 1459.5354 19 cm
-24.845215 8.1872559 m
(2345;)[ 12.212402 11.412598 5.926758 11.617676 0.000000 ] xS
1 0 0 -1 1759.5146 19 cm
-26.72168 8.1872559 m
(GH8>64)[ 10.192383 12.591797 8.172363 5.229492 11.515137 0.000000 ] xS
1 0 0 -1 2010.7126 19 cm
-24.845215 8.1872559 m
(2345;)[ 12.212402 11.412598 5.926758 11.617676 0.000000 ] xS
ep
end
%%Trailer
%%EOF

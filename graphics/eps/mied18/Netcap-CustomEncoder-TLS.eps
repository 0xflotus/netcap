%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 1951.000000 809.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.14.1 (Build 18B75) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 1951 809
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 1951 809
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: Futura-Medium
%!FontType1-1.0: Futura-Medium 1.0000.1.0000
/FontInfo 1 dict dup begin
/FSType 6 def
end readonly def
14 dict begin/FontName /Futura-Medium def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /P put
dup 34 /a put
dup 35 /c put
dup 36 /k put
dup 37 /e put
dup 38 /t put
dup 39 /T put
dup 40 /i put
dup 41 /m put
dup 42 /s put
dup 43 /p put
dup 44 /L put
dup 45 /S put
dup 46 /period put
dup 47 /n put
dup 48 /g put
dup 49 /z put
dup 50 /C put
dup 51 /l put
dup 52 /H put
dup 53 /o put
dup 54 /J put
dup 55 /three put
dup 56 /space put
dup 57 /I put
dup 58 /f put
dup 59 /r put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -1074 1 index div -591 2 index div 2707 3 index div 2164 5 -1 roll div]cvx def
/sfnts [<
74727565000900000000000063767420000000000000009C000000046670676D00000000000000A000000004676C796600000000000000A40000088C6865616400000000000009300000003668686561000000000000096800000024686D7478000000000000098C0000007C6C6F63610000000000000A08000000406D6178700000000000000A4800000020707265700000000000000A68000000040000000000000000000200C80000033806080003000700003311211127112111C802702BFDE60608F9F82B05B2FA4E0000010000018D01BE0251000300001121152101BEFE420251C4000000000100B1FFE401C700FA000C000037343633321615140706232226B15239395229283A3B5070385252393A292850000000010057FFE7042F0623002B00000135323736353427262322070607233E0133321716151407161514002320272627331E013332373635342726021294335B42416861353319E824E0C9CB8080A8C0FEE8DBFEE987380FE1128B70714A4A6F4102CDC7213A80633E3F2F3072DACB7877BCD47671FED0FEF8CD569870774B4D769C4226000001006CFFE4052E0626001B0000011126232207061514003332373E0137110623202726111037122132052ECAD8EEA3A40148EE7B56306739C8DCFEB5EAE9C3F0017DD005B5FEECA9ABAAF6F3FEB228144430FEE771E7E901490127E7011B00000100B9000005250608000B000001211133112311211123113301A2029AE9E9FD66E9E903AC025CF9F802D1FD2F0608000100B9000001A20608000300000111231101A2E90608F9F80608000001FFDAFFE4028F060800110000011114070607062322273716333237363511028F19193C75C1927F72554A68282A0608FC19B3586445894CC7394F4FC503E7000100B90000036806080005000001112115211101A201C6FD510608FAD3DB0608000000000200B90000041B0608000D0014000001112311213217161716151404232733203534212301A2E90108C263644C85FEE4F16C570141FEB54D0273FD8D06081B1B4B82C6D4F8D8F7EF0000000001006CFFE4044A0626002C000001072627262322070615141F011E011514070623222726273716171633323635342E022F01241134373633200422BD3530324F614040A89ABCAE8E8FD4C9838120EC1028488A6D901935543A95FEC38585C6010B0522705C1C2037365271453F4CDB9FD58B8C7777D83488346492702D4B3F37193E860102AE757600000000010017000003C506080007000001112311213521150263E9FE9D03AE052DFAD3052DDBDB00000000020060FFE4043E03E9000F001F00000133112335062322272635340033321701141716333237363534272623220706035CE2E28BA0CA84830106C5AA87FDEA4B4D757D4D4D4D4D7B744E4D03CEFC3266829295


00>] def
/CharStrings 31 dict dup begin
/.notdef 0 def
/space 1 def
/hyphen 2 def
/period 3 def
/three 4 def
/C 5 def
/H 6 def
/I 7 def
/J 8 def
/L 9 def
/P 10 def
/S 11 def
/T 12 def
/a 13 def
/c 14 def
/e 15 def
/f 16 def
/g 17 def
/h 18 def
/i 19 def
/k 20 def
/l 21 def
/m 22 def
/n 23 def
/o 24 def
/p 25 def
/r 26 def
/s 27 def
/t 28 def
/z 29 def
/hbar 30 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontInfo 1 dict dup begin
/FSType 6 def
end readonly def
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-1074 -591 2707 2164}def
/UniqueID 4208071 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C55AC8266BDD340E521355EEF85826934CAE169B3813170EF21157F980278DEA2CE475C6187CB4267A04435AB7CCB196A466EDED31699319305B4913DB428C1F94A0BD0621B41DEC2216CE6C1E3EBC36487BA48FFFC5F94B7C8705655675D4E21DD11D422EFC346F0840F70FCA808FD56424C244741A5EEC370A3276C5E050182153744A195066BD7AA429092A1D177FBAF786F0AF577C4D7E983BFDF2B7FE821BBBBAF2C47B5474634D05515B31A06882B531C914249F4E57D98E8EF6802138026B46605A8B2B049E86263E30D3EE64056B25D6C147CF5BA4EF274DB350971EFE38E3431B88A9C1CC3A14D3CA99F1F7D68E486178EDDA1F567FF7656E97DC9AF8CF5592ED4E7892E669A054B11A11BBAE7A899D396249B7544370CB1FF0288435E0B1D7F19057BCB419BCBC66BCF968F947B3A057DE414791FB1ABB0BFF07B8EF5848ED483C39FFE140192CDA74E788CD3C2B0DD9DF13FB2D38A043EDE48437E63F0451F8FFA2E581A366FD990B7B264052C6E0B5E3AE7BC15BD3ECE10843B1C4B5E0584E85FFC9BE1375BD8DA16EBA17408008FEEC389F855CF1B973F84BE72C42A36599281AF5DBD3B65FD82EF0EE8C20F75FD9FF31FFA58B828473A924FC0BFE5654D1DDFAA8743D74CF3F12AEA181D5D925675252EDB63E42F5A0C5CE5513CB33CBB90BA8930376F48EE58D3616E1C224E7FCBBCD4555E5292459F22BD2DD0E2E2FC89B4AB2B2392105EDDA386CCAEFDFBA0BFD32A902F7CC017667C035D352B8E81FA681F1E4CB5C66868B4A0BE32A350527FC7FB93D10E62C807E27BC9145526B
2B6B3EFB16E914755A6F635539F31002CB4BCA8DFD6AAA3823F8EDC0CA2496478E20BA2BF32F6B229BC14E1817A5D4D052F2BB44AF34BE4F328C380F2B422E119784E9FF98EB7D524F546697B3723F2757E71ECE573DD70B85A576C4E12015214A39FFFAE1D016AD20C9D11653B936459514BF525EC45188EC0F0FCBCD2D6130D7030A664B40BAD960CA337FDBEDAD3D45ED6F1A155FF3B720130E5485460BC23ADC8A5E169F2D6A3EC531568C9B7990B43832510B025F27AF04D6D17D68032C544CCB5B87F0BAB4DE590C4A0637972B70D8E4CFEFAEAD3EEB215DA4C2D159438DB8621F6D8F43CF345C72232CE5DBE5BD20D13848F3FD9311E13FB254149D6CA1CF30DA37FC9D8A1C5E0BF293F870FDE8045CA7DD9067549367EEAE2CD96D7321BEC94983C258F17213F74E17A333D6F3C4DCD0C7D2DC7251521801B2D8E0E367726126216F85D70784851E445801D7D0A40801F1584B5E5EE74CAC82A57957A7579DB5EBE4610C221B07177AB3B61DBD60E6F2B75414F7C772D51FAA412198870749BF2CEAB6E959FE20D1C8EA69342FDC3D457948B94C336D68B1450CE6420D644F03D66FF767182F29FA3CD8F558D5AEC483F4563BC9A8DF36B3D8D395F2ADB45C49E42F1817FFFD424373C96601AE1612AE1B3F0DCA584C8C773DCC92B6648979B0C11FAB14E35924A90EF97FE648AF605DD3DC70C08A3A99C89F35BBA94E94A181FF7F304CBD7E6C096F781F3FA7E508AE311A8B1E6B2D3502F52B76CE0CA13E555C4132676CF89B337B121FD1DE37901087DD939E86BC6D6B98FAC7BF71950E97FCD95E04272D41BF6624520111DB32AEEE0802E3F8D83CD931CC04A009674D51C87CADDA8C205AD51242C4BA5BA5069F472931B83B6FB42529501DA818EAB80967F7403FF8824EC69340168EB99C003AA86D6B257F4A15D24A7E6950ED26F126F118B2F3D834503CEAF946D9FF479AA0081BAACE6035DBA32A94D6D7F4AC70BB3121FDC7C49A4E69A4009ECE9E97F36F63A2F4C769E9367910474E731266E89DD2191D216FD8F1B1BD2E6C1BEDAA70C9B4EB2890CAA822BC3B5D8B2E7BB49E7704298AD2641AC6EEF783526E9502E33715D1D85BCCABF8C7FF9CB85C1AA8B50B295D36275C45F55E4AF938D428460D536DF28B7276889A41D6EE90E72B866689AE6008EA2A22AA14EDA408A1749C5592F28C50C15713744799DC5806CFC5A3D6B8FD7E12BD2172299676EF21648AF0ED27865E0EC1B0C9886FE435DF0C0B2460694BC629CA9ADEC9D51C1AB013B5C5ABEEB2222DA0364DC82C0A90DBA812D6AF17AD8E1F5128AA734D5544820F461554DB1AF2ECD589275D85F2638697A8855C820F1A14301A389E551B037132D94330003F7C713AA90C61098A83B7E31E9B53DE87E30A666CFA6F1AD9B6DF5E97FC240D7677160A1A2C261A4BDEF1
EFEA442A24A0A3D938E5F0DFECB5743709CE960CEC7DEBAC6ED2E1D1D525B443CFC58014E0376636221F367706AB376B8AB83511D33FB173C7BE9631C90A973A94E8BBD451E943CA339187943C89911234392417D761C27EE7D9E8E178DBB25E8F87C2DB229AEE800D31E2ECC7F06E52905CA68BE01E67FD22359CEB2164B1EC097BF0E86A4206A574332974D388F8886DE68FAB5C6A2C64A2DEE486811D671064EFEA3A0EE5A3E2E4617EFFAF345352DA64034C52D21665FC993ABF3C08BB8F9C76CEF3DC673170433EB884BB6CFB101AB68EE5C72D5ED77579E883B184023F1709D1BA673BF4DF983A14F4453E752AACCEC52F7FB23524A131A038632D38DDF4505C9F8BA8B24BBEF5F9832C4565233F174DE18E310608DD3584D754DC02FF71B046F50D738789E3DBB9A8CD89CC421C357BE865F70199B70B3FC252C791793B2336C22E456439D525B2E4462E40FDE76C84F2FE644D136DBFC2824891802DAA4870F179BDFCB0F8BAF550116291622A5CF6CEDEDF251FC4885DD274B88F9DFE02150C9062DFAA4FD24C6FF9FCDF183BD0248859106EE97B5E6F34CEDF4BA0E310CD3153DB680DCE061A02C7D037CE52BE12B3EADFEBF14501D3EE208CC15B32AB2FD17603131F95E8E8953B1536A615ADCE118C7366D43B930E62F81137034E8E9C0F20CC8B7718AC091A32FCBC9D8CA4CA16B02C54870252B2A1B37626D3BF3CEC025AC8E5301926A0C5D0217B48241AC1640C4182A38EE2F89549069EB2CFFDDBB9F38A98658603D0355E8A9DF82D69166377CFD784ED5D1D7DC53AC8CD6851BBC4AEA25A9D6E0A8BDA8259D2621A71274FD3FDDB9EA739214D9EE253D46048322EED79FD0149484F795651C1BEFB85C5FBFE41379F3E7034AF608E1288791E100CEC8F09A283BD8A14EF0DC63378422E3842BF7221A043BCA32BAC5FDC95F93051247377738D187FCCB8ED312B24BBE0A2DDCC2CC795ACB6B6AEFF3175A619F381CDF3047ACAE4FE1E24B356342A283954A0ECD536AF7A0D7038FFF78431A47EB293A4E049287E46F5FEEC79136410C0670DD9807634CC39E539C657099078A1503D79CEE19E5374FDDFB3EB65364BE6118FC8DD2DC4E33140A4D00EDCB8F140F754DA8BAF8AFF4753EECA16F0E24AF0B7CA1240A86CB6A04374F0074F0DAA5AFE61DAD9E93F7C0465EF5D956A3A18C0D88151AC703BC153804A5A96CCD900ED4E65CEC3CF0E13B1BCDF1BF46411E0E3EE1742AF520BE04647E02663CF848194C8871291BD0242F3D15AC2FDB6749C66CBD062885A3223EF8FCC1325DDAD9AF17D9D834FD3BA3E35621CD41CE31A191F19CB27322EB3DA0CD81F1FEEA71B028A070E859E1796EBEA9AC6DF6AEB2072E33D028313C356B74FF6D6CE89924DFD66FA7A9E7755D9A24B8CA2151EA3643FCCA50676A572BFF3797F9EBF5211
01A68488474B77F5BA2C683FBA0A8B948106BF6ADABD708F8BB231DE49ECAFB06021F81EBD7E956EC6CE9EBB764075BAD616B52A0BD1DEFF2036F2AC3C2404B3A9FF361C11822D61C40986AC43F4F171EAC97C62DDCFC5893EFE5D2454178047DEA27B05B6F6B9735A05E2FF46B0F9FF0F5ABF45135081AF3F5D386AFA133B66F3AE5F29934CBD816C2A9A22FDF66A81E44122CD27F7DCBD42A630E2AD02ABE58766992ABC85698910CA44A739456507FB954D354A2A537B649CE3FB071AFD46606B1A63EA13B918376167992BE401330EB8F092F3B80273CE67FFAAC49FEFEDC08D332E87DD31FC927144D12E0BEB039AEC0D9F0F5324461A4F027AF8D1570A217A070BC0198418F88A9FB0F9888E6462DF590EBA7E7D03847DB1502D589651A2712DDC65BA398EFA13017CD1B193670C2FE462F15F139BF09F401B013C2955611C2D323C55BC49C62E643345263FDD8B4F2712092AEBA9C710A1DF1C9622B6EC0E7A9242FCAD8E755BC0753B3AE7C08FAFC6C45F05552F8CF94BA39ED339059B505117ED52DF510F782DDDD1145711286CE22DE2F5C8B33178FE7DB12DA2969D6144A4EE82EC533272D85072AAFC8D41C67E954DAAED5900C264791EF288B3297DFB2861C05F0BB33890CCE1787EC6DC4AE61C7028F158BEE2EA8773F006F1BD201926864211D8C3E890DA7C613DCA09A708F70B2B74FA2CE94EE480D833350E647A9F37CF047772FD7ED0260699923E9300A5B57FB7D83F3B1FFB89DD1BA4A3478633BBF186255F27D995F49FECD89FCDB332C6B57D7FAEE1597254E8DFEBF2796BA96907B31EA2FA873F6F9BF2586C0632E61947B822D3E440BC044485254198CD14BC29BC17ABF197FA1665757DF9FC842F08D4414B76DEA54A1404709E88449D2FD75087DE431C938D0F49E56D170E27D734B7E62DA140AF9080F90A707730BFFAC1CF4C10A1C32399C41D097AF5048DDF040D6ABB6C81DF728BB30EEAAD0DBEC7F31089C27FF860D3782A18506B368D5DB5F99F7D620E8294ED91CA67820C31A2A509DB2919CC89381DDD07010979DBC73D76EFFE9F6D6F7E0FB1C1DEAE3E4564F566C508B4A387C1B15F5BC02652EBF14C2919E4077380DCC31B875FB69C43B603F6B11E03E46A887C3B5A50E692028727B4AA795A717CD6ECDA645DBC24D5EC4268382FB15AE14E7E9BEE02DAD80EE75D2B40C0F1B360F055593E910976543E0E10D854F2B27FE2A5AF1475F9FB4EECBEA4458D87602A846D2649EDB81318F280D3C6A9FA2124544ECA264CB9CC011E274E235D39431B0F78399FA9EE7CD482CEC27D58B7AF07FFAFF9B92CE99CA380555E9D3F7434E7E8CC402909F07BA3793EC7D1B6313072FD09158FB2745A2C996F6FA4B26BD38E4BE1FEA448AFD5DC0B
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/Futura-Medium cguidfix
/F1.1/Futura-Medium renmfont
%RBIBeginFontSubset: Futura-Bold
%!FontType1-1.0: Futura-Bold 1.0000.2.0010
/FontInfo 1 dict dup begin
/FSType 8 def
end readonly def
14 dict begin/FontName /Futura-Bold def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /D put
dup 34 /e put
dup 35 /c put
dup 36 /o put
dup 37 /d put
dup 38 /space put
dup 39 /P put
dup 40 /a put
dup 41 /k put
dup 42 /t put
dup 43 /r put
dup 44 /l put
dup 45 /B put
dup 46 /u put
dup 47 /f put
dup 48 /s put
dup 49 /T put
dup 50 /L put
dup 51 /S put
dup 52 /C put
dup 53 /i put
dup 54 /n put
dup 55 /H put
dup 56 /x put
dup 57 /J put
dup 58 /three put
dup 59 /F put
dup 60 /g put
dup 61 /p put
dup 62 /E put
dup 63 /h put
dup 64 /m put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -227 1 index div -344 2 index div 1459 3 index div 1099 5 -1 roll div]cvx def
/sfnts [<



009600C800F20108011C013401560166018401C801DA02120240027A02AA02D8032C03500378039003C603F0042A0464048004BE04DA04F40502051805380000000100000022006E00070046000400010000000000000000000000000002000100000000
00>] def
/CharStrings 34 dict dup begin
/.notdef 0 def
/space 1 def
/three 2 def
/B 3 def
/C 4 def
/D 5 def
/E 6 def
/F 7 def
/H 8 def
/J 9 def
/L 10 def
/P 11 def
/S 12 def
/T 13 def
/a 14 def
/c 15 def
/d 16 def
/e 17 def
/f 18 def
/g 19 def
/h 20 def
/i 21 def
/k 22 def
/m 23 def
/n 24 def
/o 25 def
/p 26 def
/r 27 def
/s 28 def
/u 29 def
/x 30 def
/l 31 def
/t 32 def
/anoteleia 33 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontInfo 1 dict dup begin
/FSType 8 def
end readonly def
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-227 -344 1459 1099}def
/UniqueID 4364665 def
currentdict currentfile eexec

B87FC8EF2E2D5D1395A0FDD718021E1265917D2F757BE84E29B85A7A1EB68C12DA6C12B3CB6971E109517F6F9B626D9FAB74A4F47E8810DF71C5BC24FAB8155D14902F17EB1B00B6F8068E59695C3ECE288ED910912301A1FDB3E45E3AA7504BE84AD6E961DFFF156EB25BD7561A38CD8745562186E29E68FC121496A1862FA380796935A273639843E1AA0970E2200ED885FCEA56B23EABA506AA52E760C5D1863C96C24E8E43965CE7BC83412C4E4E4EF3A70FE6143196E2DB653355B0DDD86E7F920696C1E43F453913DC4A590A1980966D6254EEE33E4ED77AFF732D434905C5665E956BBDF30C631B225C04BC0FF17FBB4739496B74329512DF85662D10F48B9157916290E72361E10FBFC58B7413D453EB9A50FB67C7037410EFC9D122A4084802CD66848EA7A14B819BA4104DAA0F0A6F4EF3788F8D57137A85A38BF523E6A6AC69C948A66FCCCF296F9C165146FED432DCE3DD4E100E4164150DEAC49506D179A7AB3ECF9656B9E7472615D608E032A96AD74D34EB48AD7B8BAA9071CCD47B5FF5ADB0A545818EB9249A0F16E2BEFFADCB5AEA13FDBD8E10A0C05DE3C1F16F2B3C083B9E340135F020646363E7279811FB29634CC50F9E2C0918FDFA0DE1BF15A0934058FBF41F56F196D0905E27E085C45E7E59B278CBD4435430CDD0ED63CF782496BA05F352896A4442803BF19C5AB4764873FAB23986D21EB3D1AE204A40BF7E8E6D07B384B65A3D139D936C54EA3A269336F2A1072501C402DB03C7532CA9F7AEBC83B19A5A6550B2FCBCBAAB4BE3843ED6B102ACA707CBB34D3DB825F564B2578F96996B5C0C95EFF922FC90672F7BC4302439EBC12A2A55ADE9E082849C759263BF6971D9BE251FAAF3FFE147394A508EADB7AAC28F22E55BE40BCF570CE2711522B19CAD3BC64497E65EEC549EFEB50B742AB61251DFFD31CD76F38C03542E36B316E48FB17132C2837D5A707504E2EC92D067FFB458B2592F36B7F115D4A8881625292BB26EE0DECB914C02DE49EB21542E50FF55A312875D4AB1F114A584D118D8C27FDF2603765342779169A3C9C02C80329BA457AD3927792636EEE6DE2D6D5179D9E40428DF74648AC34B8C0DE307ADCF51CDEE71810D19B06F06E92D0D5895F936B8F4DFBB1A922D4EB5F18281097C65FCE3DD4B2C1A2850F632831CC96CF4CB48E3D83A06F993AD80FDE663A6CC843DB937E9BC9145A76E2D5BDD04BC31D92E4BC71D5A95972E3BA822B8B8512AFB3D2BB6B7CBB8F2ACDBAD5DF75D0D44C552200F37A542682FEBE4C693A96BDADFE1F5CA98DFF4D91D6F525CB81783110557DF7585AC29D01C55E1279D41DE7D59C367231B27A6B5D3363CA69106F1A94BAA1C9331218DC780E626F744966C07E5687CC71709C859B7AFDF617F60F5B7241E754096144A6B6CAB7787BFB0F1AC98BF2CDA79CFA4
521AA93E32DAC483B7AEC1F3A0F0A6F67D112D96CD0791FB9588C143534627F4013609DD72200E0775AF4CE20F87ABF3F012072148EE22948CBB1B23DD152F9E0CEF7B9A052B72EC7753C45489292235C0CCD2F59D56FE0B1E5353957C9C2C5B574E2B7540FB54E288D220B1E881E7AF85554BB769D58B9099BCE063D7A200FEB284E4651A9CE264E0116A3AAC9453B30F9A10E7BC317F24404D5A057A8F65FC4313AAAB8513768B6FC377DC3C9093BEA30A41691FC2BE282DB219B845EE30306C6ACDC331F03BB1A158294CB3523DC9AEE3F4A3C2F18D328B70564748DBA31B7FF6D8F2902A48ECE1F0CC6843654C001685A661DB620A45051EF3063A0AA139D89B9E3086DF9BCEE6AC80FD5B6BF917E89B07201E9C41B49DDBF497D9EC9AB54513D55CEB9D821B3B30667954C9A449D8A0C9B231C2298B5410C7AE36E1D78127D6E59FB998BA1741E48E30EB1526974D4E02C96D05D7704EB988E157CE7F93735CE317EABCD39588074C04481162AD42BA3DA317B09D09B4BF3FFD978694006C0DC1FD66D458CFB1BA92044AEEF5225C575DC3BBB14317B666AFFEEF9D82FEC1ED06E493F5EBDCAEFCA349E52F3961259F1C42F1CBC1246F15E2AB0550AF8136374F87BF564A17E28675FAC4E43E803B687F19F7D3E3510BDA40447830EC3AD8BFF2C8DAA2992075F1DD4A594417482E20E85935988D46EBF7C301075CB90F94C7FC751E92603540C957637241684494C729AB5116F4AF515E4909815A9C5DDE49A17A1170A8DEE68B23888667546E8641115B1EFE47C9DA3D686905D3B2141A2AFF87D33DEE21218DA596B1E89B6D013BACAF303672C405ACC3A4D1081508DAAF54B1EEE2C83A4498420E1F59EC7A4A7EF15715399E86C8AB0758319A25B37539D307CD8218BA61B48EA5A9672B99DAEB0914111F64A7D22682836E5519118E3C187DC852D86549DBCF9B7088CDE38E30588630ED997AFF0EEE7F1FB4C9D2E2AC7D74B91F30E05B9A3FF9135EB593AE8AA0A676AE96FEE4F8FAB07D5E36C9D7DF02A226899C7FF0ADD951E1BE0D2ED6DC9FCF103F38C60DAD88852659B6E942E3CAD0C7BE89A872A3D2335FC66212A3E382F3166F2E202039C5A23C0D6DFA51C4B1A88D969F50E2341837462778BB0A35E721AEF5B134BB75D4B766354B331678C6649D8566D89CE69C9D67B80FA0232A3C96FBA5AC776CDBF64DC453E875348D87837F863E803E851603827F0651C9260B0B6AE2E7F9C877A3D36DFF21AC7E2837343F9306A7B9D1ED2177CD223F66361DFDEE5E0E741B2F4F64178F9C361C0800945B4867DA12AD427C334FEA3CC158E7E1B15F08FD5B17B0DC0A40FCA6B19A0D137A6F67ADC5DA2DFD97E0C0570C15E3171921CC44ADE49243927640F767E1A79D1FC9ED87FA9D0F86DBC8130B691842C03E5FC7AA64A92BDBDF0B7AD4
B490DC00CCC9944FA8E3995DCF7F1E62B500240C551D4E87466F9AC2E5846BDFB136DDCA09FE11C8FFD1D266F02BA544CF1721E08E3B74DF9465EE6541741055758614E73CFEB1A3E5ACD62F3F13F84561984438BD6084282C5A07A846525F2AEFE5714ED61C9B7E0685684FAA1545C625240AA0DB11EDC2675617C06A9ACA957B12489B3AB5C37FFBE2FEB05DA337188AEA22E44D7E2699571FF11DC873025CCC719018F9C8CB0F5C80C1810548F6672639D6D1E498F8F7A238B72D6A73500F480F3A47815405735AC07B55257A4782A12EA1F0D12FDE80789150EBC9BF893EE21D5B3DE3276D1B91CD0F9BC27B5F70611EC2AD803E54DB2BAC0C298C0DD0D96E44F4C0A070341C42FBB45A5D6CD83B9A4D70465B32C819843A1E1EBA69134A3E05DCAEDAC35C1D2B163075CD91A79271C8F8E68EDE374CE580911F200EDB8300F379074C860E40843C9FC4E0F06304FA09E392384914EA60FD1C3358BAE924543884E670A74EE6CA2E98F02D9E30EC9AB0DD37210D7B0389A6852B3ACC43A9AC18452BBEC992A2415A04197B8B034F5E2C4649D607D2A399B8BD80589762F60770D947A0FEE19C4C82DD68565A0DFB36516658C4EA01AA061B89EEBA812953D399DC7E7DDF22779B63E021A3CB3F59A9DA4265129196D06A16D8316D54939A206E8D233205878B656949BD1CB06A035A678F08F4482F904AEE4076A7849B3F38CA42BB86A9A9F35C8B12131C050F5772CE21123C06D8D37FC390CE9E4957BFF3812BBCD34DF62E8CA0034C50C318CC988D5C4AEADA7A692072DC33886064A626C41084F21EBE106559B62C6AD56F549063DB3EA986AC98FA227E2A9DC7B3C6ACB5A88D4186850350E70CEC16C2C434C4950DCB59CF49B6DE37FFF4BA31C4F59FE518272AC87112F8CD994BBC06F9ABCDE2813754E6AAC0C2F8B692F01C2B863FE04B17FD194BCF486F753FECC621A80F8D90D03129172FB1D4ADDE1B53D998EFD0BA4DEA06CE08E7123C534EC96DFE9B368E1D5102C80FA19D5127FBC3A7BFA76ECC6841084514DBE8BD111F2EF597C5E7E8A3975BA4EE5BC064DC2D9DB98B21277BDECBF01C196054C47C1C620794975AA67B4723C7A433C9F0CA6A431746207C10ACD2B908AB9B65A49DECC49C0DEC2B605037FB7BB4A4FCECC329BA05C34AABDD84D40EE33AB0051FDEC38AD86B4126BCB8C3AB28F15F815F275041680839E75AE35E3F47794AA68776AEF1B882C38BCC571E8365748884C378A47FA91F58EE3B564E762D16CF62F0F5533BAE73CDC7DEEDD0CE93A269FE8320255973D0E6FECF5D729AF755C1B82800DECF1E92825791E94DAD773E2CA539F7E32BE2C32CE69CA3C574B0AAE2B9AF6EC961C15EAB944869F407685461387676EBBD244373658B5F5B2F7D3FFBB7FC90DE664535D3BAB74094F798247987213065A53053

3A152CBD5E29D83000E650C8FD8C9EF491FBF5C2900AA115E880CDB58A8FE9A4FC62B647B84D0AB6F35F146812DBCED5EA034B22547EC3CD2B1E7958109B049483FB297672EAE1E910EC28166B17FDBB56A1B85F1DF912E7C62AFF519F6E0DD9DE7055E98BD1793C17113091B9C408AE801A61C9AA4EBBF8CF26DC0EF3BD7D57287206EFE25D40A3633290FB849AC94CAE083AF2875205F769CD81138E6A0F447D2BA7C62A9F9B591631DD3D48A24B9A30ACE47978EE61BB1F2E11D5CDB4E133946BF4022DC06929A621370AEB3F1F68CCB7F1032301CCF51B574E3EADB0651478DFFDB17640B91C11F20C3918BFCF93DE5E
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/Futura-Bold cguidfix
/F2.1/Futura-Bold renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
 exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
10 w
1 J
1 j
0.60000002 i
/Cs1 SC
0 0 0 sc
q
313 904 m
1481 904 l
1481 -95 l
313 -95 l
h
413 804 m
1381 804 l
1381 5 l
413 5 l
h
413 804 m
W*
0 0 1951 809 rc
1 0 0 -1 -207 1056 cm
620 252 m
1588 252 l
1588 1051 l
620 1051 l
h
620 252 m
S
Q
0 i
1 1 1 sc
q
0 0 1951 809 rc
47 492.89859 m
254.18733 492.89859 l
254.18733 316.10141 l
47 316.10141 l
h
47 492.89859 m
f
Q
0.60000002 i
0 0 0 sc
q
-53 592.89856 m
354.18732 592.89856 l
354.18732 216.10143 l
-53 216.10143 l
h
47 492.89859 m
254.18733 492.89859 l
254.18733 316.10141 l
47 316.10141 l
h
47 492.89859 m
W*
0 0 1951 809 rc
1 0 0 -1 -207 1056 cm
254 563.10144 m
461.18732 563.10144 l
461.18732 739.89856 l
254 739.89856 l
h
254 563.10144 m
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 1951 809 rc
1 0 0 -1 150.59366 404.5 cm
/F1.1[ 33 0 0 -33 0 0]sf
-48.388184 -9.9829102 m
(!"#$%&)[ 16.935059 19.787109 16.580566 15.903809 18.546387 0.000000 ] xS
-78.938965 34 m
('\(\)%*&"\)+)[ 16.516113 8.217773 26.103516 18.256348 13.390137 9.313477 19.787109 26.506348 0.000000 ] xS
1 0 0 -1 161.5 618.5 cm
/F2.1[ 35 0 0 -35 0 0]sf
-150.28999 12.975021 m
(!"#$%"%&'\(#\)"*&)[ 27.510000 22.645000 17.150000 24.500000 24.535000 22.645000 24.535000 11.900000 23.310000 24.535000 18.025000 23.345000 22.890000 13.055000 0.000000 ] xS
5 w
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -207 1056 cm
1593 651.5 m
1810.1 651.5 l
S
0 i
CM
1617.5 404.5 m
1603.1 409.89999 l
1603.1 399.10001 l
h
1617.5 404.5 m
f
0 J
0 j
1 0 0 -1 -207 1056 cm
1824.5 651.5 m
1810.1 646.09998 l
1810.1 656.90002 l
h
1824.5 651.5 m
S
Q
0.60000002 i
/Cs1 SC
0 0 0 sc
q
1530 563.12573 m
2045.3003 563.12573 l
2045.3003 245.87425 l
1530 245.87425 l
h
1630 463.12576 m
1945.3003 463.12576 l
1945.3003 345.87424 l
1630 345.87424 l
h
1630 463.12576 m
W*
0 0 1951 809 rc
1 0 0 -1 -207 1056 cm
1837 592.87427 m
2152.3003 592.87427 l
2152.3003 710.12573 l
1837 710.12573 l
h
1837 592.87427 m
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 1951 809 rc
1 0 0 -1 1787.6501 404.5 cm
/F1.1[ 35 0 0 -35 0 0]sf
-96.164551 12.97876 m
(',-./#"+.01)[ 16.884766 15.620117 20.405273 10.800781 19.191895 16.679688 20.986328 20.986328 10.800781 20.952148 0.000000 ] xS
1 0 0 -1 1787.6501 618.5 cm
/F2.1[ 35 0 0 -35 0 0]sf
-77.489998 -10.049957 m
('+$*$#$,)[ 23.730000 16.450000 24.605000 13.370000 24.500000 17.150000 24.500000 0.000000 ] xS
-66.605003 36 m
(-.//"+0)[ 24.220000 23.415000 14.840000 14.070000 22.645000 16.205000 0.000000 ] xS
4 w
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -207 1056 cm
466.18732 651.5 m
596.09998 651.5 l
S
0 i
CM
401.89999 404.5 m
389.10001 409.29999 l
389.10001 399.70001 l
h
401.89999 404.5 m
f
0 J
0 j
1 0 0 -1 -207 1056 cm
608.90002 651.5 m
596.09998 646.70001 l
596.09998 656.29999 l
h
608.90002 651.5 m
S
/Cs2 SC
0 sc
1 0 0 -1 897 715 cm
/F1.1[ 75 0 0 -75 0 0]sf
-56.689453 28.383057 m
(',-)[ 36.181641 33.471680 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
501 492.89859 m
708.18732 492.89859 l
708.18732 316.10141 l
501 316.10141 l
h
501 492.89859 m
f
Q
0.60000002 i
/Cs1 SC
0 0 0 sc
q
401 592.89856 m
808.18732 592.89856 l
808.18732 216.10143 l
401 216.10143 l
h
501 492.89859 m
708.18732 492.89859 l
708.18732 316.10141 l
501 316.10141 l
h
501 492.89859 m
W*
0 0 1951 809 rc
1 0 0 -1 -207 1056 cm
708 563.10144 m
915.18732 563.10144 l
915.18732 739.89856 l
708 739.89856 l
h
708 563.10144 m
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 1951 809 rc
1 0 0 -1 604.59369 404.5 cm
/F1.1[ 33 0 0 -33 0 0]sf
-24.943359 -9.9829102 m
(',-)[ 15.919922 14.727539 0.000000 ] xS
-81.831299 34 m
(23\(%/&4%335)[ 23.122559 8.217773 8.217773 18.256348 18.095215 9.023438 24.202148 18.256348 8.217773 8.217773 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
800 492.89859 m
1007.1873 492.89859 l
1007.1873 316.10141 l
800 316.10141 l
h
800 492.89859 m
f
Q
0.60000002 i
/Cs1 SC
0 0 0 sc
q
700 592.89856 m
1107.1874 592.89856 l
1107.1874 216.10143 l
700 216.10143 l
h
800 492.89859 m
1007.1873 492.89859 l
1007.1873 316.10141 l
800 316.10141 l
h
800 492.89859 m
W*
0 0 1951 809 rc
1 0 0 -1 -207 1056 cm
1007 563.10144 m
1214.1874 563.10144 l
1214.1874 739.89856 l
1007 739.89856 l
h
1007 563.10144 m
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 1951 809 rc
1 0 0 -1 903.59369 404.5 cm
/F1.1[ 33 0 0 -33 0 0]sf
-26.844727 12.008545 m
(6"7)[ 13.535156 19.787109 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
1099 492.89859 m
1306.1874 492.89859 l
1306.1874 316.10141 l
1099 316.10141 l
h
1099 492.89859 m
f
Q
0.60000002 i
/Cs1 SC
0 0 0 sc
q
999 592.89856 m
1406.1874 592.89856 l
1406.1874 216.10143 l
999 216.10143 l
h
1099 492.89859 m
1306.1874 492.89859 l
1306.1874 316.10141 l
1099 316.10141 l
h
1099 492.89859 m
W*
0 0 1951 809 rc
1 0 0 -1 -207 1056 cm
1306 563.10144 m
1513.1874 563.10144 l
1513.1874 739.89856 l
1306 739.89856 l
h
1306 563.10144 m
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 1951 809 rc
1 0 0 -1 1202.5936 404.5 cm
/F1.1[ 33 0 0 -33 0 0]sf
-48.388184 -9.9829102 m
(!"#$%&8)[ 16.935059 19.787109 16.580566 15.903809 18.546387 9.023438 0.000000 ] xS
-85.883789 34 m
(9/:5;\)"&\(5/)[ 9.732422 18.095215 10.199707 19.835449 12.842285 26.103516 19.787109 9.023438 8.217773 19.835449 0.000000 ] xS
1 0 0 -1 604.59369 174.5 cm
/F2.1[ 35 0 0 -35 0 0]sf
-142.71249 -10.049957 m
(123&4,5"6*&7",,$&)[ 18.690000 19.040000 22.610000 11.900000 23.345000 10.675000 10.675000 22.645000 23.240000 13.055000 11.900000 29.155000 22.645000 10.675000 10.675000 24.500000 0.000000 ] xS
-95.445 36 m
("8*+\(#*5$6)[ 21.700000 25.970000 13.055000 16.520000 24.535000 17.150000 13.545000 10.675000 24.500000 0.000000 ] xS
1 0 0 -1 914 174.5 cm
-33.442501 -10.049957 m
(9\(:)[ 18.550000 24.535000 0.000000 ] xS
-131.74001 36 m
(;56<"+=+56*56<)[ 19.180000 10.675000 23.240000 24.815000 22.645000 16.310000 24.535000 16.310000 10.675000 23.240000 13.545000 10.675000 23.240000 0.000000 ] xS
1 0 0 -1 1211 174.5 cm
-44.9925 -10.049957 m
(!\(*\()[ 27.510000 24.535000 13.405000 0.000000 ] xS
-102.55 36 m
(>6+5#?@"6*)[ 19.950000 23.240000 16.310000 10.675000 18.025000 23.240000 34.720000 22.645000 23.240000 0.000000 ] xS
ep
end
%%Trailer
%%EOF

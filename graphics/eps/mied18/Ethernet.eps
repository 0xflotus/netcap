%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 1152.000000 407.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.14.1 (Build 18B75) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 1152 407
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 1152 407
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: Futura-Medium
%!FontType1-1.0: Futura-Medium 1.0000.1.0000
/FontInfo 1 dict dup begin
/FSType 6 def
end readonly def
14 dict begin/FontName /Futura-Medium def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /E put
dup 34 /N put
dup 35 /D put
dup 36 /ellipsis put
dup 37 /one put
dup 38 /six put
dup 39 /zero put
dup 40 /two put
dup 41 /eight put
dup 42 /nine put
dup 43 /four put
dup 44 /three put
dup 45 /B put
dup 46 /i put
dup 47 /t put
dup 48 /plus put
dup 49 /period put
dup 50 /seven put
dup 51 /five put
dup 52 /P put
dup 53 /r put
dup 54 /e put
dup 55 /a put
dup 56 /m put
dup 57 /b put
dup 58 /l put
dup 59 /s put
dup 60 /n put
dup 61 /o put
dup 62 /space put
dup 63 /M put
dup 64 /A put
dup 65 /C put
dup 66 /d put
dup 67 /S put
dup 68 /u put
dup 69 /c put
dup 70 /h put
dup 71 /T put
dup 72 /y put
dup 73 /p put
dup 74 /R put
dup 75 /k put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -1074 1 index div -591 2 index div 2707 3 index div 2164 5 -1 roll div]cvx def
/sfnts [<



57E103CE5A4418199090FE71FDA6021D8C3A3B8C9BFE09021A01048E99FE09000001008E000003D503E900150000133315363332171615112311342726232207061511238EE27694AA5F52E2282767702F2EE203CE5A756B5BCEFDAB02209037384A49B6FE2A000000020060FFE4046F03E9000E001C0000133400333217161514070623222726371417163332363534272623220660012ED9DA98969798DDDB9494E64E5083849E4F508381A001EED301289595D9DB94939694DC925556AA8E8E5556AC0002008EFDEE046C03E90010001F00000123113315363332171615140706232227013427262322061514171633323736016FE1E185A9C982848382C6AB8702174C4D757C9A4D4C7C754C4EFDEE05E06A859493E0DB92918901748C5859AC8C89595758580001008E0000030B03E9000F0000133315363736333217072623221901238EE13E303143596167403DB8E103CE574118193ACE2EFEEAFE070001004CFFE4030303E9002600000107262322061514171E01151407062322273716171633323534272E012726272635343736333202C4BA2C411F2C82B37C68658FF566C028152939725822442362283357597FBB0328635A292038374D826E8D5F5AEF59461326683C3411201130303D607F535300000000010035000002250533000B00000111231123353311331133150176E16060E1AF02FCFD0402FCD20165FE9BD20000000001008EFFE403CE03CE0015000001111433323511331114070607062322272627263511016FBFBFE11D1C4572B0AF72461D1C03CEFDD1F2F2022FFDCC75554C3D63633D4C448602340000000001000BFDEE044E03CE00070000250121090133012101C1FE4A0105012A0116FEFCF8FEFFB50319FDD00230FA200000FFFF0023000003D4069902260020000000070004002302E70001000000010000CA632CC75F0F3CF5012B080000000000BFEE600000000000D55E226FFBCEFDB10A93087400000009000200000000000000010000084FFDEC003D0AE0FBCEFECB0A9300010000000000000000000000000000002E040000C802780000078E00B704F0006301BE0000027800B104F0005704F0012004F0003304F0005704F0001304F0002704F0007104F0006204F0009304F0007105ED000804BB00B9059B006C05CF00B9048600B907B1008306C100B9045200B904D100B904AA006C03DC001704CC006004CC008E03D0006004CC0060046D00600463008E01FE006C03FC008E01FE008E0654008E0463008E04CF006004CC008E02FE008E033F004C02300035045C008E0459000B046300230000001400140052006A0078009000C400D6010401460162019801D001E20232026C028802C802F803260340035C0370039603C00406041A044E048204B004E4051C053E0560057E058C05BE05E20610
0642065E069A06B206D806F006FC000000010000002E005D00070043000400010000000000000000000000000002000100000000
00>] def
/CharStrings 46 dict dup begin
/.notdef 0 def
/space 1 def
/ellipsis 2 def
/plus 3 def
/hyphen 4 def
/period 5 def
/zero 6 def
/one 7 def
/two 8 def
/three 9 def
/four 10 def
/five 11 def
/six 12 def
/seven 13 def
/eight 14 def
/nine 15 def
/A 16 def
/B 17 def
/C 18 def
/D 19 def
/E 20 def
/M 21 def
/N 22 def
/P 23 def
/R 24 def
/S 25 def
/T 26 def
/a 27 def
/b 28 def
/c 29 def
/d 30 def
/e 31 def
/h 32 def
/i 33 def
/k 34 def
/l 35 def
/m 36 def
/n 37 def
/o 38 def
/p 39 def
/r 40 def
/s 41 def
/t 42 def
/u 43 def
/y 44 def
/hbar 45 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontInfo 1 dict dup begin
/FSType 6 def
end readonly def
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-1074 -591 2707 2164}def
/UniqueID 4208071 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C55AC8266BDD340E521355EEF85826934CAE169B3813170EF21157F980278DEA2CE475C6187CB4267A04435AB7CCB196A466EDED31699319305B4913DB428C1F94A0BD0621B41DEC2216CE6C1E3EBC36487BA48FFFC5F94B7C8705655675D4E21DD11D422EFC346F0840F70FCA808FD56424C244741A5EEC370A3276C5E050182153744A195066BD7AA429092A1D177FBAF786F0AF577C4D7E983BFDF2B7FE821BBBBAF2C47B5474634AFF18393118EF509023B62FB4771257A111D45C6A51888BD79DD8242524C4255C8957CCC96C715D2BDC48792DC43CBFC39B71D8994D9164B1450F8E718C24A21096AA323AC1E282BEA98C6AE5F7469502520F614C95EEF01792C75A4B7DB9190D33AD62CA9798A1FB1557FA48E54A4252EC7770B2BE2FCCAA8EF0CFDDD87A96133B46B6B6D3401D9ADB9242A083385F406A19F3BD758F7FBFC653007D0A948550DDAFECDE9DBDF3FD23A0926A8A52556A8A95B45A88276FCDE334E93CBA27F2D847CDBD6678B73D0270A3C57208347DC9B385875F3287211C6EA60E77960F80B756FDF724B140E5AFFF98808E128CCD211A90729656B8CCDE34719BCB3DCC0BCC1A3DFAF916D713C4D132B291930227985ADC74427DEBF79DAC984D0D59FAB525D7798F6A92E3D2B395851E2561DF83FEDAC71F98A6B24BD9EEF67E17A1D31A7696A058AB0C549A43F1B746586D1DEA6371239294BCE136496A1FEBF25182A737D9864F2FBEEC43CF3D129A217C4EFD095C77A58FA760942B89F74905989BFB68E9E8A959DD724D5880AE68174F256F5C777F989162973B9B7DE6
4E44CCAD63CC884F8FCD74025C2235202586C3DA1D9B8390F72ADEC689AC6C10622E9A36A307121A65E45C563390F36300A9191A2E6EA2D9DF8A7D2EDAC275A8A7E285977D07276403884AB737DC36F6514CE8AF4E6A73690809B65EC35540582DC5E80E955D2AB6161108D57F36EE9B554ED5738D8908DF981D8DD40C7D075CFDB760DA6FA8C79D41591003A359BBB21661F6F030EB72FD117447EEDD7272812320022A764F1DD216D118191C355964BD2F4938E6A43D6DDDB80EE98D2F5600B4E939FB3FE2B50061CD26A63D106A483C4E704AB4487EE40B74C66377CDA94225D57BCC6C7ACA2B0684021895F29012BF59F7F9EDE4A801100CEA5621EE553450D8965317197B9809B5AE360563B869331DCE2673A35B941EC5237B02D0BBF029F393F78B34C43565F8159CE669A054B11A11BBD210B3A353343846D3262FC65BADFB97C4D2FCF13533AC059478855CBB23E22A150B7EFF0B0E5D5CC3E7EB6F505CD74D647D5C34DC5057E842A29EC7342E561FFCA50E78671C1C31774E62EED487C9D9663A606C71BBC730994D1C3AD3B4AA0D6F909420901A98B662516A71F30AA1D2160DB112DBD5DC0BF7B0091561529D237FE965806E9E848C738C61FC3138AE3809EDD4E606AD539089DD196A2C09089E27768958C7C263822B0DF633B0C66A3152951D80296959D6990F150DC1C22F2E1393A2436C0BF8464F44402B3D43F6CAC4DA5BAF9B1267E683AC8A40B99ACEBFBF3366563EC2CF8123D4D2136F308FB667963A6AF31A3A99BC7710EB4ECB02CBCFE18A21D3D5EB5BD2196B75373AB683810248743B02058CB6CFF9D2063753FE65D4FD20AC1A182A3CDDBD7B1E78E3988C50CD4A89CDA102AD3790C05DCC5FB71C3E50B71DE727146EC83DB6AE393EA3501306619D0BF27EE0C195FE113AD1A8E6AA578918C63527186054B965987D70CC001B296807D9BAF621FDB204330171BD483539C8809733EF2C1B76224388F167A82DBEB6760D35CBCC686A7B31E0AFECAA0E7925B3308396E5D74BF54AA58FA3E9EF91167B577FA2B07A01A7D4D67AF59D38C49E23F0355486BCF926EEF6421AFD04315E8F2D5468BC0C79B393639435E31252AB049ED39F0ABD2C8E64B0262C501D6649EB38F6B0CF4E9573973810457E24DB3148A539115A247FB8024A4C9ED59DCDB3D2932CADB72B29028118A2A7FA1DBB9C69905514C6449FD506A54AEB2BA33AABE7E5730BF9BF7279439A4DD37B1F921DA78D6218A101F0B2FA5F1F4EADA4D1F0EDEB8C2A7493869DD76A2B7F2A629D351C0D8E475B9BA49C1CD4CF1887C2E4DF790715D7F1744BC3DBFCE454B1B5AA222A154713A458677C86F5A774D2E20A7942444B13DA3EB7D5C150DB3B46CCDA8F43D075D3A17C93D74E75955A12E1867F06D6EAFE06A92E52EDBAEB13811B074960CB4C20AA1714

A5760B50C6F241454E1D933F7BCF6B8CCD96BBD06E3C73F1AEFB4370E107D68A69E8857A8082477E2A5C5592C447DAFD0DAF358B643FC0830942FC48501C0833B687DBD0CA8C71A2402C89B77B5C404D0AE483A53C832E684BF7C7D7529CAD764A245FE99F62AC2389EA38C473E6888C397F0C9C72B62F638BFB740DA0CFB94EF01F0BBD6FCFA43BE84C92634E15921183B9F19488C0499D6475DD0283CBE8FA10466B1AEC8509EAE649E2B750EF492C107F5DA99E1A95CB44A89B579526621D8EE5999DA4D3816DD56958504368A1AFB43171464F6B18834BEE51F267FAEFBE0690AEC1E9645DD5AB30491910787383C53FD0F08D323A55206B2EB508162E498D78104A81B2D845954A4B372CCBFD966C93DC97123986F96CF0A995B7A46C653182900CA4B470E1D2A8919E01751846F157BB2AD03F5EF6588F5EED5FC444626816B5DFD74D18652032A6465E801B9CF327FCD4E298539BF9ABD655F26D6C3ECA12C0AB2F619DA6EC535C80FD391A676487293B4895A78447A20DD657E5D9C7AB5931B0C3FED7A680BC46AECAD8DD1B42830DADC88CB412BC32054428698C1447CA1A141FD8927D0698E90900BFD020C44EF7F17220CB6B3BE9D85C53F06BA3310B07D1B06AFAFB229F636F9AA460D2DBD88AB8A2D5B0023B3CF3D53CD8515A730CB348BAC15851F2EEDC9B109BB653D792301403E8BA5DB1BFE8CECBB5D9910A7EE84801E8838D992ED45658F05DCE62E565CC0F63FD2D5D1FFD62E6A648B4467491BBEF2C99570FB63C480F8BE6EFC306A33064C8B41ECD1EE416DB553955D1D5E0F7AD9830C197972722BEA88D114062BD9BD6E1C82BBE46851D7C046DF0A4FB512C11B0B51E4732AE192E5359BB752FB0DEB25741B8968DB02FBEE4DC3B9C44124212ED013C9BF660C341B64B0ECA418185704F1F1051AFB3034921DCF6EF5BDCFFE4674AD8BAF097ECED7E7573B55C08C12156F3A346080202FE7A43415AB089A0023B2735987C852C025898FCB748697B951289AA30C08C06F9AEFA809F84D69D7E83AAB0FFB99A339749006F615EF1E0FB4047AFFECAFB81DE3C7D429B37B9EFEFB4AB63730BBE925BABD59BD6664585CC452AD71FA01527361BD2615E31EFC7394A15020371F665EA01A5C1794B3CEB1AD9859C9DD79F2E243DFA98ADEC1D8668BB28D0A51562C639626B6DC7075F6225C999C716CA511CBDF8F57FEB7989A142575E7DC494F53E42447B393965863324B704B2C01C2BE3D7BBA61C59FE65C873ABFA66D6FC6D760FB4C3AD32E4D70CF65193851FC6070E1E4FA65DBF3185E0273A9769C13872A673E7D14A8DF04D7AC96675D72A29B0270FEA5D4A49CFAD102377C0B3E8F240A7704DFFCED31F93F4989C8DDFE43401CC749F5E94AFDCD0C6EDFD2BD16B147566788A3107217BCDBF46573BACF5986BA562F98746
4167AD091E2E30CB82BD57DEB1306600B4ADD74C9CBD32F4B2E87B4EB720D63C03050AE1E43C843D78750EAEC9EE32BDB6B70F99A1A6DF6BD65E46871AB96EBB22723F40D07F3C57768BF6E09BBE301A9BAD6B71F870E9BE7C95170E002B084291D4CB68B6F31211FBE7CC4ACAC0018ABB3FC4A36606438ACEE2B478199B39A35856C94E3228D518A21D9E3627439D080E0BAB6C7FC8B48FC3F5AF7A472B60E0E693B2D1D09BB814C1F9B23659F42CA65CC775EA89F6720706858FBBD77B05BFCEFBF5CB429DAF1BB70C96E0BFF2C964A4F1480991D14DA2A38235E8209BF2AFF42C4940B326F15534428D2AD43CDF59F55076B5B7DB08FF71B60C9F1B116FF96E67FDCD05A4A22A29B900EC5859BB2759A747506ABCABF11F739F4F5E51DDD45157711A1859B8AB8916A45C6B50B166AA965134CE968396A814ED87AD120E6E5ABF10983F27502CD9FCA83C59A8A8655FA5D311F89A67ADF130C0CB0002818C9A7A36C173A23FE8C0624E1C74597D925553C67BDDD0823E07C8EB786350F12E556220DCB02B4F1B6FC58CEE5191BAFF86B5E7873DA254552FDAE267255B89D7657DC840BB926086371CFB818FC9F65752B71EC4932BB2ECE2DF00A9ED81FDC67AA57A6B55480FE4E03E53C0FA59419363ACF1048AF835DC89076ABE5ECE92FA72D7D818182B0BD307E9B7F6140CCE0728E01F0677617FF93A0A020434EC03D09624A87FEC63E1DAED66ADA48715C6E5E456FBA45CE73AAD65F1AF7A0D3F4E779B83AAA121AB2A994A9CBA905929F2FE06700E7188F95B24AE6B09711ACB1D1FA5913ABA730767C736FC9FCFA4BA09A84D4524567D8DF73CC482B9C346599772DE7F769F4AA2FC924C30A51675C60582C01456DBF1A232CD421C790659AE0AE16FA09F4FD12B641636E5661FF9DFA54284861A8FD24078483103B9A5257FB1C671B9B937E8F326C01F6869FDAF05CA5BCE4A499999A581DE1F83D48FB597B06B412FC245359391EA8AC6A6B686BBD021DBE40BB416FC4DEAE999C525794DD1FF66811D7AA3096CA8A2DF4468EAE91CABA0A1A0079355B08BE8DFF0ABCFE128D78B5D856B754F71C10A7930A20765749558F9298742754945E4E8B7F35EAEF17C755D35D7B3ECAC71FBCA432372B157EFDA7A6014FE432A2E62441D36B60F69E32E8572BB4A36C9C4B19C04F62B0ACC0A1237CE9CB8362C91E70A6C64B9FFD9A49B5E631378684F4F343CA416753158F36BAFA9F4604F2A32FB677A4D608680B8D47A33E5B125D4B7E375AE61B6740DD8FECC2CC870B862CF50E811BAC265366F002EE7B1C6D41E2A4C995D73369AB991BEF290DBC247AEEB29B22F129052290814F84E6CDFEE0372E624B7BD1B9E8ED4A65B5FDCC4778836FC6144026CD3A5CCF0B9BA762FCAFD86C15D5A1D7938EE0AA692732E23E08063C8A98F681EC1D2AF
7FE24EC5C56ED1CB2D70D821FE60631ED40108258187B8ED7800618F68229FDC77EBCE3666EB8920A9B0F189891949E3F0799F462726713FE210302A6636972716DC756F3D32B505B575935921E2065941D1E038D61846166191EFEF28F50A46EBFF9074D41EAAEE9B17DC3F8CDE170D846850BDD3861A0435646D7DB2183AC332897D1FEC04E1A86DC14A2D374F338971D7BCDD63780B3E057B4A60674F6662A70272C79B32FCEA53CE2A79D11490AE36F38012430B58B2B418723675E1B99623019EFBAA7D14AFE7473CA4F2EF38DFA80053DBDF9658650CCBE254E7E27CAA2A43ACAE52FC891C3EF9D8E72A10AA9F7AC0606433EABDB00027DAEABDA2133A000113C6C3AD161E28AF61B864B78C5A438CB1BC7F4619FCB31895DCE5F05B0A1E5EE24A0D51ECF1F4346AF156C6C54429AC38DFAC84151BB8007EC4CA701AD4251A6CA0AFB7499AF700CEB65632AEDC166A96A70528B8AB754C4B2E83E9E99BABEEFD93253E42DEAE50E06AC98181AA64B6A4BFE2EB3948EA6C4E00F21BE6F5BBBA5A59C438B39A78B80F60DB0D0E0E3C452547567EA8370444207E6FC6932FCBA5CEF9B1F9AC101857D9FB6F600607D458DC6AAE8E818D7597E4F9CB12609A1E6A73B01A9F6B6EE19FD80C46BB5E34CEAAE625C1AECB23D36BCB1D0B85784D63B4F03D8F68753CE3A4FB1EE37D715EDDDF80EDAD46CA96F2E214024CF42C75D075B6AF51F54AF63F83DF99733259DEC9E89C0B93515F3AF0D9F3C34320B4EA3CC27934F5A55881F43F7F7B5F13EF76C5A1F8256798ED9793BA022D1B1FFFBF9A83D9443F77098ABB56A8D059D75D79F66D3352844A57175E5ED632D6A4C7F0BD4E0EB95779EB8C9F6E3D0CEEE7ADA37A7A69ED80BE734D9B1FF62E8AD1C6FE3138BF6B9FCB88F568A3D10D63FAF8BBBA08DE8F5CA43BCE800F26C23BEAEF2A81FDF61E7B708C03F7DEF75879BFB3DD61AA517E1A611CCB3C77F0B806A4467C8E0161DB5C479129472DFB054598BE2C76FB813B772CC8429D14E7746C96796FDB59E672BF51F7A6A0C8AF032BDB62DE11D87AD2398504A4DB8D46BA8E302A879F565F7A4AB09365DDE24FC0DA657D5B1FB366CF524B6D027B267201E0895F5852FB27355D46CAE294A34796915FC3C078CB989BA070444C84C7C30117F4AA89FCF64EED80F49010285D3AA1EACD765B48DF407E345E6D4C572E6B55CB62CB51B81630CD95FB18D98D41056E64BD6379033A307E651C06C236FAEBCA25311E13A894B0AC43BAB5743C5E17E26A665E53CAA1738CD919505C777060109E0C74E3B532570FDB43069E77B14EDBBD8E1D5EFC60A1D8C94864AE1BDA0DC7BA64086D8DB8D17659A6B0DAB28A09CEC596DA8489A1543836368D45229060138170D1FD7EBBC269B78AB89C608A5CF94A49DB1908C1474E83A972421CF9F4EDA9B617FB
D163313379AEC47CBB48D0AF7BAE962034FDE4A0CAAC2E5816C4E213B7CA2FD88C239D66F1D9C36DF64DB1852DEC7156FE3C561B0112FCB006B3677244B20925A67BB651092C198D08AE8128F7EA9BCA82BEE184B34358FBC4C3DF64BF16FA2EAF300DF5736DC1AC36F400B8695C6CD95155317376488834F205349955AE5F8961E9AF87FD917FEC1C0F63CC23DDE95783272537350719FE6FBC05
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/Futura-Medium cguidfix
/F1.1/Futura-Medium renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
 exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
0.60000002 0.60000002 0.60000002 sc
q
0 0 1152 407 rc
1 46 m
84 46 l
84 1 l
1 1 l
h
1 46 m
f
2 w
1 J
1 j
0.60000002 i
0 0 0 sc
1 0 0 -1 -928 548 cm
929 502 m
1012 502 l
1012 547 l
929 547 l
h
929 502 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 42.5 23.5 cm
/F1.1[ 20 0 0 -20 0 0]sf
-21.357422 7.7021484 m
(!"#)[ 11.308594 16.884766 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -928 548 cm
1284 502 m
1549 502 l
1549 547 l
1284 547 l
h
1284 502 m
S
1549 502 m
1813 502 l
1813 547 l
1549 547 l
h
1549 502 m
S
1813 502 m
2078.5 502 l
2078.5 547 l
1813 547 l
h
1813 502 m
S
1012 502 m
1284 502 l
1284 547 l
1012 547 l
h
1012 502 m
S
1284 457 m
1549 457 l
1549 502 l
1284 502 l
h
1284 457 m
S
1549 457 m
1813 457 l
1813 502 l
1549 502 l
h
1549 457 m
S
1813 457 m
2078.5 457 l
2078.5 502 l
1813 502 l
h
1813 457 m
S
1012 457 m
1284 457 l
1284 502 l
1012 502 l
h
1012 457 m
S
0 i
0.60000002 0.60000002 0.60000002 sc
CM
1 91 m
84 91 l
84 46 l
1 46 l
h
1 91 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -928 548 cm
929 457 m
1012 457 l
1012 502 l
929 502 l
h
929 457 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 42.5 68.5 cm
-9.4433594 7.7021484 m
($)s
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -928 548 cm
1549 412 m
1813 412 l
1813 457 l
1549 457 l
h
1549 412 m
S
0 i
0.60000002 0.60000002 0.60000002 sc
CM
1 136 m
84 136 l
84 91 l
1 91 l
h
1 136 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -928 548 cm
929 412 m
1012 412 l
1012 457 l
929 457 l
h
929 412 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 42.5 113.5 cm
-17.636719 7.7021484 m
(%&')[ 10.585938 12.343750 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -928 548 cm
1284 412 m
1549 412 l
1549 457 l
1284 457 l
h
1284 412 m
S
1813 412 m
2078.5 412 l
2078.5 457 l
1813 457 l
h
1813 412 m
S
1012 412 m
1284 412 l
1284 457 l
1012 457 l
h
1012 412 m
S
1549 367 m
1813 367 l
1813 412 l
1549 412 l
h
1549 367 m
S
1284 367 m
1549 367 l
1549 412 l
1284 412 l
h
1284 367 m
S
0 i
0.60000002 0.60000002 0.60000002 sc
CM
1 181 m
84 181 l
84 136 l
1 136 l
h
1 181 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -928 548 cm
929 367 m
1012 367 l
1012 412 l
929 412 l
h
929 367 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 42.5 158.5 cm
-17.724609 7.7021484 m
(%\(\))[ 10.761719 12.343750 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -928 548 cm
1813 367 m
2078.5 367 l
2078.5 412 l
1813 412 l
h
1813 367 m
S
1012 367 m
1284 367 l
1284 412 l
1012 412 l
h
1012 367 m
S
1549 322 m
1813 322 l
1813 367 l
1549 367 l
h
1549 322 m
S
1284 322 m
1549 322 l
1549 367 l
1284 367 l
h
1284 322 m
S
0 i
0.60000002 0.60000002 0.60000002 sc
CM
1 226 m
84 226 l
84 181 l
1 181 l
h
1 226 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -928 548 cm
929 322 m
1012 322 l
1012 367 l
929 367 l
h
929 322 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 42.5 203.5 cm
-12.34375 7.7021484 m
(*&)[ 12.343750 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -928 548 cm
1012 322 m
1284 322 l
1284 367 l
1012 367 l
h
1012 322 m
S
1813 322 m
2078.5 322 l
2078.5 367 l
1813 367 l
h
1813 322 m
S
1813 277 m
2078.5 277 l
2078.5 322 l
1813 322 l
h
1813 277 m
S
0 i
0.60000002 0.60000002 0.60000002 sc
CM
1 271 m
84 271 l
84 226 l
1 226 l
h
1 271 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -928 548 cm
929 277 m
1012 277 l
1012 322 l
929 322 l
h
929 277 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 42.5 248.5 cm
-12.255859 7.7021484 m
(&+)[ 12.167969 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -928 548 cm
1012 232 m
1284 232 l
1284 277 l
1012 277 l
h
1012 232 m
S
1813 232 m
2078.5 232 l
2078.5 277 l
1813 277 l
h
1813 232 m
S
1284 232 m
1549 232 l
1549 277 l
1284 277 l
h
1284 232 m
S
0 i
0.60000002 0.60000002 0.60000002 sc
CM
1 316 m
84 316 l
84 271 l
1 271 l
h
1 316 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -928 548 cm
929 232 m
1012 232 l
1012 277 l
929 277 l
h
929 232 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 42.5 293.5 cm
-12.34375 7.7021484 m
(,\()[ 12.343750 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -928 548 cm
1549 232 m
1813 232 l
1813 277 l
1549 277 l
h
1549 232 m
S
0 i
0.60000002 0.60000002 0.60000002 sc
CM
1 361 m
84 361 l
84 316 l
1 316 l
h
1 361 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -928 548 cm
929 187 m
1012 187 l
1012 232 l
929 232 l
h
929 187 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 42.5 338.5 cm
-6.171875 7.7021484 m
(')s
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -928 548 cm
1012 187 m
1284 187 l
1284 232 l
1012 232 l
h
1012 187 m
S
1549 187 m
1813 187 l
1813 232 l
1549 232 l
h
1549 187 m
S
1284 187 m
1549 187 l
1549 232 l
1284 232 l
h
1284 187 m
S
1813 187 m
2078.5 187 l
2078.5 232 l
1813 232 l
h
1813 187 m
S
0 i
0.60000002 0.60000002 0.60000002 sc
CM
1 406 m
84 406 l
84 361 l
1 361 l
h
1 406 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -928 548 cm
929 142 m
1012 142 l
1012 187 l
929 187 l
h
929 142 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 42.5 383.5 cm
-11.137695 7.7021484 m
(-./)[ 11.826172 4.980469 0.000000 ] xS
/Cs1 SC
0.60000002 0.60000002 0.60000002 sc
CM
84 406 m
356 406 l
356 361 l
84 361 l
h
84 406 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -928 548 cm
1012 142 m
1284 142 l
1284 187 l
1012 187 l
h
1012 142 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 220 383.5 cm
-24.6875 7.7021484 m
(0'112)[ 12.343750 12.343750 6.171875 6.171875 0.000000 ] xS
/Cs1 SC
0.60000002 0.60000002 0.60000002 sc
CM
621 406 m
885 406 l
885 361 l
621 361 l
h
621 406 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -928 548 cm
1549 142 m
1813 142 l
1813 187 l
1549 187 l
h
1549 142 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 753 383.5 cm
-36.152344 7.7021484 m
(0%&11\(,)[ 12.343750 10.585938 12.343750 6.171875 6.171875 12.343750 0.000000 ] xS
/Cs1 SC
0.60000002 0.60000002 0.60000002 sc
CM
356 406 m
621 406 l
621 361 l
356 361 l
h
356 406 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -928 548 cm
1284 142 m
1549 142 l
1549 187 l
1284 187 l
h
1284 142 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 488.5 383.5 cm
-29.267578 7.7021484 m
(0\)11%3)[ 12.343750 12.343750 6.171875 4.570312 10.761719 0.000000 ] xS
/Cs1 SC
0.60000002 0.60000002 0.60000002 sc
CM
885 406 m
1150.5 406 l
1150.5 361 l
885 361 l
h
885 406 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -928 548 cm
1813 142 m
2078.5 142 l
2078.5 187 l
1813 187 l
h
1813 142 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 1017.75 383.5 cm
-36.083984 7.7021484 m
(0\(+11,%)[ 12.343750 12.207031 12.343750 6.171875 6.171875 10.585938 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
84 361 m
1150.5 361 l
1150.5 271 l
84 271 l
h
84 361 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -928 548 cm
1012 187 m
2078.5 187 l
2078.5 277 l
1012 277 l
h
1012 187 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 617.25 316 cm
-42.529297 7.7021484 m
(456789:6)[ 10.800781 7.343750 11.064453 11.992188 15.820312 11.992188 4.980469 0.000000 ] xS
/Cs1 SC
0.75 1 1 sc
CM
84 226 m
621 226 l
621 181 l
84 181 l
h
84 226 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -928 548 cm
1012 322 m
1549 322 l
1549 367 l
1012 367 l
h
1012 322 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 352.5 203.5 cm
-116.83105 7.7021484 m
(#6;/.<7/.=<>?@A>@BB56;;)[ 14.521484 11.064453 8.115234 5.468750 4.980469 10.966797 11.992188 5.468750 4.980469 12.021484 10.966797 6.171875 19.228516 14.111328 14.013672 6.171875 14.794922 11.992188 11.992188 7.343750 11.064453 8.115234 0.000000 ] xS
/Cs1 SC
1 1 0.75 sc
CM
84 181 m
1150.5 181 l
1150.5 136 l
84 136 l
h
84 181 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -928 548 cm
1012 367 m
2078.5 367 l
2078.5 412 l
1012 412 l
h
1012 367 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 617.25 158.5 cm
-97.797852 7.7021484 m
(C=D5E6>?@A>@BB56;;)[ 11.660156 12.021484 10.898438 7.304688 9.531250 11.064453 6.171875 19.228516 14.111328 14.013672 6.171875 14.794922 11.992188 11.992188 7.343750 11.064453 8.115234 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
84 136 m
621 136 l
621 91 l
84 91 l
h
84 136 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -928 548 cm
1012 412 m
1549 412 l
1549 457 l
1012 457 l
h
1012 412 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 352.5 113.5 cm
-44.682617 7.7021484 m
(!/F65GHI6)[ 11.308594 5.869141 10.966797 11.064453 7.480469 8.750000 10.869141 11.992188 0.000000 ] xS
/Cs1 SC
0.75 1 0.75 sc
CM
84 91 m
1150.5 91 l
1150.5 46 l
84 46 l
h
84 91 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -928 548 cm
1012 457 m
2078.5 457 l
2078.5 502 l
1012 502 l
h
1012 457 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 617.25 68.5 cm
-37.231445 7.7021484 m
(47H:=7B)[ 10.263672 12.167969 11.044922 4.980469 12.021484 11.992188 0.000000 ] xS
/Cs1 SC
0.75 1 1 sc
CM
84 271 m
1150.5 271 l
1150.5 226 l
84 226 l
h
84 271 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -928 548 cm
1012 277 m
2078.5 277 l
2078.5 322 l
1012 322 l
h
1012 277 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 617.25 248.5 cm
-116.83105 7.7021484 m
(#6;/.<7/.=<>?@A>@BB56;;)[ 14.521484 11.064453 8.115234 5.468750 4.980469 10.966797 11.992188 5.468750 4.980469 12.021484 10.966797 6.171875 19.228516 14.111328 14.013672 6.171875 14.794922 11.992188 11.992188 7.343750 11.064453 8.115234 0.000000 ] xS
/Cs1 SC
1 1 0.75 sc
CM
621 226 m
1150.5 226 l
1150.5 181 l
621 181 l
h
621 226 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -928 548 cm
1549 322 m
2078.5 322 l
2078.5 367 l
1549 367 l
h
1549 322 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 885.75 203.5 cm
-97.797852 7.7021484 m
(C=D5E6>?@A>@BB56;;)[ 11.660156 12.021484 10.898438 7.304688 9.531250 11.064453 6.171875 19.228516 14.111328 14.013672 6.171875 14.794922 11.992188 11.992188 7.343750 11.064453 8.115234 0.000000 ] xS
/Cs1 SC
0.75 1 0.75 sc
CM
621 136 m
1150.5 136 l
1150.5 91 l
621 91 l
h
621 136 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -928 548 cm
1549 412 m
2078.5 412 l
2078.5 457 l
1549 457 l
h
1549 412 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 885.75 113.5 cm
-37.231445 7.7021484 m
(47H:=7B)[ 10.263672 12.167969 11.044922 4.980469 12.021484 11.992188 0.000000 ] xS
/Cs1 SC
1 0.75 0.75 sc
CM
84 46 m
1150.5 46 l
1150.5 1 l
84 1 l
h
84 46 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -928 548 cm
1012 502 m
2078.5 502 l
2078.5 547 l
1012 547 l
h
1012 502 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 617.25 23.5 cm
-68.393555 7.7021484 m
(AJA>AF6EK;D8)[ 14.013672 11.699219 14.013672 6.171875 14.013672 10.966797 11.064453 10.048828 9.960938 8.115234 10.898438 0.000000 ] xS
ep
end
%%Trailer
%%EOF

%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 1951.000000 809.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.14.1 (Build 18B75) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 1951 809
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 1951 809
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: Futura-Medium
%!FontType1-1.0: Futura-Medium 1.0000.1.0000
/FontInfo 1 dict dup begin
/FSType 6 def
end readonly def
14 dict begin/FontName /Futura-Medium def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /P put
dup 34 /a put
dup 35 /c put
dup 36 /k put
dup 37 /e put
dup 38 /t put
dup 39 /T put
dup 40 /i put
dup 41 /m put
dup 42 /s put
dup 43 /p put
dup 44 /C put
dup 45 /o put
dup 46 /n put
dup 47 /period put
dup 48 /g put
dup 49 /z put
dup 50 /space put
dup 51 /S put
dup 52 /r put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -1074 1 index div -591 2 index div 2707 3 index div 2164 5 -1 roll div]cvx def
/sfnts [<


045200B904AA006C03DC001704CC006003D00060046D006004CA00600463008E01FE006C03FC008E0654008E0463008E04CF006004CC008E02FE008E033F004C0230003504590013046300230000001400140022003A006A009000D600EA011E014C018401CE01F0021202300262028602B402E60302033E0356036A03760000000100000018005D00070043000400010000000000000000000000000002000100000000
00>] def
/CharStrings 24 dict dup begin
/.notdef 0 def
/space 1 def
/hyphen 2 def
/period 3 def
/C 4 def
/P 5 def
/S 6 def
/T 7 def
/a 8 def
/c 9 def
/e 10 def
/g 11 def
/h 12 def
/i 13 def
/k 14 def
/m 15 def
/n 16 def
/o 17 def
/p 18 def
/r 19 def
/s 20 def
/t 21 def
/z 22 def
/hbar 23 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontInfo 1 dict dup begin
/FSType 6 def
end readonly def
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-1074 -591 2707 2164}def
/UniqueID 4208071 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C55AC8266BDD340E521355EEF85826934CAE169B3813170EF21157F980278DEA2CE475C6187CB4267A04435AB7CCB196A466EDED31699319305B4913DB428C1F94A0BD0621B41DEC2216CE6C1E3EBC36487BA48FFFC5F94B7C8705655675D4E21DD11D422EFC346F0840F70FCA808FD56424C244741A5EEC370A3276C5E050182153744A195066BD7AA429092A1D177FBAF786F0AF577C4D7E983BFDF2B7FE821BBBBAF2C47B5474634C52CD151D210DEB675DC6FBCF027F50860AF6AEA86860B2094B0A132063C783186F0EE09BF1D3B1F7BC45BB7E6E50F44AA0CE339880BF9D6A924E059D3DAC392C458417C8CEB2DAA450B596CBC84BCA76FE0E96C44BB9AFEC464B498729A4337DD2065F54C4433D27BA4B809A067C2DCEFA7730F3B216BF63415638AB3271CDA71CD0294F83B6AB0C2EB7DC963D489D72D4D6318CDAB62221D4E4EB5DE32F35650700FE7430FE4C347A22093D8650D6F35E8FC96A6DA829F2AF370AFF96B8B7B3176904D04B83DF97464AC0FEB35DA40C01DC8C5E864DCA17EEE7341DB92F193C4CE99B702436BA695ED069D38D78DB2A35EDEFAF655D3815C6900F1D2E9D2AB19B4A748F9940493A0D3EDCA6A210FE5960E8647E4F4423DCD9BB137FD63CEACF835BB29E91C404B0382F075F3CB710CF98462050657AB9021CC59740CD172B7834A11CA4440A1B7313E6D9CCBF3BC274F16916768DDAECFD23AEAB2457D41AE716ADE385ECD3C379A6397EB73FA02B5E646A28D37A441032FE3967C259FA3D8608CFFAA1B331863E665A4BCB8295D70366F38B0BA5791B2CBAEB
F84123DCC448DFD7BB66147B02C4A2417AF8E3A5990FF46A2A1C343E953FC51D03C0CEC7A604E63A7DF47E1D8CC2C5C7309E327778A702759BBE88F81D740A553547C4F7C933644D2351F4AC7C1A428FDC4F1831370A6C52AA551C3E59E84CB848CDF7F24291BC56738B2DBCF75EDE8DA721E6F291217DD9B8CA1B33F0B00DB0E023D6413981A22B7D72B34F845DC728315A398D398820E55D37CA0DAC2DABC1B79B6B0084C814774CA4A5DF00B19040AA07D8B03BEB4DAE9F36BA2CB9CCDE61BA99D27611F558DF07C34505E368FB6F5E1004359B5D803B7A3FA142BB7E8B77007171797643BD7F87B1C74BBD69E089279ECC8E4BCB6179AFFD671D6E23BFD36D6CDC35465701D2A5095C4DFAF18A3B507816DB232BDA0A5A2F0E5DA4F921DB31608DC87FCAD50ADDF7E0674E732D636640775766BFA3133E27560FF03C006182FF866D461260B9B6ABEA8D14D80F6D616CC3BA2796A3539FDB0B989BC1764AE2A8AA79106C519EE8BF2259BB6E350449883863E38522D40ADA12300F714F45948A51316DE08CEF322351D3D11E214930098523F39F26762A7961651AD0695E1B8D2B047B3F0BBC0833753A5DA95F3E06A2986D49B5D1EC780D6EB02E812A1146FF43FACF3451D9DF1333C96A1B0CF5EA4BADDDEA942451CFD5D1D86E8E876797C64B6D870E0618178B0738F01A670D540DDEB21EFE739813226762DF29AFC533273695D40A9FE69F8580FF3C347616F60DB14DED2FE4EC5F407276B28A5C79AD530C0959F2B46E63A3DA306862CDE8AD9C3588AE6FF3CB14A4C06483A796F4B562558ACD8E3264EB4636CFEA4166F8402DE7E6E8481B227FF596A8A8FA2941DD64B5C3534C65202D7795339B40DD8493A6BAAA490BD3ED83CBBBD58881D8D749D192BE91FA36A244C01D660CEAC60660E94C1F3ED4403802E2679038F21A28C22038DF0B7B92A20E9AAB51D08D5A5E6D8EBA740B46A05FC40502D13EBF05CAB1C5E98AF6472C572E18F9CCEF98EBD07C673F39FFE791B4037BE72A75ABAEC79D3D2AFB88C5190ED3975F375D7DD5A071810CBB6D38E44A667A981D7395A35A0701702D43DF848229612DE36BD605602FFE91B0C6E166ED8010A3D8C032B6A820B6C7D2E7A10877721B88BB11A777BC169EC5CE7F22300D260890376E9B23EEF53C1A9DD28126C237B212B8D82E05A947F4B7EA04E09CF8CD1D520DE46FEC3A390689553BF2A6AF01BF9F7ECAD8F85585F0575B31AE8A154CC0F380A9E65F616F80EBC3408096C191103B6C45A37382751B443785DEDB6C3F7C2638A256E6C78D22E50015DDD18FA3EFD4A99237765E999858057A9A3AC859187691C76324F1B03B4EDEEAFD030C41BAD7ED20D5BC49D8C7E1FA0A0C26C122F54230377379CF6BD62A14F4BFB9194D91FCB071F9F180FEE1291D7D298B1C43A44346EFFFAEC3

1C7599BE13FAA5F94E804D9CB3BD19031E1D34B9475F4AC3998CB27C59A32D8BC5FABF046F56D1CED5813153FABA56AFF878CF86ACC6B9984C11E82966C36E8F441FD7166BB9E470D0463AE09E04D5AAFB3DF09F64D8866F1DA0778AA7C20E28442F0C8DF6805477FA9C70B4963D6A0EB370F92845B4627F8E59E53B99F9E5AC39E1D7658FD77306A4F02E410240811D696B561AEC30CB61974B9A31E34BF32135A5039FA458E28E0B43C3C05451384AB50B540A9918607521B3AA658C6F9B92F1410F201E5AFCD6327C20F95DA07DD0F5D3745BF55D273217D806A197DC819AE636CCB7C0C79FFB92F3E4032CB753E281545C08CF1699577F9CAE283EC1E99E7545BD1E6EA064A14E52C7133E866D6FDE3486CEB423D9664C800A57E06458CEBFF1148B2D427A0485F0FEC84B315C854A341951CD338D8B4E7A77E3B741ADBA8C621DE2AEB91E65A0D3811E1D85614AE3017B9D8133C8305F56A113EAC7FC8BE1BAE9AB85BA
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/Futura-Medium cguidfix
/F1.1/Futura-Medium renmfont
%RBIBeginFontSubset: Futura-Bold
%!FontType1-1.0: Futura-Bold 1.0000.2.0010
/FontInfo 1 dict dup begin
/FSType 8 def
end readonly def
14 dict begin/FontName /Futura-Bold def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /D put
dup 34 /e put
dup 35 /c put
dup 36 /o put
dup 37 /d put
dup 38 /space put
dup 39 /P put
dup 40 /a put
dup 41 /k put
dup 42 /t put
dup 43 /r put
dup 44 /l put
dup 45 /B put
dup 46 /u put
dup 47 /f put
dup 48 /s put
dup 49 /C put
dup 50 /n put
dup 51 /i put
dup 52 /y put
dup 53 /fl put
dup 54 /h put
dup 55 /comma put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -227 1 index div -344 2 index div 1459 3 index div 1099 5 -1 roll div]cvx def
/sfnts [<


000200000000000000010000040FFEFC001E05DAFF1DFF2205B300010000000000000000000000000000001901F40033015400000154FFF402B4004F029B002D0312004F02A6004F02BD002A01EA002A02BD002A0287002A0187000C0298003E0131003202BA003E0298003E02BC002A01D1003E01FD001E029D003E02B000000131003E0175001702A1000C0154003500000016001600240058008A00B400D2010A0138017201A201D001F4021C0234025E029802B402F2030E03220330034603760396000100000019006E00070046000400010000000000000000000000000002000100000000
00>] def
/CharStrings 25 dict dup begin
/.notdef 0 def
/space 1 def
/comma 2 def
/B 3 def
/C 4 def
/D 5 def
/P 6 def
/a 7 def
/c 8 def
/d 9 def
/e 10 def
/f 11 def
/h 12 def
/i 13 def
/k 14 def
/n 15 def
/o 16 def
/r 17 def
/s 18 def
/u 19 def
/y 20 def
/l 21 def
/t 22 def
/fl 23 def
/anoteleia 24 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontInfo 1 dict dup begin
/FSType 8 def
end readonly def
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-227 -344 1459 1099}def
/UniqueID 4364665 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C926774C520A180165F2668824383C2FD0BBD585551A6494A5974E80882D27CA8856A09D4AE7FD88C9AD5065A9C5E099247CE58D829F309DBF054146DC6F3A47B114AA94E3AD823F185F96082D5EE335B6AD9CFEACEDDC16FD15957269FFB119BEAF0A0FB847DA5B512FE50F8BBE1F108DCC68B0252985A2605491280F5C195D5B2CD844C0C2A14DE989A3C39186DCB67E05E10EE0F02A80D66A5B964E89C421A59676DCEA92CB1C4088EC13817501163FC6FED1047E3275AE2F39D443C773713313AFE95426FDA7D0805D343086F4097FD819F7B60B1E520E0F04A6B0F3C4AA2E9FBD8750FCCBB7C17806D068A29B7B76F48CEBE5B7B4D91A3441BDF31EA8374726BA15E6676376B5812663913E46DDB7A68C1107C7D3A13E9444C7C8823E192FC7619EA41E1B0DCC7186ECBEC4CF5D123E2F8F7DD13088767C5ABD8723E135CD31F15CC9C95918633C66D2EF4AB8A0AF3CAA247EC3F6D02CD090B3DFD0B03AFE18EA12D1487021DD11979B0FFEB00CCA796CBE9C7A1B6B8E466029DC09F599677EA67274A75D928C61203E18270B73CF96BA180F9D7CB4C812B6E58EC3A86B0B77DF2EE7CA4C26F75BAB1C70458011960BEA4DB435D8F58E7E9849CD280C9D6AE77176407F8017DA9367EC38A06D3E63A329043DFEB842D4BBD016ED362AF006F0B56A2A5520547DB079000A1E5B664C4BB5466B08A1802A6C231D5EDFC1FC7421F19AA0869D24DA2FA1EF4F5EE38F04D599056F6428EF9624124AC77B06ED81C

AAD3B8C088D1A34380A53BD6503BEE2A0B1D2F9DE31263E6EDBAC43B351BFE7533323B0722FEE85DA89C415A0EB79ED6DB290B36B1EBC2E4F8976B44A17FE0534C38935D5D9538C8AEB00329B3817991CC65C40A27473130829FE97187BC6546FB817AF908A5AD98538D57C8AE69FF03FD3304F981A8960DD8E33110982E9126CBCA4BE1E8E1889148D9B850DE8BAB6DF2F506E3B3AF97413296BE7A4404577D05F3C63CC15B5C4043211BBC14C1F15EADF51226C08E36A6A93D9CA50439BC2DB2F07E232F26C3C44868D304F678E3A5D122D8419BA5969A2D9176282D0641E2ED284FE982771EC41E4F06CFE613E8C3CB0C390D8BA844CB66BBD5FE9F7F918E88B3B34B4EE707A5D8E21FC76FCBCAFC0261C8D9319E9ADF90EE64239C281CC5E3370A9A0469B9276FB9697080AC275038FF02F0B8B692BC5ECCE2C62805CFF58DC03BAD4BBCF74AB87B49E5B796F5C941F16E855E52F34F405518325AB208526EFBBBF350F6346FE6FA5BB1E6C1518BE205CF6CB331AAF700A0EAC12487BAFB1905DA54F72BEC479966274F485BD0B3690E6B881AC38C64C8B6806ED5539087D03E3ED9D2C94F8701119DDFE21F267F9E3D7641C2243BBA475E775C77741C31015CBA2749D18BE7E73023B09AEBBCB2D82F4B41C8B5181651D964237A5D8E2C59133EAA37640FE5D256CCD7932C0AE767D12BED69A3C3128824DECD577A186F1F0003C5D9C55FB731A7EF8677AF680B310D7D9022C7F21D89630893EFD4BA716FE7A286C415ED7E96B42404E7753D5420C1F556FB6C0327E001DFFD1D1F5F326ADA15868174E1D3E324E82CA9E2960C7A867DAE3931542B11280D5C0FA294210FB54811D85B51E64726A513BD4160C5FBE9CFE9C889E0A0AD2B9FD3E0C468B80CE6324332555EFDC73F0E2B57F66C3121C3F116D140A803985F217B233FFB1F82C804F2F43390100D86984F15B74B94CFFF0160CCD1392E64F57461681B9C28EBD7F1E434FD84706C5043AC6C4751A55FA6136290D257A6576686649DE7E8418F665534129908A42C69845903972E2A07B5E23FC5B55558669936A8C63649934675E935B76E0040D2982435FE991F9D6CD272685EE5FCAC2B86D127F1E60CBA12D6FAE9E8F8846FCCFE3C60A1D41F37F20BED26920D8AA40D5C051DBF7B6B68D79C75B4C5E8A5DEDE524DCB4BF9056C16A836B25B7BA2F61987E4F581426B978EEFAAFD67A63DD063D3A8B9AFE07FB674515C497B887BA87AE1CA623D0B87A21BD317CDF71F19B26F98D93D077507CA6C6E0F8176E2FE874A51596CF4512C78CD6F121120CEF6839B62628D65FB9378A1E3786AA78EC03A81008C4C2D5F4693E92474A83B4EF5DDB03888B88F3FA348C05ED00DDA6E14589EB7455090D1FF26779C72FCC434632B9B14E52A9F5B424548D5F16C3898D117DBBD8F5BE78D102E
56EE4208C921464C8FA9323C7F4A7F13D7718BEFFE26126A4EEEFCC83FF501038D4479EC13419C58CDAAD035018A53DCBD485A4173C29CAD582E78FB60D51237F404578D4E6F81CC19090FD03305F111C7B7A71E9BA30CEF4249DC17AAE7C20977DA99548614F476702A236F1D5A08D218CA2D3876B9BA69D3D1D076C89F0942114808388B1F4E50C984398A6D6823607A95FC66892387BA2538098BBBB463562AB93AEE5AC0F24AC26515747697C6CDA63F444E6C6E33DB9E8EC0A11A8D937FD9B5C6DAB51383A6FA239AD5D3F9809E12F39323EA012EF3ED237742E53FDDEDEA02C0EF6C54EE4A0990CD5D4ED8A003A9594A1E1A8AF29DE159F0DA705967F0564706D262BC33D0ED40764935CC93439F8845F272611D2D87B3338FA05DABF5D81C9C512B9C324F5BB1F8166B00EB9135D5401E03988FD6536CB1781766593D9A00DC6721C05CC9FEE5F5E07BDEC984A3ABDA044B6D36D6F346A5F6C88CE5B96E5E44137B5A409DF45A7868B3230F0B58DC3BEFAA846E4B1735F1AE5E04A7FAF10CEBB78AED33E180AC08CADD5134A3CF19D938751C1DAE413C450D4B804AF3845429283A2C792508CC6C6D7EAAB054FE9A308D8A1EEA6846CCAB7F4449BECB64F34AFD1FC39130B27E15ECCD929A4EEF12FCAA1AFECC844D6E8F6862AB1FF201E0002BF7B6140FFCB54530F0956E356A1D2AA14CA7EE7557B1B435791B647FC473AA6F067D92827008D54855862AA1855862544343A823696930E68D4D3C553BD55CAB26EAAAFDB84EE57FADB6B8C544085CEA6441541ACDE001BBB929CC2862E8A5D606A5437A91168A224C7FFD9CFEFB56FB5F47F1D288D28619B4DBEEC2D79D37F67BE93520264493088A0E5B720A941A30F3193E0DF738A582D9045558AD258920FFA0F98284EA1EFFD655AC2672DC6C125D08CE4C7AF7C7C0BFED9DC1274391FCFDD6A8FEB68BA5F67EF3BE643E6FD05D2B82DF6AB09F69284DF63D027654E5EF2F6B9507591A7A3591B52CC6C2D3895E0EE149C5D3420BA59FDF0686A712CE976F0665D37DEB396549E71AFB77DBDC1476D7A8CDAA1FB822C0709BAF58E5884669511EB8CEA094CBAE42ECBD4527355E92F28C63A56D08C75557FBDEE7A5
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/Futura-Bold cguidfix
/F2.1/Futura-Bold renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
 exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
10 w
1 J
1 j
0.60000002 i
/Cs1 SC
0 0 0 sc
q
313 904 m
1481 904 l
1481 -95 l
313 -95 l
h
413 804 m
1381 804 l
1381 5 l
413 5 l
h
413 804 m
W*
0 0 1951 809 rc
1 0 0 -1 -207 1056 cm
620 252 m
1588 252 l
1588 1051 l
620 1051 l
h
620 252 m
S
Q
0 i
1 1 1 sc
q
0 0 1951 809 rc
47 492.89859 m
254.18733 492.89859 l
254.18733 316.10141 l
47 316.10141 l
h
47 492.89859 m
f
Q
0.60000002 i
0 0 0 sc
q
-53 592.89856 m
354.18732 592.89856 l
354.18732 216.10143 l
-53 216.10143 l
h
47 492.89859 m
254.18733 492.89859 l
254.18733 316.10141 l
47 316.10141 l
h
47 492.89859 m
W*
0 0 1951 809 rc
1 0 0 -1 -207 1056 cm
254 563.10144 m
461.18732 563.10144 l
461.18732 739.89856 l
254 739.89856 l
h
254 563.10144 m
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 1951 809 rc
1 0 0 -1 150.59366 404.5 cm
/F1.1[ 31 0 0 -31 0 0]sf
-45.455566 -8.9233398 m
(!"#$%&)[ 15.908691 18.587891 15.575684 14.939941 17.422363 0.000000 ] xS
-74.154785 32 m
('\(\)%*&"\)+)[ 15.515137 7.719727 24.521484 17.149902 12.578613 8.749023 18.587891 24.899902 0.000000 ] xS
1 0 0 -1 161.5 618.5 cm
/F2.1[ 35 0 0 -35 0 0]sf
-150.28999 12.975021 m
(!"#$%"%&'\(#\)"*&)[ 27.510000 22.645000 17.150000 24.500000 24.535000 22.645000 24.535000 11.900000 23.310000 24.535000 18.025000 23.345000 22.890000 13.055000 0.000000 ] xS
5 w
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -207 1056 cm
1593 651.5 m
1810.1 651.5 l
S
0 i
CM
1617.5 404.5 m
1603.1 409.89999 l
1603.1 399.10001 l
h
1617.5 404.5 m
f
0 J
0 j
1 0 0 -1 -207 1056 cm
1824.5 651.5 m
1810.1 646.09998 l
1810.1 656.90002 l
h
1824.5 651.5 m
S
Q
0.60000002 i
/Cs1 SC
0 0 0 sc
q
1530 563.12573 m
2045.3003 563.12573 l
2045.3003 245.87425 l
1530 245.87425 l
h
1630 463.12576 m
1945.3003 463.12576 l
1945.3003 345.87424 l
1630 345.87424 l
h
1630 463.12576 m
W*
0 0 1951 809 rc
1 0 0 -1 -207 1056 cm
1837 592.87427 m
2152.3003 592.87427 l
2152.3003 710.12573 l
1837 710.12573 l
h
1837 592.87427 m
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 1951 809 rc
1 0 0 -1 1787.6501 404.5 cm
/F1.1[ 33 0 0 -33 0 0]sf
-149.87769 12.008545 m
(,-..%#&\(-./.#"+/01)[ 23.122559 19.835449 18.095215 18.095215 18.256348 15.726562 9.023438 8.217773 19.835449 18.095215 10.183594 18.095215 15.726562 19.787109 19.787109 10.183594 19.754883 0.000000 ] xS
1 0 0 -1 1787.6501 618.5 cm
/F2.1[ 35 0 0 -35 0 0]sf
-77.489998 -10.049957 m
('+$*$#$,)[ 23.730000 16.450000 24.605000 13.370000 24.500000 17.150000 24.500000 0.000000 ] xS
-66.605003 36 m
(-.//"+0)[ 24.220000 23.415000 14.840000 14.070000 22.645000 16.205000 0.000000 ] xS
4 w
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -207 1056 cm
466.18732 651.5 m
596.09998 651.5 l
S
0 i
CM
401.89999 404.5 m
389.10001 409.29999 l
389.10001 399.70001 l
h
401.89999 404.5 m
f
0 J
0 j
1 0 0 -1 -207 1056 cm
608.90002 651.5 m
596.09998 646.70001 l
596.09998 656.29999 l
h
608.90002 651.5 m
S
/Cs2 SC
0 sc
1 0 0 -1 887.5 721 cm
/F1.1[ 75 0 0 -75 0 0]sf
-191.25366 28.383057 m
(,-..%#&\(-.)[ 52.551270 45.080566 41.125488 41.125488 41.491699 35.742188 20.507812 18.676758 45.080566 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
552 492.89859 m
1242 492.89859 l
1242 316.10141 l
552 316.10141 l
h
552 492.89859 m
f
Q
0.60000002 i
/Cs1 SC
0 0 0 sc
q
452 592.89856 m
1342 592.89856 l
1342 216.10143 l
452 216.10143 l
h
552 492.89859 m
1242 492.89859 l
1242 316.10141 l
552 316.10141 l
h
552 492.89859 m
W*
0 0 1951 809 rc
1 0 0 -1 -207 1056 cm
759 563.10144 m
1449 563.10144 l
1449 739.89856 l
759 739.89856 l
h
759 563.10144 m
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 1951 809 rc
1 0 0 -1 897 404.5 cm
/F1.1[ 33 0 0 -33 0 0]sf
-128.87402 12.008545 m
(,-..%#&\(-.23&-4%)[ 23.122559 19.835449 18.095215 18.095215 18.256348 15.726562 9.023438 8.217773 19.835449 18.095215 10.183594 19.803223 9.249023 19.835449 12.117188 0.000000 ] xS
1 0 0 -1 897 202.5 cm
/F2.1[ 35 0 0 -35 0 0]sf
-315 -10.049957 m
(1$2*32.$.0,4&5.06"%7&*6+"\(%&0\(/")[ 23.345000 24.500000 23.240000 13.545000 10.675000 23.240000 23.415000 24.500000 23.415000 17.815000 11.025000 24.080000 11.900000 23.555000 23.415000 17.815000 23.240000 22.645000 24.535000 11.900000 11.900000 13.860000 23.240000 16.520000 22.645000 24.535000 24.535000 11.900000 17.815000 24.535000 14.070000 0.000000 ] xS
-156.66 36 m
(1$22"#*3$2&0*$+"&)[ 23.345000 24.500000 23.240000 23.240000 22.645000 17.150000 13.545000 10.675000 24.500000 23.240000 11.900000 18.305000 13.370000 24.500000 16.520000 22.645000 0.000000 ] xS
ep
end
%%Trailer
%%EOF

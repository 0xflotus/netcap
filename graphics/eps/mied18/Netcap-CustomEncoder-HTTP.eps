%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 1951.000000 809.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.14.1 (Build 18B75) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 1951 809
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 1951 809
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: Futura-Medium
%!FontType1-1.0: Futura-Medium 1.0000.1.0000
/FontInfo 1 dict dup begin
/FSType 6 def
end readonly def
14 dict begin/FontName /Futura-Medium def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /P put
dup 34 /a put
dup 35 /c put
dup 36 /k put
dup 37 /e put
dup 38 /t put
dup 39 /T put
dup 40 /i put
dup 41 /m put
dup 42 /s put
dup 43 /p put
dup 44 /H put
dup 45 /period put
dup 46 /n put
dup 47 /g put
dup 48 /z put
dup 49 /C put
dup 50 /space put
dup 51 /r put
dup 52 /b put
dup 53 /l put
dup 54 /y put
dup 55 /F put
dup 56 /x put
dup 57 /o put
dup 58 /R put
dup 59 /q put
dup 60 /u put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -1074 1 index div -591 2 index div 2707 3 index div 2164 5 -1 roll div]cvx def
/sfnts [<
74727565000900000000000063767420000000000000009C000000046670676D00000000000000A000000004676C796600000000000000A4000008B868656164000000000000095C0000003668686561000000000000099400000024686D747800000000000009B8000000806C6F63610000000000000A38000000426D6178700000000000000A7C00000020707265700000000000000A9C000000040000000000000000000200C80000033806080003000700003311211127112111C802702BFDE60608F9F82B05B2FA4E0000010000018D01BE0251000300001121152101BEFE420251C4000000000100B1FFE401C700FA000C000037343633321615140706232226B15239395229283A3B5070385252393A29285000000001006CFFE4052E0626001B0000011126232207061514003332373E0137110623202726111037122132052ECAD8EEA3A40148EE7B56306739C8DCFEB5EAE9C3F0017DD005B5FEECA9ABAAF6F3FEB228144430FEE771E7E901490127E7011B00000100B9000003BC0608000900000121112115211123112103BCFDE60207FDF9E90303052DFE8DDBFD210608000100B9000005250608000B000001211133112311211123113301A2029AE9E9FD66E9E903AC025CF9F802D1FD2F0608000200B90000041B0608000D0014000001112311213217161716151404232733203534212301A2E90108C263644C85FEE4F16C570141FEB54D0273FD8D06081B1B4B82C6D4F8D8F7EF000000000200B9000004A20608000E001500000901210123112311212017161514062533203534212302C401DEFEE3FE472AE9011101328896BCFE444A014BFEBE530292FD6E0278FD8806087380D2A4EC90FDED00000000010017000003C506080007000001112311213521150263E9FE9D03AE052DFAD3052DDBDB00000000020060FFE4043E03E9000F001F00000133112335062322272635340033321701141716333237363534272623220706035CE2E28BA0CA84830106C5AA87FDEA4B4D757D4D4D4D4D7B744E4D03CEFC3266829295DFDB01248CFE8D8C5859565989895957585900000002008EFFE4046C0699001000200000011136333217161514070623222715231101342726232207061514171633323736016F87ABC583838483C8A985E102F84C4D747C4E4D4C4C7C754D4E0699FCC48C9392DAE1939282660699FB478C585A57568A8E5557575800010060FFE4038403E9001B00000111262726232206151417163332373637110623222726353400333203844D3D3C517FA851527F513E3C518989E298980134E09003A4FED55E2324B286895858232262FED7479293DADA012C000000020060FFE4040E03E9001B0023000001211617163332373637170E0323222726353437363332171615272623220E02070405FD46094545


00>] def
/CharStrings 32 dict dup begin
/.notdef 0 def
/space 1 def
/hyphen 2 def
/period 3 def
/C 4 def
/F 5 def
/H 6 def
/P 7 def
/R 8 def
/T 9 def
/a 10 def
/b 11 def
/c 12 def
/e 13 def
/g 14 def
/h 15 def
/i 16 def
/k 17 def
/l 18 def
/m 19 def
/n 20 def
/o 21 def
/p 22 def
/q 23 def
/r 24 def
/s 25 def
/t 26 def
/u 27 def
/x 28 def
/y 29 def
/z 30 def
/hbar 31 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontInfo 1 dict dup begin
/FSType 6 def
end readonly def
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-1074 -591 2707 2164}def
/UniqueID 4208071 def
currentdict currentfile eexec




0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/Futura-Medium cguidfix
/F1.1/Futura-Medium renmfont
%RBIBeginFontSubset: Futura-Bold
%!FontType1-1.0: Futura-Bold 1.0000.2.0010
/FontInfo 1 dict dup begin
/FSType 8 def
end readonly def
14 dict begin/FontName /Futura-Bold def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /D put
dup 34 /e put
dup 35 /c put
dup 36 /o put
dup 37 /d put
dup 38 /space put
dup 39 /P put
dup 40 /a put
dup 41 /k put
dup 42 /t put
dup 43 /r put
dup 44 /l put
dup 45 /B put
dup 46 /u put
dup 47 /f put
dup 48 /s put
dup 49 /H put
dup 50 /T put
dup 51 /p put
dup 52 /i put
dup 53 /n put
dup 54 /g put
dup 55 /O put
dup 56 /F put
dup 57 /x put
dup 58 /I put
dup 59 /v put
dup 60 /four put
dup 61 /C put
dup 62 /m put
dup 63 /b put
dup 64 /y put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -227 1 index div -344 2 index div 1459 3 index div 1099 5 -1 roll div]cvx def
/sfnts [<



00>] def
/CharStrings 34 dict dup begin
/.notdef 0 def
/space 1 def
/four 2 def
/B 3 def
/C 4 def
/D 5 def
/F 6 def
/H 7 def
/I 8 def
/O 9 def
/P 10 def
/T 11 def
/a 12 def
/b 13 def
/c 14 def
/d 15 def
/e 16 def
/f 17 def
/g 18 def
/i 19 def
/k 20 def
/m 21 def
/n 22 def
/o 23 def
/p 24 def
/r 25 def
/s 26 def
/u 27 def
/v 28 def
/x 29 def
/y 30 def
/l 31 def
/t 32 def
/anoteleia 33 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontInfo 1 dict dup begin
/FSType 8 def
end readonly def
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-227 -344 1459 1099}def
/UniqueID 4364665 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C9315F0017FC3864FF8D40C74661F4AC4F359AB40455CCBD4B88F0CECF0F4D76C0CC6259ED904F1F9FAA469FA6017F0646F842006ED8C439985E098D059AB1CB30F2616803258C5AC771AFAE87FF2EFAEA59A9EFD77077BAC69C26208BC5BBAFE01D9BB395B4EE8521B3BB5ABD00A16BC810529B8978D618AF0A17F57AEE48FC8FFE51D0CC6074008C0BFFEDEDE9395DC0BBCFB0B041C2C008E2E7783C1B3B994EA4D14391E120B2D6ACB4F7065B0A4C13B1FFF53EB75B1FD05A885B6111C10D515361864A77922ECEB245A2BA5BD29B9903AEDF5751A09F3416636F9C1534F7AF6FA60DF2D129CB133205E141D7CFD82F822FECF0490AF1B53556E5ED5CF8A12D184AE9227DEEB2E38025E26304B6BF1DCB3BB5BD2AF83FCB16ED440E45BF71A82A9F74462FD0C0300E30C5404DFC57CA98F36EDC6C9335CC8EFBA13101943B950C913530E7D72FCAA191FDE9F064485578E421BB5631C5F9024B01A8FE060B5C0FBCCF2F20138474A57187D625DD2F8DCAF09D486A37E67BB020C9AA7FF6953F4988B04BD1248B4A6FB8A9BA926FC72E7D3BD5039568D29516764012DE82143BC9BED03749C84681B4E9B31450222CF60AAC76A6C8FD1D5A3B867BAB1714ECBBC6D15895444FA5386762970E939CDDD32C526AF20EEA990890202A2351B8203A1E6D46A3C01BEFBF3731ECB3B331FEDFF4E14A315625976E9D39547EFCFC7BB375B74A700CDFB1423AA4E9141F31E3D96B5DC334BE11AA0CF8A93F96F840082D1
93845376140CFDEA209F51D7AB31409DE03BED7663D70C20708CE6B5E79C1852B1246DB250C147014E3C34BD198F1E6342894880FDFC406EB1E25793B8353A2AA8A782AF032E902C4BF29C56223CCE358D28122E372FFB9F5C2102DED670A37CA6E0DAB6B3029E80174F83E961703AB477D633D9CB6D5D117AC56DE698B5D3199B0DAB9B6729A8C902706F0176A112BDD4ED4E177812223C265D91EE7798041C4461C4057C9007862585B16EA0D59CFFEF6A2C007F8AE36F5382F54DD0D35DBC4653A1862A13EB3BF7E958D9CE97C0A9CDE79E9583765820F590A24F8B1F75129F50739B3B5629FC794C1F2CD63779E0E47FFE55F7409BBECF5401E7A5BC7BE4380C1646E2CAD195E3DAD1E7AC3FFDE8509B9DE225134CFF52C637BC873A5F0CC208EAB843A6DA997D1517B20E8B0EF8909505404AD6767F91A01795CD5390F630750AEF76F64E4EF5C8BC1E4B022F4195C5F5AB00D17D4EF0579A6FB885035790B4958E0A35D32D0771DE3F8A0C14E2530E67E0CA77417D9805C9EED97F34025C0761CB9E94E48ABD8D5CE0A679903A271AE1EF5404A70F6CC57D47075338316E77FA701E4F58595912F9A355573967C57F00153AE609A8D6DD9E1FD47F6A13DFF72FB67B175582A3BC13227FB37B41E328E2CECB6AD31E3D6EF390855A4C9DF514120557A9787F73C173974D264557C3C3A6C9BFEEAB9738FCD908A7C38295B11E525FD9551E7DA0258E27FB3C70B091D68FBC44432F547A6CA08D0A2BDC829139E7DFDFE3D69BECEECF9EB07DB291670EBBB6FAEA688A43BB21E559F90C7382A051758077FEB16BA165942240AB8E68B9A06B362E037BB4D28DD763D1211B1BD3C40BC80C38609ED453F7E69E174F25031323E766B0F1C480E3071C98B0FEF4433BF4CA02B3E7F87A17CE322C18F736B815082506930D972FF3EB5DADC8DBB4B46A4AC462FCC4FDF21F0642C7BE29E6C54F2854BD9A39470CA7E89190D9B1E4DE1EF4A0EE337D3C3A646B0C64EDBCB96F9E444BCDF275A3A592FCD297883C57AEA255383DA9B7FB5699006B31DB076A1435BA512F25478A56B6103FB1DC499999C8FAFF9823AEB21A6EAB561677262F24E48051EFA2B2E4A5F3675375EA022398539AA1C5141AF34AA26E701107B80309BE59D978AB295E8CD291829F5B261FB81FE5CA74B8F6E3C0C01165B0A977E5F0D1EFE8FF9FB8B2450E1B65921F658461FC57083FA2F85E3BD64EDC719FF17046391CFFEF5E50CB77437B9095C3E3B645F5A06B6FCD76C93346A950779A405AD11A85B7673DACF85D08A19DC14788E5C4C2F2EAC6436E62AF94691CD1E20D801C83ADFAD0D7B1BE347AE313DE001C4F9B5F6F4142F18A6DF2C9DB900FB58782958078A19216A71180EDA93EE6CB9C7BBE2D49CFDA7ACCB176801A4F9BB904AA6187E09AD348EAAE4823B6BC1E9EB8
1B10FE5B54710DC7DA39FD769196ED458C567E53C336B766F407F490984858B11F06DEF131049FAFF818ACE9F737CA9C20B2850B3244227767CD16C4B30D763C925B5F85D6C0C8A866CA46C1A065805EFD11E49D22ED81242CA0ED4061C1C94F6D0FF9CEAB11F37CFC814F54505DB3BC2AAB6DD24EECCD7F76AA817C35861ABE2DA6B0DE46F2A52AD0971422434A4DBFDCBAAA36AB3ABA05BAF6D80C4320FC7648BB6004FDA952FB4D3921FBA7B47C26F680CE5B2516E29C172032296D3613E371F072F9CEC1C313720EE4683B8CB78F6060CF00F6E5A20D704F1928418B2DAB7F3362689E21BBB375F3664E866C9DC8EB0B3197D02A60D2A76978B976FEC0F0B5B5A60C0883F99BDAEE5ED4D7793382FE9093111A3DB21A576CB1BB52FD22B499A86BC109D3D1A2AADB8E9EA71BEE5DE54A8CFF8878D2EBF53A6B509529861FC672E99AE41E9E1322979B36C7F516A16BA13311B5E014F438875C1E9BA411476579F03D54DCE747E1793F7AB0F2C9E69233318CCAC1B00DD895E02004C2980163D898F4A640E74EC1DED7338DBBBCD9B233A13B36893E6EBEF2531DC4FBEE958AD65A36250ECE1AE96846869AC0A7333BED258DD7169F02D7B6D82C78E3175E8C8F790BE949558FD6F110849C07DE95B05D34D759B134D8D8FAEF445CE38A758E80B6376B7F9811F1AFBE0E13D9162EB677771E01ACFACAD9DD1C1EC7BA1A8FF34F0D9456EA2A3BF25F15F1EA77559CC976959FE893A4B1BDDB207C86BEFC1F8D15E31AA7A5BC791A2EFCFEBF398FA70707324EABF51691D895C54AD9C48B3BDD9843F4512EABD371EB100E4F78CCCE05E4E90789ED45A8CE6D5C42C422F7AA00EB2069A6111FE0A536B18DF7330B156BFD25DEB62DA6B83DC8D11F1327615FAD555740C6B832A0166372E3ABC7AAA6D87747A918629ACFC0FF433FA245221EA6567F0EA7ED00571557453FBBDE409380F432F3648F7847EC1680ED7302302E06C0E5F8FA09F3663ECBBE019F62A20129C63507B3C493668E7C90696A45389B5588F27AAEC5B0543C0BDFAC320DB39EBD834D41B45293623D2D2835DBD7D19844E7D4297282E7C18C88A2EDC1633839E234E75416865062BC65D91920EBCD8C3BEC65C1B4613D39FDE6AACA63430C5366739BE0C5D5AC62BB06722C2A5470F6665AB92D10EB279118A77B0A4BEFC1395E168494819481134416F5BC5C1DB7E972730F5C5757270E1A6A3E1470B4F9422964534FC67CED130CE0C9104A223F45EA6A75D5D2E44E35F2F2D90D1B072E7A050BEEC210F98679B1E5243BAE6F831C45E2DFC6796B8BED326C19031EBA6CD03D1FE0E19D462069F2825E316D83939DE8898E9BBFECB00A05FB6FF2986A95DA9C38888D31E6575F5DCA9CCCA67C8FDCB4E2EFA0C99BF91F95665E2ACEC73C54203A7B4EB749E2256294F38ABCB70810
5679D7F07F1E57D1DAE74BBBE5CEA2363B5A9393BCE78844A6CB675FDA074D17D6A1DEEB99485D45BEC60F3C327871729C35A07500AB4B4B75A9ED26C71043AB73003B08F316C6E11982B2144B306D63B7FB5FB296F1FD954FE846A323762F1C4A83750440B4A384190E80EE7577B31B509A202B07C1EA224D534A4FE3822B5B890D9E89A7D3C551A6FEF05FED1677C21D06AEFB3C819BF9FC202402EC1BF2806CE3C6FCF434DE07EB7B6EFBFFDA7C84F989665D423279E37697DA49351920DC73722BCEBB9FA59384EEE829838AE6EEFF044EB7B746248B3E62A5312C3B0D3370CB690F4C8D987850B6FB9FBE458561E3B70EB0AA26C3A7A7988566DB1CA037EBD7B6A813AF551C45AB61D4427BFB3DD3A0C6F8E67FD09D0C35862749F56ABC797B0736097ABBACA4D6324225EA1C505A8D929694291C5457A0168EE2644B5C8C645A719BC86C2B2EA7A40987D7C19CBD9A3A98ADB323E6EFD11A654D057C83F8BF1E0CC0FB8B5F4F9782C7C3C9FC2B91514045AC080E4335405BD7E551EABE8D240C821F378C272503B201013CB1414AB6D2F9F089770E633C44A9806250136AB9A2963DFFBFE1448D8B4AF3EE7942F3E91C985F78AFB83CD0CCA6AC4F95BAB1FCC2C8E0F0B21BB198A964244B1072CBE34B2BDC9AD710C2F571509EE22DB419D41E281EB8D410326DE920CE750B69BB406D171F5C20F0CEA559823E5CD8EF7C51FE4CD9CAC77CBA667B2EF175D50DE4960445071DEB6ECB121918CB08040CC6659807FFB03D11413E00F06AC6C31FA13A1DAD365606137B530CFA5BBA6A21CFEF40A8ECF95EB86280C7B6114DCA20DBE32C01DCB7D6E56F9823A80E9102EBE0E462501B1FFF35D78D504B9B5EB2278636C57217C8187031A78B8EE5CC3BABFE465810E78C2443EB482795A47EB895AE055B0DB7B49C27325690989D77C26F363A6342D2AC8565BEE2835E84F1CADB8B00FD295062AACE7DA2C837BC0414451FA52A1871732EA70B0C5C4A2F0F9196B75CE20648C694540E890C5F87DD53FDA4937EA0B68A38B51B3E3F159F3608C5D15A5319AB79F1C1BA0456044E802AD3B4E9C652484B21639762D910BD251D485CCFFB7BAEB8AA25D8589FC136D9908752EB92FC197F0E12E86675815865FE148BCAC4E1BCA5704ED348E9FB63970E5B34EFD31B3744329CBC5203628BD37720104B11DEADC2B15BC6FB363784977EDD6878CCDD1988BF611D2D1E6722C6512549F479284546288523B274DACCC2B6C1640FC3A190E64C138D48496060E2FD762E05558BE1CBC8BFF939ABAE1CC621CB50C4D3519E2560614D4D8D59902CB074B090B307DCC7C6F9D487B4F5F4B25D990500DA4D24F4625894B86C280FDFFDD837C71022AFD9A820FF8967B3EC4D6FAF8328BF298A3BA13DDEA5995BCAD232C26C734D5E91A6C951D237FF6C6A3A2473
20BF02A266888B4FE69B6EBF61552DF1609584835A76B51CED434225CCDFB13AF5DE243A427DE6945ADD34874DE4C2A315138C47117BF19F37AE444D48579288BCF51849928EAE5C14255430C552D9E04FA71A46D3A928CCA2BAD6B420D38F48A6A73CC190AE2F805DB3D155A2679F04A5548A58066DF77A340D96956D07CA0218D2E56FF7C3EF599E448BB2C3B6BB769C2929D37CC2DFE9B7FCFFF154F7FF5567BE1A855E04851EBDCD36F8BC5BDE92B4A1273093A67DCFC91DCB17006D213800BE8B4B592E05466FE9F68C445A22003F7E8F4A8F7373B68A716DF621BA697387CEECBA4FB62AEBD8E7C5DB87BA5E6A1947EFC6752034DF40FB673B50946CFB14A6EA2CFA8094BEAD9AEABC9657568C99FFF087AF69FED4D03F877873DB86C7E2954C63555E07A5347D48A570ACCFA72B0A1556EDE865C9F4EBC9DC76C30A358EED7138DE7A400292C557D6315A482A13B0A847C7964FB400071C179A79F5B31460DD05FA3E144A0DF68194D112CECD1772A8CB8AA23760B937CE2D34961755B115880363A23506DBF9CF0F67CA8C5CAB6C336E44827C76B7FEFFEE9DF4BF88CFC79D49655622B3A83AC6BD799DA6A4A57415B6953C692A4FAA8BD9C2892E70DECA0ECAD30E07AC08D4B0F54C5CA97F092C66E34BE4AA689F5B217AB9BE1BA708379AFEE9651A99FAA68D916AADBF236B8433916F0CF9FBE02B18C0583AF831015E49F46957CA3F1119222249C696BC809A4AEDC29AF809C6C0E06631F074980A25BCDF8CF12AF331B9752A297CBD2EBBA6D65403D82438FF6A4FA207A6069505FA3AD0E1C2875F4D03585A9B369E5673E0C0FDCD664A9321F239872BCDBD61A2F6A5A4C03D026855345159149D18F908D608FA94C0E6FEC26926758659411C9018868965B5F82565B8DF83033712F7079A76C25443A90D333957672AA55A8F2D72411D69AEACA8F0F93D54B8250D1CB92359F3EC1C74E79E14B07A4622911B19A22682B7B4AB2D545D70ADD6351131132944A397C8F40489592A3CBFCFF88139BEFCF76C7BC711F94FCB1F001E4BE7865B023D032A0E09D6F378C455B5BB12824ADA8239E98B4F9F214ED5DD1614C44DCCD6E3CBF8423FE5D29DDF0A092425718E02505C206462AB000EF70B88C8EF90615E8F4EDF890AE5E62C58C078C29106667E84D41B59EBA7DD4D4F0A0C661F6160CD84D69EA6EB4956DBC6862369F47472F27BA8FD943F34DDA330368993D415BED5D7D4140EE7919884DA1CE78F12722E29A2E71A776A7272909E97C279B89951B4DB87F202E07D7BA3624EEE3947603B2973F71A71679CD10C91C4E004A3FD8CDEABD0A4CF992268B944BF96044F1D2CDE8EE07965191DC93DD1B2D2D635B11B058F4511A29CA849E66408AFFA6023EC0619C8EB1559A068A4C3632950E5E1C19AB8D2AAF8680BEE7B4A3147B14D
4D4286063B8D73BD3C371BF36F59882613E33B5723FAA192EAE5A78BA4D036ED743E45CD9689D685347DAB063C75621F9612C6699F7BE04A8ACA13462E2053C0736C0A19147B126B79C8
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/Futura-Bold cguidfix
/F2.1/Futura-Bold renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
 exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
10 w
1 J
1 j
0.60000002 i
/Cs1 SC
0 0 0 sc
q
308.5 904 m
1476.5 904 l
1476.5 -95 l
308.5 -95 l
h
408.5 804 m
1376.5 804 l
1376.5 5 l
408.5 5 l
h
408.5 804 m
W*
0 0 1951 809 rc
1 0 0 -1 -207 1069 cm
615.5 265 m
1583.5 265 l
1583.5 1064 l
615.5 1064 l
h
615.5 265 m
S
Q
0 i
1 1 1 sc
q
0 0 1951 809 rc
48 492.89859 m
255.18733 492.89859 l
255.18733 316.10141 l
48 316.10141 l
h
48 492.89859 m
f
Q
0.60000002 i
0 0 0 sc
q
-52 592.89856 m
355.18732 592.89856 l
355.18732 216.10143 l
-52 216.10143 l
h
48 492.89859 m
255.18733 492.89859 l
255.18733 316.10141 l
48 316.10141 l
h
48 492.89859 m
W*
0 0 1951 809 rc
1 0 0 -1 -207 1069 cm
255 576.10144 m
462.18732 576.10144 l
462.18732 752.89856 l
255 752.89856 l
h
255 576.10144 m
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 1951 809 rc
1 0 0 -1 151.59366 404.5 cm
/F1.1[ 35 0 0 -35 0 0]sf
-51.320801 -10.04248 m
(!"#$%&)[ 17.961426 20.986328 17.585449 16.867676 19.670410 0.000000 ] xS
-83.723145 36 m
('\(\)%*&"\)+)[ 17.517090 8.715820 27.685547 19.362793 14.201660 9.877930 20.986328 28.112793 0.000000 ] xS
1 0 0 -1 161.5 631.5 cm
/F2.1[ 35 0 0 -35 0 0]sf
-150.28999 12.975021 m
(!"#$%"%&'\(#\)"*&)[ 27.510000 22.645000 17.150000 24.500000 24.535000 22.645000 24.535000 11.900000 23.310000 24.535000 18.025000 23.345000 22.890000 13.055000 0.000000 ] xS
5 w
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -207 1069 cm
1588.5 657.39838 m
1810.1023 654.18011 l
S
0 i
CM
1617.5007 415.02896 m
1603.0239 420.2193 l
1603.1807 409.42044 l
h
1617.5007 415.02896 m
f
0 J
0 j
1 0 0 -1 -207 1069 cm
1824.5007 653.97101 m
1810.0239 648.7807 l
1810.1807 659.57959 l
h
1824.5007 653.97101 m
S
Q
0.60000002 i
/Cs1 SC
0 0 0 sc
q
1530 576.12573 m
2045.3003 576.12573 l
2045.3003 258.87424 l
1530 258.87424 l
h
1630 476.12576 m
1945.3003 476.12576 l
1945.3003 358.87424 l
1630 358.87424 l
h
1630 476.12576 m
W*
0 0 1951 809 rc
1 0 0 -1 -207 1069 cm
1837 592.87427 m
2152.3003 592.87427 l
2152.3003 710.12573 l
1837 710.12573 l
h
1837 592.87427 m
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 1951 809 rc
1 0 0 -1 1787.6501 417.5 cm
/F1.1[ 38 0 0 -38 0 0]sf
-116.59766 13.934082 m
(,''!-.#"+-/0)[ 27.869141 18.332031 18.332031 17.292969 11.726562 20.836914 18.109375 22.785156 22.785156 11.726562 22.748047 0.000000 ] xS
1 0 0 -1 1787.6501 631.5 cm
/F2.1[ 35 0 0 -35 0 0]sf
-77.489998 -10.049957 m
('+$*$#$,)[ 23.730000 16.450000 24.605000 13.370000 24.500000 17.150000 24.500000 0.000000 ] xS
-66.605003 36 m
(-.//"+0)[ 24.220000 23.415000 14.840000 14.070000 22.645000 16.205000 0.000000 ] xS
4 w
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -207 1069 cm
467.18732 664.5 m
591.59998 664.5 l
S
0 i
CM
397.39999 404.5 m
384.60001 409.29999 l
384.60001 399.70001 l
h
397.39999 404.5 m
f
0 J
0 j
1 0 0 -1 -207 1069 cm
604.40002 664.5 m
591.59998 659.70001 l
591.59998 669.29999 l
h
604.40002 664.5 m
S
/Cs2 SC
0 sc
1 0 0 -1 883.59369 719 cm
/F1.1[ 75 0 0 -75 0 0]sf
-83.935547 28.383057 m
(,''!)[ 55.004883 36.181641 36.181641 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
523 492.89859 m
730.18732 492.89859 l
730.18732 316.10141 l
523 316.10141 l
h
523 492.89859 m
f
Q
0.60000002 i
/Cs1 SC
0 0 0 sc
q
423 592.89856 m
830.18732 592.89856 l
830.18732 216.10143 l
423 216.10143 l
h
523 492.89859 m
730.18732 492.89859 l
730.18732 316.10141 l
523 316.10141 l
h
523 492.89859 m
W*
0 0 1951 809 rc
1 0 0 -1 -207 1069 cm
730 576.10144 m
937.18732 576.10144 l
937.18732 752.89856 l
730 752.89856 l
h
730 576.10144 m
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 1951 809 rc
1 0 0 -1 626.59369 404.5 cm
/F1.1[ 35 0 0 -35 0 0]sf
-87.414551 -10.04248 m
('1!2*&3%"\)2)[ 15.944824 24.523926 18.901367 10.800781 14.201660 9.570312 12.851562 19.362793 20.986328 27.685547 0.000000 ] xS
-88.841553 36 m
(3%"**%\)456)[ 12.851562 19.362793 20.986328 14.201660 14.201660 19.362793 27.685547 20.986328 9.023438 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
1037 492.89859 m
1244.1874 492.89859 l
1244.1874 316.10141 l
1037 316.10141 l
h
1037 492.89859 m
f
Q
0.60000002 i
/Cs1 SC
0 0 0 sc
q
937 592.89856 m
1344.1874 592.89856 l
1344.1874 216.10143 l
937 216.10143 l
h
1037 492.89859 m
1244.1874 492.89859 l
1244.1874 316.10141 l
1037 316.10141 l
h
1037 492.89859 m
W*
0 0 1951 809 rc
1 0 0 -1 -207 1069 cm
1244 576.10144 m
1451.1874 576.10144 l
1451.1874 752.89856 l
1244 752.89856 l
h
1244 576.10144 m
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 1951 809 rc
1 0 0 -1 1140.5936 404.5 cm
/F1.1[ 35 0 0 -35 0 0]sf
-27.32666 -10.04248 m
(7\(5%2)[ 17.858887 8.715820 8.715820 19.362793 0.000000 ] xS
-78.416748 36 m
(%8&3"#&\(9.)[ 18.696289 19.533691 9.570312 12.851562 20.986328 16.679688 9.570312 8.715820 21.037598 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
780 388.39859 m
987.18732 388.39859 l
987.18732 211.60143 l
780 211.60143 l
h
780 388.39859 m
f
Q
0.60000002 i
/Cs1 SC
0 0 0 sc
q
680 488.39859 m
1087.1874 488.39859 l
1087.1874 111.60143 l
680 111.60143 l
h
780 388.39859 m
987.18732 388.39859 l
987.18732 211.60143 l
780 211.60143 l
h
780 388.39859 m
W*
0 0 1951 809 rc
1 0 0 -1 -207 1069 cm
987 680.60144 m
1194.1874 680.60144 l
1194.1874 857.39856 l
987 857.39856 l
h
987 680.60144 m
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 1951 809 rc
1 0 0 -1 883.59369 300 cm
/F1.1[ 35 0 0 -35 0 0]sf
-68.829346 12.97876 m
(:%;<%*&*)[ 20.507812 19.362793 21.379395 19.072266 19.362793 14.201660 9.570312 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
780 597.39856 m
987.18732 597.39856 l
987.18732 420.60141 l
780 420.60141 l
h
780 597.39856 m
f
Q
0.60000002 i
/Cs1 SC
0 0 0 sc
q
680 697.39856 m
1087.1874 697.39856 l
1087.1874 320.60141 l
680 320.60141 l
h
780 597.39856 m
987.18732 597.39856 l
987.18732 420.60141 l
780 420.60141 l
h
780 597.39856 m
W*
0 0 1951 809 rc
1 0 0 -1 -207 1069 cm
987 471.60141 m
1194.1874 471.60141 l
1194.1874 648.39856 l
987 648.39856 l
h
987 471.60141 m
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 1951 809 rc
1 0 0 -1 883.59369 509 cm
/F1.1[ 35 0 0 -35 0 0]sf
-81.5271 12.97876 m
(:%*+9.*%*)[ 20.507812 19.362793 14.201660 20.986328 21.037598 19.191895 14.201660 19.362793 0.000000 ] xS
1 0 0 -1 892.5 104.5 cm
/F2.1[ 35 0 0 -35 0 0]sf
-121.7825 12.975021 m
(122'&3\(+0456)[ 29.155000 18.690000 18.690000 23.730000 11.900000 24.535000 24.535000 16.205000 17.815000 10.675000 23.240000 0.000000 ] xS
1 0 0 -1 1147 224.5507 cm
-82.162498 -10.049957 m
(73*4$5\(,)[ 32.375000 24.780000 13.545000 10.675000 24.500000 23.240000 24.535000 0.000000 ] xS
-132.9825 36 m
(84,"&"9*+\(#*4$5)[ 19.180000 10.675000 10.675000 22.645000 11.900000 21.700000 25.970000 13.055000 16.520000 24.535000 17.150000 13.545000 10.675000 24.500000 0.000000 ] xS
1 0 0 -1 631.18732 208.5 cm
-80.080002 -10.049957 m
(:';<&2=')[ 12.390000 23.730000 22.820000 23.800000 11.900000 18.445000 23.345000 0.000000 ] xS
-108.1675 36 m
(+"\(00">?,@&)[ 16.520000 22.645000 24.535000 17.815000 17.815000 22.645000 34.720000 24.535000 11.025000 24.080000 0.000000 ] xS
ep
end
%%Trailer
%%EOF

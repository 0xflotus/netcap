%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 1531.000000 697.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.14.1 (Build 18B75) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 1531 697
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 1531 697
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: Futura-Medium
%!FontType1-1.0: Futura-Medium 1.0000.1.0000
/FontInfo 1 dict dup begin
/FSType 6 def
end readonly def
14 dict begin/FontName /Futura-Medium def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /T put
dup 34 /i put
dup 35 /m put
dup 36 /s put
dup 37 /t put
dup 38 /a put
dup 39 /p put
dup 40 /F put
dup 41 /e put
dup 42 /l put
dup 43 /d put
dup 44 /ellipsis put
dup 45 /u put
dup 46 /space put
dup 47 /r put
dup 48 /c put
dup 49 /o put
dup 50 /N put
dup 51 /H put
dup 52 /A put
dup 53 /R put
dup 54 /n put
dup 55 /g put
dup 56 /h put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -1074 1 index div -591 2 index div 2707 3 index div 2164 5 -1 roll div]cvx def
/sfnts [<



00>] def
/CharStrings 27 dict dup begin
/.notdef 0 def
/space 1 def
/ellipsis 2 def
/hyphen 3 def
/A 4 def
/F 5 def
/H 6 def
/N 7 def
/R 8 def
/T 9 def
/a 10 def
/c 11 def
/d 12 def
/e 13 def
/g 14 def
/h 15 def
/i 16 def
/l 17 def
/m 18 def
/n 19 def
/o 20 def
/p 21 def
/r 22 def
/s 23 def
/t 24 def
/u 25 def
/hbar 26 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontInfo 1 dict dup begin
/FSType 6 def
end readonly def
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-1074 -591 2707 2164}def
/UniqueID 4208071 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C55AC8266BDD340E521355EEF85826934CAE169B3813170EF21157F980278DEA2CE475C6187CB4267A04435AB7CCB196A466EDED31699319305B4913DB428C1F94A0BD0621B41DEC2216CE6C1E3EBC36487BA48FFFC5F94B7C8705655675D4E21DD11D422EFC346F0840F70FCA808FD56424C244741A5EEC370A3276C5E050182153744A195066BD7AA429092A1D177FBAF786F0AF577C4D7E983BFDF2B7FE821BBBBAF2C47B5474634C513F329DA852111079F7FA50137683A5514736DF310CA907CA7AED216F32F92FC4F51BE4C6CB308BA4FBA3FCF683C81249F05388C439AB37B064E3AE960655036C7AFE5FE35FC99C7C8E533EFC4BD98932D7CD66BFE0A419539470B19D49241AFBBFDF9B5D21A6CC8967DD99213CCE3A52F4B4E8A2A0186272F970C68B474A39455D1F5E01FA2B844E0404C0FE46BFEC55D8ACEEC7ED11B572CCA9768CEEDB785427CC127D1DBA4F62A6F60E14A631B8DDFA76094AFFE239058AEC888287EB5AACC12E60A369D04C71F18B311CB32E27BB887CC2343A853F035BB3FD49E839FB3A6E47139214FC1082540242C714C82F40060A822E6E2BB6ED2E042C733040C46A82E1E2DBB068579515B765F252F562AA1D197A284D9D5F091B92EA6CE786DABF54DB35B67526B1172E828CB63944C7B21065DDE585737A95A10878A32626737006F95945B65EF4299F17E009A97EEB1D3A59F2EFA76EF4FC2114A36AC55A4DBEC49D99E2D63162375AEF332F0C7AE017731E7806BDBEED957A2DEE61EC18EAA47E4E2E58227E88FCBADD1EBF10EDFDA2A767E192ABF72A0521

1279576FDF3132C4FEE970A7BE39BD1A0EEB0ECE88CFA67EE9336D2AC0A678FCFFD7514951BB90B07E17E179B88303AA10A6C3DF03592CCAB1E22ABFA24555227F9B4CFB117019BF55F6FD08A08E48A915D01903029F8CA2CB1EDD41D0E01FA4D61FBFCBF2E4006C78FF8E6B2FDCB9B0215E3D5EB82864206A9AA770A79CF521FDB716DA8D47A44EC69BA98E2718BD8DB14C8236D70103E13F300C6D618D882C415518A787547BDFCABDC14D1776F3FACA98971CACB3961097418CAA6AD5604ED95F7E870E13755A24173134BDA0F291BFEC00112F9F48252520F8C96C1E2B4A73F02E4E8B5B246B4984C68BD67913D9A715739D4B02D5FA5D376A9BEEFFEBB883D229D29A5C6B9DD02B8FB6D098057BDA6F430ECCE8CC8A02C87DE85CAEA770C48EAC26D5605088F259334CFAF487CE955399005AA7797462CF570CC692B3329DA815A28CBE36ABFC2869544CF316131EF9BC7D026199FE4D58132BDC66C167779BF85BBA2CB37EB2283FCB99228AB9AD5FEDCEAEA8288BFB956449DE21C5F76C88957BF03B7ED8B0F532257A15B6C6030305FBCE8D280697EAEDED773747F5EBF54D7CED59123C8A8539ED5A5A089D82949FA456A737F8543042252659DB7337BAA018976FB1686361F69FE06325BF682AD95A1A49EEFB63BA94F816D97877CBEBE18567FAD32E8BD20841F28F0CF70F9D74EE35E1C54CB1B2AEBB6958F05B34EE6FA77566A762EBC0256CC97A1EE0CA24E11734F6A8D27485AE4102BD1080E0946F4F7FD13EF5F132E4D37B39ADECE890282B967EC554B857194B47F6DCBFDC20EC213DB35EBF329D3D3DFDC27340B373BCA09BBB4CFE4F3D6C20CDFAC88DEAE52D7D30C35510E3CB0ED2867C2B3DD03C054A23F989EDB05FB817C0AE9FAD8DB684222D30BD8411B52EA7C616529B4C5E41894A329C0E25DD9ECD502A3F497A1427E513955CC4EECA266937150897D9BD65889EE995871F949198790905061C85B037E364F254CA69FF3491D9D0AE6538678CA39773A826B986FD3185D71C24B6DC9A9A4525B4AE7014D495F8DD2D7B08636C375AB8C01AAEA9B51B5F6893D93B6CADA644FF9CC495BC7BA3BBC8476BF8B0E4F5C85A7A037F2732D76CCCD1AB6CD109789E4072118D166E9E36089082EDACEEDD1A10865DC3DC27D9DFD81E3FB939187DC96053291BAE785B343DA29D8EDC185519E7CF6E9EE4FF32D84F1D797E64210D3D9420B2A9023BDBA9C853405BB9C5FB9D8BF39CFF94DCB5B85495E68232DD65DD53718DBEC15CE61403B5C15A5C6785C84BD06880BE0DABC39252F8D1E796E311A2E8F913F0CF4F5DA9C2C6BD9155D1960A1FF200C79F14FAF9E16CE6175E6099580AD5034CCAC9558128159232704753E92E7B260DA436F6C1079A6353F57A389EE410CED0DD276EED4312FC334F5B072911A4131FC68912536C
024E82DDAAB2DB2D087464771F6803FE01EF9BF57E2A35F307BB51BEF08667B60BE2902DE44B5B2C02FAD98BAC5914F8D85CB4BB8E735C09E67F97A563D8F9FB8859BD099F2B5D93E116FD07C9AFCD7E9DCC9DE19F85C8FFABDF0E2480B066E088E1479818B4DE42B1C096B6150ECEF25CF83223A871ACB8AEA7528CEBB18103B66694EC99C743F29938E734A99BD58CC6E85027A6C12435D7164A863E4C682837D39B4A3E0095CE030EDF31BFBC2EC126AE3CAF370B3722AF0CDA685EC012E05C9F3EAAA9A1762FDCDBDC4F8C39E9ECDCA1ADD0CDB5FABE9BE27D9457AF58433C1D75F41AC5C2861D342DC04D4673D44596B1AE78706B311E9FB2C975A5DD26F581EFEA4980959A087C9D4DCDE09A6F81C9430B2266D973D1F61A5D32C767E1CCBA2DD217B93771B8B7B828EF17E227759717C3A95D2FA98F98D2DB55207E617BDFFEC9C0221574015488B6BA5614EDDE6065598BE3143BA785B6FE8A9AE225B00EE882376E54AEB4ADCE80B1C30AD6739DF1B461948B373ACCED2A1F2373DC4D2B4C56DB37D36175ADAAB332AC5261C911542850F43066EE81CB516553129BCF19838574F6B076D2CB29A372AB5136359419537E70E4F851992A4DF6370EFF708D45C94F421F539C1866116C3C9FEED9C30B2B2D5CC8D60A9438B7ED849F3EF32F3417971D010164DF11D46BC854C7381E806A0F8CA6C53A5A27943C5EE9DF68CD208BA29CC65FB717EE94B4FC2A66CCC7FC42E8D75C75A117C7AC6E2F
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/Futura-Medium cguidfix
/F1.1/Futura-Medium renmfont
%RBIBeginFontSubset: Futura-Bold
%!FontType1-1.0: Futura-Bold 1.0000.2.0010
/FontInfo 1 dict dup begin
/FSType 8 def
end readonly def
14 dict begin/FontName /Futura-Bold def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /N put
dup 34 /E put
dup 35 /T put
dup 36 /C put
dup 37 /A put
dup 38 /P put
dup 39 /space put
dup 40 /u put
dup 41 /d put
dup 42 /i put
dup 43 /t put
dup 44 /R put
dup 45 /e put
dup 46 /c put
dup 47 /o put
dup 48 /r put
dup 49 /F put
dup 50 /l put
dup 51 /S put
dup 52 /n put
dup 53 /g put
dup 54 /period put
dup 55 /colon put
dup 56 /a put
dup 57 /p put
dup 58 /z put
dup 59 /parenleft put
dup 60 /m put
dup 61 /s put
dup 62 /parenright put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -227 1 index div -344 2 index div 1459 3 index div 1099 5 -1 roll div]cvx def
/sfnts [<



00>] def
/CharStrings 32 dict dup begin
/.notdef 0 def
/space 1 def
/parenleft 2 def
/parenright 3 def
/period 4 def
/colon 5 def
/A 6 def
/C 7 def
/E 8 def
/F 9 def
/N 10 def
/P 11 def
/R 12 def
/S 13 def
/T 14 def
/a 15 def
/c 16 def
/d 17 def
/e 18 def
/g 19 def
/i 20 def
/m 21 def
/n 22 def
/o 23 def
/p 24 def
/r 25 def
/s 26 def
/u 27 def
/z 28 def
/l 29 def
/t 30 def
/anoteleia 31 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontInfo 1 dict dup begin
/FSType 8 def
end readonly def
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-227 -344 1459 1099}def
/UniqueID 4364665 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C931313987B77B87D3A530FEA8139219B56B58888BA339BA81F732C17298F0590CF22B27CCC19927367EEDC0415EC3B739936162156A508803609B6C1CCB82F2EC388E5A79B2348AA89B2C742D7A3AEBE6FB143E68AF5EE36BAC1D9E071C342579B20F404CF831F46D7235703AB9E18059B29C84C82DC5CD764662836C3A8FDE8DA5726D5DC2D561AB4D8CC79FC8F6693191D6A9C4A87510AF405E5C1831FF7FA9A021D9A699DEC2540E1BCCA534AE4130FD89F09B3517079A1FB84560ADC584BC2441EF9E725B1F77ADC7A2C88AC9C801D50FD6AB0ABBC789AD9C810C5B90ACC30EBA6CE1464534EDB2008BAFED6584156EADC57AD3F6F31F40448F5CD1BDC89C836375EF4BD878C638E22DA35388C17E1D37080B2214B5DC061CB32B25F48F52C757C21781CD934C7ECD8FEB85DC1CE25EF9C3C1B288363EB925A8F72B3CE0BF1A7784CF6B7FF299D93DBD29ABF939E9E4415773475250828AFEFA16B688AE3442A0E6FF07DAEE2714D7FFBB91FCFEF56C9A40D30F5050CE640C29E98675E33CE2343242A4E22FCF6A0E3E950DCB26CCE3C2504D4E43EB78E7FCA49D1A6550B3F896D3B8558F4A8D980222F74F85EBEE02642A4F2387110884C44F480B78124083CDD7CF9F8F80CF17F00D9A441AEAEDF47E31291116CBD6B500C2DE32CC09ACB95DA0D076A44B6D3BC4A69CB73661A3960B2B22386A46E2BE20E8253C2C14FC56FB0E56CE7EC4E3BC3DCE9994B574799E2BC75B8CC2CBA14283074AA75EB02E0
38EEA226D79E7590B866B04663099450163F28696AAFE82BF1411C14FF42665918E44CD5B104A8FD3CA5AF905CEEB70D15D05708C29C00FE77AE0D4AB2C1D1C56E8872DBB4C5D2189A4B28332F55BCF5B9A5A8B79016594721E0A9F6A48A85C0CB2B70C7BC074555C02EBC6FFB4CC2C9885374A793CB1E37960383C98EE52F56793AFD5D61743BAA4E927966BFE43D2D9A0DA53B8FDC5C6D9FD7A753D6159A7F343939E992B8B7A955DFE15A33FDFB2C9587E2364DD19623859AC454C7893A87F2059528774030BBDAD6CD345D0F458A5033CF2B89C252597C5A3DF328ACE8009F7B7C8D157912E3CE041F216ED1AAB5423025EC1B4C65E3F4F39267D3F5C18D73803A87879B148DCE1B6C9F49066C2324472A440F095333709C64B64ED01042027741698F836C6ED7AEEE3DEBA01DBBD2BAE36CDB6F316939C48D954060457B3FCBDD9147582291A05340C582488A4BCB031148F563DEBEC6984D387D0D1F131C898E1C0DD652D3F3E51DEEE3F62A8C8E9E5D8E359631BA242E879ADBB2F31C5474109B85EBF87608D1056B5E16EBF8640271350616F1619D0367F0841A7363024BB2C7F78134276438394E40E8ADD6702D237E46C5FD9D7DD4466A7F2D3D3F0926A5A3A4E809CA26587383CF1B229B300BEAE640F116E24E636650849C27E141090731728BDFAA0CD415317974820DAE7DEA395BF00B1A6EDA2264B0FC029C081C24F63B25CFA56E09AC697692DC2517165BD18FABEC9E4B2AF7B4360540598B0070E2C45F3C5CBFCB0CBB78BFCC4F203E66AAFE7521D9A750B4E22FBD36EB2A367AEF1A2396F32F1D272609EFE207D8C96793BD66E66F60C1B9F9840B774D8EDD9B8888E45DFD5892918A362CA93970B6E5E1D99FB8EADBD681722AB95302EFD12135A468857C7C69884DA9580EA2B10FADFF239B3E78D3077CC2D7E0387C98F6F088B0391F53EE29AE8A43BC38B60DA2673C35F974B783F9FB0F140901F805445EDE146AE0229BB23EEF6818EDE59CF4852243755E8552BC42EFFFD5E8FC13530200A57ABEAA19500E0BC28C682D359021159654000EC7C71906ED9602250E15D5A9ABB1020F241C89C86296D70C2D70A9CD088F6C9728B609C314CAFD59B40BB0EC6C1FB2A14C7AEA899B4EB8080333B2867E464D90523EA47F7DE875A83142DEB0C3E38D5CD9C3AAAA886A2C6B686BB22421BFCCCBFC63244824086DD569B2BAF78F1D6A0021ED3DA74AA02AEDF04A7894EB5FE37B010EACDEA77D68EBCA3704AD41BF6EA99DEDF49BF7551C8A28A7F049A7106286292FA2EF6275705807C24B470AD38AD28BC83307338E77EF643E5DB3E5699A4C985F6E094B8CB6FE020DAB8A5C80892C7412630D31A1153578CA5735192BE276C40EA094F9565B2AB369A8F39F5CF59F75A0FB0215BE96261C8F465885609748FC94FCD4174C83D9

5235F1ACB14A9F45559C64FEE8E0B8FDD6BA0197E4E00181D10FC6E0962621319FCCDE16C0AF425CFDA65852A6569FE6C11E0CBB7A78C6B624AC6EB3430897D254C3704F818C187EC1CA11640B127063E840FCD7D0D2AC1F123B0D3EC73A55C5BBAD5195FA98CEF913398874F52E2B46B9488F8975886D37B4C0A7B8BCC0E1F0B2C899FD960BC894A69A9040DAD1F14DB6E1D7FD108E9E64250FE0DAFAE315CBF06F8E99B8D855948CADAC6668DCB107941D4D311E65ED77A870C9FD603C7490FC230457B0B4D91968B1DD5DA23D766916268E9C5C74A2AEFA9A8F609EC06257B2F21F42FF39146C341D4D78BE0C9FBADDA5931E69DBD680A395F86DE8AD3B55A5A86E6AE4FE3C25CDE2AA7A23777B6B32B7010D7D659535538A483050A177AF017A3F8939A05633B8B73FA130F1AA52617D0B7CE88775FEE467EBAFFAC6028DA134FE3D1A9AD5EDF7947B03B473FF6EC9AC2752F41B68F0D430421E26EE6539347F84490A300904D5F38794B5C9F7FD7FD6857CF372DB5C5F5F72A2231D47105800B2A61BBBCCAEE92AA1D16C7CCD9F4CEE48852E1AD18B266BB6060479B6471739146815D44729196FA04776F763B6FB83392FCD3FD2448338BF7BAFE8FC7DBEEDF034DA8619E25D90157D7FBCCCA390DDDFDFA59549222FB78C991A516F690292009996FF6D7D60C1B86B056E71DDEDCF8C692E7D901F1AAF666525CD3F559EC065C2784A58E606666DB9E93D8A94C49132032C89512CA9D93B746D7030F0B08BC59866C5F4AB37DA69AB98F3BC3A083EC1796FDD2671D7767B430EDD657E46E5C95E08618F30EA0F12B4D71C07D2C50385A8B8F509C562AC9EE75E6E4BBD08FC46F13D804B647592F265989284047EB03C328A971BD9A72569DFEF11C1B4ABBBAD1EE3F081D8A182E246535A832D044642F3002ADE14CCAF7E73A758F08028982089884930EB2D7826779F0B11782C36FF1C0C4EFAB3CCB83CAF1A2A285508B92CC2C2B63FCF4272AC3DCB3AB254D07E26C1ACB3328ADA79DDF4E036501EED5CE389F268D8B0C34D176425C7929A5C63CB06904DA244B51F0372E5D2C0427745E25B43C84564DB127E7BBA16B951469B70B9EDC4738C53DBA8C56AFAEE9EA75791E4C835D2AA3B35B87DCD1F4FD3F73AF33E9562E96C98EA546B5E9BEC1FA7AF6C9C3168FEC4C1F2001C6588896CC22A9D45A78BB17789046B6C131F76D8BFE5CF902F515061DADBAEE875C13D53B0CFCFEF2C1AA1EE30F61F9FA549E10D6F0D62D0A5609E7E69108ED0A863982BC07A1916D0C2E62733929B66DE6A9794249BE93BE219A4EE4784654A0A83BF559FC440CF3DF68E377BB15B26DA10888538891F911138A51452D0E99C9D1876A1251F4E44B92AACA166439FF44A7FC17F35ADEAF4EB31AC93690B724E1742BBFD35256D93FE81AAC6E451BC7FB0837531
CA1D751469DEAE36A400916F9D988440E3A2B8E0CD6EC27774BF7ADBB1AA8B045D2639EED7BC18E41D39E5AC1AFE18E4BDFFAC2C966CAD3FB988A8A01F323220E6D82F6FD84A9BC60AA1ABF887F1C347A5BDD1EBE65B1E6950C93B8B11034D9F70A57018BCCF70EE6744756FB278713683F31861D0FD1DF939EE1609C7E3CBBBE2DBD9C1379A5ABD46E303157DEB81633BA8902A0DE31526A64CF5085CF97AB6C3DBC277CFE8739DDAEBB075DCE64C6A3FC3D16ED8C41D580F026766A8896CB67F8D528475966295E75C45BD4527F17258BCA71AD62D680F924AF7D79B25C54F2AEA45DED2040A5C8F456CCB2FA43D79BFE6EF31DD678BA5D90BF13F3ADBD568AE605EB18A28DB2CD7C4F6D4A4D52E0F1E1FC9403D2EAB90D5E9F258AF83224C04446583D43692C940266CB9FCDF060E2736D315E56F0936CABA0DD796E9075D6682F046942CD17A7C14A7E178A3D98463D3291ABDECD1CB4914A18961BCC0BE051B3EC883AE89B8E8FFCB1AED26036E5A2C5DA11DBBA5917B66D5BC8D0D0CCACE50C70AC73DB7CFD36CDBD1F1F879FE8154DF8A9F6E5FC9991A87C753FC77440EC47DD641FAB706B62537B5682D772DDA39BB2C0D248E945F5A7D8E3BF363DDF179018F6EA5694EB466622A0359353869E99E544E7C8E6E4407149EBE5609B074560997890C10F1741E0DE5FAC58FB3C02A1393670D05BC7BC3868E250484FCD5B47F4A0391F11A827B5DF6900A6CE175FA61D1996A8502C3CACC5DD112A533081ED4805EFEC1EEC891688D5853240CFE7D9550A91C57B842EF32C2FCC5CB2FC3BE1017A63A38E21506358BF2FD57C8CBCB93E37B09E08826C57A528FAD81A19F795A9E0118DE91BF8FDCC87C11CA6E1F50862E5855597E86CE5C60E265812A277F29951A569412B64A552E5B4554010CBC7D58A9400A3759C101B04AFAC4D71BFE2746643E6AD46E0C68EE51B3A57ACE671A9A5CB12B8789C0993BF65A0BD6E10E20E4864BBE137DCAF49139E156F91FCC58CFADC0BF984C422573231139B0310FF178C1DCD0E483BE53EA70B5C042FC8BBB639F1B8FA0E1C6C1670CE6741D28828CD13053759345B5896B795427D771B7EA2FBC5B9640DCF89542F11DA906D5E70C15E8E048F624C2F3D222AE48B94CF81DAC332CD267CB5FE5D93A890A8419ED5BC61DED08976940847AF3B0B3F5BD09379C953AF80B147E79D06B73511D496658246CBE7B44269B6ED29FA4C69199B1F9FF68C1A76CF82CF5CE32946F2CEC76809443E53B8BE1CAE9BF224622C3FC7C707675D9E2C6CF3F06DF109015B630AEFA9242F92CE21786176348F6BA097FBB8CD398CB334514B6FB130F0D4A68F5BF1C68246077B8D67498D3161D561E87D4282F6C7555C454CF254711EEF7C9C864B7
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/Futura-Bold cguidfix
/F2.1/Futura-Bold renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
 exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 1 1 sc
q
0 0 1531 697 rc
85.906334 393 m
293.09366 393 l
293.09366 39 l
85.906334 39 l
h
85.906334 393 m
f
Q
10 w
1 J
1 j
0.60000002 i
0 0 0 sc
q
-14.093662 493 m
393.09366 493 l
393.09366 -61 l
-14.093662 -61 l
h
85.906334 393 m
293.09366 393 l
293.09366 39 l
85.906334 39 l
h
85.906334 393 m
W*
0 0 1531 697 rc
1 0 0 -1 -1246 1923 cm
1331.9064 1530 m
1539.0936 1530 l
1539.0936 1884 l
1331.9064 1884 l
h
1331.9064 1530 m
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 1531 697 rc
1 0 0 -1 189.5 216 cm
/F1.1[ 25 0 0 -25 0 0]sf
-52.886963 -137.72314 m
(!"#$%&#')[ 12.512207 6.225586 19.775391 10.144043 7.055664 14.990234 20.080566 0.000000 ] xS
-27.01416 -104.97852 m
(\("\)*+)[ 12.756348 6.225586 13.830566 6.225586 0.000000 ] xS
-27.01416 -72.233887 m
(\("\)*+)[ 12.756348 6.225586 13.830566 6.225586 0.000000 ] xS
-27.01416 -39.489258 m
(\("\)*+)[ 12.756348 6.225586 13.830566 6.225586 0.000000 ] xS
-27.01416 -6.7446289 m
(\("\)*+)[ 12.756348 6.225586 13.830566 6.225586 0.000000 ] xS
-27.01416 26 m
(\("\)*+)[ 12.756348 6.225586 13.830566 6.225586 0.000000 ] xS
-27.01416 58.744629 m
(\("\)*+)[ 12.756348 6.225586 13.830566 6.225586 0.000000 ] xS
-27.01416 91.489258 m
(\("\)*+)[ 12.756348 6.225586 13.830566 6.225586 0.000000 ] xS
-27.01416 124.23389 m
(\("\)*+)[ 12.756348 6.225586 13.830566 6.225586 0.000000 ] xS
-11.804199 156.97852 m
(,)s
1 0 0 -1 723 626 cm
/F2.1[ 99 0 0 -99 0 0]sf
-440.41522 37.01506 m
(!"#$%&')[ 90.189000 56.430000 52.173000 67.815000 79.398000 67.122000 0.000000 ] xS
/F1.1[ 73 0 0 -73 0 0]sf
6.3717713 37.01506 m
(&-+"%./\)01/+$)[ 43.771484 39.779297 43.771484 18.178711 19.960938 22.527344 26.804688 40.385254 34.789062 43.878418 26.804688 43.771484 0.000000 ] xS
5 w
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -1246 1923 cm
1755 1880 m
1755 1560 l
1755 1537.92 1850.8719 1520 1969 1520 c
2087.1279 1520 2183 1537.92 2183 1560 c
2183 1880 l
2183 1902.08 2087.1279 1920 1969 1920 c
1850.8719 1920 1755 1902.08 1755 1880 c
1755 1560 m
1755 1582.08 1850.8719 1600 1969 1600 c
2087.1279 1600 2183 1582.08 2183 1560 c
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 717.9043 470.5 cm
/F2.1[ 35 0 0 -35 0 0]sf
-158.27 12.975021 m
(%\(\)*+',-./0\)'1*2-)[ 28.105000 23.415000 24.535000 10.675000 13.055000 11.900000 24.430000 22.645000 17.150000 24.500000 16.520000 24.535000 11.900000 19.180000 10.675000 10.675000 0.000000 ] xS
1 0 0 -1 189.5 470.5 cm
-184.11749 12.975021 m
(3*452-'%\(\)*+',-./0\))[ 22.610000 10.675000 23.240000 25.025000 10.675000 22.645000 11.900000 28.105000 23.415000 24.535000 10.675000 13.055000 11.900000 24.430000 22.645000 17.150000 24.500000 16.520000 0.000000 ] xS
1 0 0 -1 1284 241.5 cm
-35.419998 -33.074936 m
(-657')[ 22.645000 11.900000 24.395000 11.900000 0.000000 ] xS
-241.86749 12.975021 m
(#$&64.8965:';./<90-==-\)>)[ 18.445000 23.345000 21.525000 11.900000 23.240000 17.150000 24.535000 24.535000 11.900000 24.395000 20.615000 11.900000 13.370000 17.150000 24.500000 35.350000 24.535000 16.520000 22.645000 17.815000 17.815000 22.645000 24.535000 0.000000 ] xS
-236.74001 59.024979 m
(#$&64.89';\(4./<90-==-\)>)[ 18.445000 23.345000 21.525000 11.900000 23.240000 17.150000 24.535000 24.535000 11.900000 13.370000 23.415000 23.240000 17.150000 24.500000 35.350000 24.535000 16.520000 22.645000 17.815000 17.815000 22.645000 24.535000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
559 308 m
897 308 l
897 246 l
559 246 l
h
559 308 m
f
Q
0.60000002 i
/Cs1 SC
0 0 0 sc
q
459 408 m
997 408 l
997 146 l
459 146 l
h
559 308 m
897 308 l
897 246 l
559 246 l
h
559 308 m
W*
0 0 1531 697 rc
1 0 0 -1 -1246 1923 cm
1805 1615 m
2143 1615 l
2143 1677 l
1805 1677 l
h
1805 1615 m
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 1531 697 rc
1 0 0 -1 728 277 cm
/F1.1[ 25 0 0 -25 0 0]sf
-111.9812 9.6276855 m
(2\)%0&'.\("*\).3\)&+\)/)[ 21.386719 14.050293 6.835938 11.914062 14.990234 14.990234 7.714844 12.756348 6.225586 6.225586 13.830566 7.714844 18.334961 13.830566 14.990234 14.990234 13.830566 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
559 239 m
897 239 l
897 177 l
559 177 l
h
559 239 m
f
Q
0.60000002 i
/Cs1 SC
0 0 0 sc
q
459 339 m
997 339 l
997 77 l
459 77 l
h
559 239 m
897 239 l
897 177 l
559 177 l
h
559 239 m
W*
0 0 1531 697 rc
1 0 0 -1 -1246 1923 cm
1805 1684 m
2143 1684 l
2143 1746 l
1805 1746 l
h
1805 1684 m
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 1531 697 rc
1 0 0 -1 728 208 cm
/F1.1[ 25 0 0 -25 0 0]sf
-112.31079 9.6276855 m
(..........4-+"%.5\)01/+)[ 7.714844 7.714844 7.714844 7.714844 7.714844 7.714844 7.714844 7.714844 7.714844 7.714844 18.493652 13.623047 14.990234 6.225586 6.835938 7.714844 14.648438 13.830566 11.914062 15.026855 9.179688 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
559 170 m
897 170 l
897 108 l
559 108 l
h
559 170 m
f
Q
0.60000002 i
/Cs1 SC
0 0 0 sc
q
459 270 m
997 270 l
997 8 l
459 8 l
h
559 170 m
897 170 l
897 108 l
559 108 l
h
559 170 m
W*
0 0 1531 697 rc
1 0 0 -1 -1246 1923 cm
1805 1753 m
2143 1753 l
2143 1815 l
1805 1815 l
h
1805 1753 m
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 1531 697 rc
1 0 0 -1 728 139 cm
/F1.1[ 25 0 0 -25 0 0]sf
-112.31079 9.6276855 m
(..........4-+"%.5\)01/+)[ 7.714844 7.714844 7.714844 7.714844 7.714844 7.714844 7.714844 7.714844 7.714844 7.714844 18.493652 13.623047 14.990234 6.225586 6.835938 7.714844 14.648438 13.830566 11.914062 15.026855 9.179688 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
559 101 m
897 101 l
897 39 l
559 39 l
h
559 101 m
f
Q
0.60000002 i
/Cs1 SC
0 0 0 sc
q
459 201 m
997 201 l
997 -61 l
459 -61 l
h
559 101 m
897 101 l
897 39 l
559 39 l
h
559 101 m
W*
0 0 1531 697 rc
1 0 0 -1 -1246 1923 cm
1805 1822 m
2143 1822 l
2143 1884 l
1805 1884 l
h
1805 1822 m
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 1531 697 rc
1 0 0 -1 728 70 cm
/F1.1[ 25 0 0 -25 0 0]sf
-50.378418 9.6276855 m
(..........,)[ 7.714844 7.714844 7.714844 7.714844 7.714844 7.714844 7.714844 7.714844 7.714844 7.714844 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
559 239 m
641.35999 239 l
641.35999 177 l
559 177 l
h
559 239 m
f
Q
0.60000002 i
/Cs1 SC
0 0 0 sc
q
459 339 m
741.35999 339 l
741.35999 77 l
459 77 l
h
559 239 m
641.35999 239 l
641.35999 177 l
559 177 l
h
559 239 m
W*
0 0 1531 697 rc
1 0 0 -1 -1246 1923 cm
1805 1684 m
1887.36 1684 l
1887.36 1746 l
1805 1746 l
h
1805 1684 m
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 1531 697 rc
1 0 0 -1 600.17999 208 cm
/F1.1[ 25 0 0 -25 0 0]sf
-34.887695 9.6276855 m
(*\)67%8)[ 6.225586 13.830566 13.708496 14.965820 7.336426 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
559 170 m
641.35999 170 l
641.35999 108 l
559 108 l
h
559 170 m
f
Q
0.60000002 i
/Cs1 SC
0 0 0 sc
q
459 270 m
741.35999 270 l
741.35999 8 l
459 8 l
h
559 170 m
641.35999 170 l
641.35999 108 l
559 108 l
h
559 170 m
W*
0 0 1531 697 rc
1 0 0 -1 -1246 1923 cm
1805 1753 m
1887.36 1753 l
1887.36 1815 l
1805 1815 l
h
1805 1753 m
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 1531 697 rc
1 0 0 -1 600.17999 139 cm
/F1.1[ 25 0 0 -25 0 0]sf
-34.887695 9.6276855 m
(*\)67%8)[ 6.225586 13.830566 13.708496 14.965820 7.336426 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
559 101 m
641.35999 101 l
641.35999 39 l
559 39 l
h
559 101 m
f
Q
0.60000002 i
/Cs1 SC
0 0 0 sc
q
459 201 m
741.35999 201 l
741.35999 -61 l
459 -61 l
h
559 101 m
641.35999 101 l
641.35999 39 l
559 39 l
h
559 101 m
W*
0 0 1531 697 rc
1 0 0 -1 -1246 1923 cm
1805 1822 m
1887.36 1822 l
1887.36 1884 l
1805 1884 l
h
1805 1822 m
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 1531 697 rc
1 0 0 -1 600.17999 70 cm
/F1.1[ 25 0 0 -25 0 0]sf
-34.887695 9.6276855 m
(*\)67%8)[ 6.225586 13.830566 13.708496 14.965820 7.336426 0.000000 ] xS
ep
end
%%Trailer
%%EOF

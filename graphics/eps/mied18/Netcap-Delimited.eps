%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 1839.000000 279.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.14.1 (Build 18B75) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 1839 279
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 1839 279
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: Futura-Medium
%!FontType1-1.0: Futura-Medium 1.0000.1.0000
/FontInfo 1 dict dup begin
/FSType 6 def
end readonly def
14 dict begin/FontName /Futura-Medium def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /L put
dup 34 /E put
dup 35 /N put
dup 36 /G put
dup 37 /T put
dup 38 /H put
dup 39 /P put
dup 40 /A put
dup 41 /Y put
dup 42 /O put
dup 43 /D put
dup 44 /v put
dup 45 /a put
dup 46 /r put
dup 47 /i put
dup 48 /n put
dup 49 /t put
dup 50 /b put
dup 51 /y put
dup 52 /e put
dup 53 /s put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -1074 1 index div -591 2 index div 2707 3 index div 2164 5 -1 roll div]cvx def
/sfnts [<
74727565000900000000000063767420000000000000009C000000046670676D00000000000000A000000004676C796600000000000000A40000067868656164000000000000071C0000003668686561000000000000075400000024686D74780000000000000778000000646C6F636100000000000007DC000000346D617870000000000000081000000020707265700000000000000830000000040000000000000000000200C80000033806080003000700003311211127112111C802702BFDE60608F9F82B05B2FA4E0000010000018D01BE0251000300001121152101BEFE420251C400000000020008000005E5066900060009000001210323090123010B010444FD6BACFB02FC02E1FFFEFFE5F00177FE890669F9970252020DFDF300000200B9000005630608000E001B000033112132171617161110070607062327333237363736353427262123B90144E9879176EFF97D8980EB57699D686854ACAA99FED66906082E2D6CDAFE9DFE9CDC6E2B2BDB21234C9DFCFE9E8D000100B90000040D0608000B0000012111211521112115211121040DFD950259FDA7026BFCAC0354052DFE8DDBFDFCDB060800000001006CFFE306510626002400000121151407060706212027261110373621321716170726212207061510171633323736372103D3027E29285FD7FEB4FEBCE7E7EBEB0151B59D9691A6BEFEEFF5A6A6B9ADCAAC898910FE7F032433AE867C6CF2EAEB01490150EAEB4A4AA69FFDA9A6FAFEFEA79B7475A3000100B9000005250608000B000001211133112311211123113301A2029AE9E9FD66E9E903AC025CF9F802D1FD2F0608000100B90000036806080005000001112115211101A201C6FD510608FAD3DB0608000000000100B9FFA206080671000700003311011133110111B90466E9FB9A0671FB660431F99A0497FBC70002006CFFE406BA0625000F001F000013103736212017161110070621202724131017163332373635342726232207066CEFEE014E014AECEDEEEFFEAEFED5EEFEFAEBACABE0F3A7A7A5A4F2F1A6A6030B0146EAEAECECFEB5FEB3E8E9CFE50170FF00A5A5A8AAF4F7A7A8A8A6000000000200B90000041B0608000D0014000001112311213217161716151404232733203534212301A2E90108C263644C85FEE4F16C570141FEB54D0273FD8D06081B1B4B82C6D4F8D8F7EF00000000010017000003C506080007000001112311213521150263E9FE9D03AE052DFAD3052DDBDB0000000001FFF9000004D406080008000009012109012101112301F1FE08010C01610162010CFE06E9029B036DFD970269FC93FD65000000020060FFE4043E03E9000F001F00000133112335062322272635340033321701141716333237363534272623220706035CE2E28BA0CA84830106C5AA87FDEA4B4D757D

0270029402B002EC030403180330033C000100000019005D00070043000400010000000000000000000000000002000100000000
00>] def
/CharStrings 25 dict dup begin
/.notdef 0 def
/hyphen 1 def
/A 2 def
/D 3 def
/E 4 def
/G 5 def
/H 6 def
/L 7 def
/N 8 def
/O 9 def
/P 10 def
/T 11 def
/Y 12 def
/a 13 def
/b 14 def
/e 15 def
/h 16 def
/i 17 def
/n 18 def
/r 19 def
/s 20 def
/t 21 def
/v 22 def
/y 23 def
/hbar 24 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontInfo 1 dict dup begin
/FSType 6 def
end readonly def
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-1074 -591 2707 2164}def
/UniqueID 4208071 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C55AC8266BDD340E521355EEF85826934CAE169B3813170EF21157F980278DEA2CE475C6187CB4267A04435AB7CCB196A466EDED31699319305B4913DB428C1F94A0BD0621B41DEC2216CE6C1E3EBC36487BA48FFFC5F94B7C8705655675D4E21DD11D422EFC346F0840F70FCA808FD56424C244741A5EEC370A3276C5E050182153744A195066BD7AA429092A1D177FBAF786F0AF577C4D7E983BFDF2B7FE821BBBBAF2C47B5474634C539CECE8E28861FFEDD14063E06F26E8EA65660696FA79EE1AACB7EF71A26FAFD50849DA157F9FD616D52DB2DB32838A415DC9346D015CDCC9191E698BFBB345687E0AA8642E2198F49B074BA10C542066EA46ED7D5C57EDC93F511362DACF768581AA72844696E631731F9E2B74481FB5960DCBC62D6FE7FA7FC1DFB1F19A7DE732C99457B75BD2E85A2FE95A6D2FF20D8B15F4510E190DF0268DF34049838C8666242A101B808FBC50EDA7BB46F451BC68813EB5555D780DB98F0790B0E7362757E62B537019CB675C5CFE10F2836712F9A1E64102E6CFF94D287F95408DE5B533A14DBFB69F36A4E9168B24FC62FD0EC22A7989845D4DD689AD2C5229DB0E671282B1A83ED2018F5BFAD28A5167C8561347843199957C343FDDC935096A5BC1CE11F97773261E697C202CA88D9871D3E95C9A77365B3839D21260E2512577CA72510E5F24D26C2C4C1BE9E1CE7517FD348E020EB640A4C14EFD380C554DC8A71E60DC5C099B5BE0C5A13350ADF337EBA273765701ADE605FA2E4B30308E1C2EE3B4DD2BDFECC76F00A9DFBDA5BF9997BFCE4936E83AADD3DC
F4E1BE3DD74D801192EBD70BE47C0C01A3F0DF68AB58BA6B064B6E4A2D021A03C1C1619E67F0DD494D71997A14ECF7C358D28C4EF24BA5EB8C962CBB6963B67B70DCB8C7921224397053A56C3C6605D9B5B8B631440381A3AEC861F0C9DE580AA4386B7CE861E8220062F9DC35740D2258CF8D593C2935E23E5C93079EF146DF4F58B7F005E931D195AC345BED66166CFB5A680FD6F63FC467EDAEF1641790AC4F7C81B8749F8556BCF01F228252358CEF47E9608CDF411CC1F77DABBFEAE692E5E0ADF98EF682F1DC26EB8986E012EAFFD474B0647FD692DCD7F49E99C861C26179267421FB958171C9ADB6C8F23504D4E0DA4860F418532AEB145733159C2EA451B7510DE6AA8D494E2403871BA03D990B03997936A3B6A637726BA53739DCD9E16965A8696DD71B3942FB1F594737EF2E675AAADDDAE50E5D0266CEA4B12A7EA68E0FAA4F99F67F35F40235701EFB4C22DEEB43306EFC383A1FF8E225E82BFB10204BB4FE407F3A2408987A36539C858DAE886DF02B256FAE78DBAEC565FA12A9D1887D9ABDAA342115FDB48FB6C300AED0936D8F16E720730F84522D622B23982E34E5B7A355B86D9527410AF073947162B6697BD972544601D3C6ABCD0E86B46F9E900CEF201BABE92F57DFF38DB1E5DD778FCF7D2AC9D00A0EB52683EE37D938617A86CB3183502488C04875AC86170BFE0A6A01DA695CAB58F17CECB97F6701A7C15B0410E73E3B7E929864DD848382DAB882DD109BBAB14408D2783FEB37E3BD1248BBD02B79952F9BBF1F8137DBC68BED2A879E385A0695E9C0BFD6E78FD0D8770010103CC4539F342628174476E51F99542841A026AF7D1C0DA3F1E02DBC87F91749039D00D9AA1F449FE018177CB3CCE912723BFFE76E853805F5EEB6DAEC8A1B75A3AC25861178AF7535374B01FFAD3F56003ADA7A913AFAA8B7D206B93C8AA64A9E46F7773BF465A88D0A573A5F13C5B5116E0D2F1C298FB4FA610751BD812A9C983D8A92C2AF2BEE167859D13E9E7087E67D7DE6AA027E7AB4A2C64318D9279D6A8308B27E6C4555DCE7A20161A914A594FA96B2266D7F2A6835ED717D1DE59CB418F5595FB79CC4E24550A6C42AB8ACF9B570F0D755137E08A237B93BE38E66D5B71540D9C1C49BD16129E11BD6CFADDEFB03C9C0CCBBE06446BBC754F486EA61FA545A132D06C2B020C949758779D314CBD2D37639207D53102177706B16FD68061C5D982BA70A955A2A80EC96BFC7A43C09950B23B1B0AF1BB088B224F4CDECBE15B0C129A0788C10CC81CE86F6F585EDF21B68111BB217CAD4E3367E14875231E77CEF13DCD9D1573698D43CDFB95B4DD61D6C7DDF663D70DEE8C7C610ACA5657D21D92BF16E84C9DF5632DDF8927367079043967F85D8D576B19E03D942AC21AC875AE422AEF7552D7394BFF21A5601C2910941F3F267
B00A58F6B6D14270FBC2477A4081FB59C77DCE6CFAF3D56232ED751A8C422018B38C5D253E2992E9DA01B2514F58A33DD1AA013330B00A511B24A0720B334FD3B67527F9D9372DFD42006A09039F54541ADD73B4BED9870B65DAE693D700415DF680D71CFCB1911AA3C92F038876CD0A36B4D13D0C3D5648C9FCF1F2560F69E69B8B069CCF0C1DBEBC9A45463C848CF84745DBDDC103D247F4124991CAE4440526DA99409D3F1F942F297043FF7D6A278ADBFCA252294594E6465AB60983C22714AB62B57D69A773C4D7B9481E98CF7B5EECEA947BBEC4AC89333CAD836A8D35858882A93A97609BFE005C9B55A164092A7F461B582B88B6EE4D31438ADE3C37749B5470154EDB045279FC92F24E43DC4CE666C7B99B7825481C99FCE3565B63D204F8719FA561B57591D2CA906A889BA2A8BD59BF0873EE3D7F26FEA5DABB5AFD3ECA90A38961E8C46EDA2EED53E9DA50AB8C328F0FC8A82237451B79ADD7ED20380C6EBB0DFD6772CA31E765C71B1F75C606749C56D31D68B15F43CBF584CA9754DCA6B6EC10C1956D91E6C186291D688C8736A38D0D4C49D6D94A334D23D4FF2C4AF76574FFC3B05C0704B64E1EC8E391B213F59747D8F975C3BCA194B2E1A8AD21D0A54E0B1FAD5A2EBA487BB9170865815D741F580FAFBDC7B7C3A7F96AD82187860C1A36EB0134EA2A2DF418850EA5D51121B53ACBB694F846F48727DA74CE6132A3EF9DCB4174F4CBD5099FC2F1801E7BD4744FC1E792E2D02A594FAD84C9A0B71408F9D00A991735BF299DB087FE1BF23336EA5041F463932C9EF69508646707F493AEAC45EEBBEFC422B0735170ABB9A551FB5C9B4918E0553839CA723F07747A04FE611F67B80308B14930413A2372F3D262C3D424BAD762DE1BD9E74DC4AE0BE69747F93D664DDB145579A3BC78E32B3DC8381E219ACE160A46CB5BDFE710F6F9117ADE823D2936E0F56009C5FF981CF3083645E02282B7C5F144A19C9B23BC5ADD151277C53B64D1F4A2BC47F7F13C74325864425879DAD543163488A020A1048FA6DB74D087E73CC2470BDCEA3F83028AFF6D2794589221FD68D422DEED5D52ACA0074CB82FB63B4114D56C9A8164290CC4989AF60802EFA8DBAF237A394C4B81A0C4B84BFD6A62C2D1138EAE431FB2A924DC166D39DCDA5F48E8A3CE1C7DC03FBD00D1A0A89B2FB19CE779D144996E8D5BD8689D086518F35E00148C56E587AAD637C55584B547D59EB1F89A306DAC55E1844C14C6F87FBB6D612275BA234DFEAFC6A4195D8C2615DA7902D3C09E18938175BDD1EEF83DE74C360ACD886289C7A57132561464E3747FE52CE12190AED4A81065D551340680DC748DD6CC7F18310A515BA3A65635FA4B7404632306F77454568B6CE86D0DCB25E1720A1FBAAF4658CB05F2C4D3B7A1EC9411B6676F77119D977AD16EFD2C666A
2699868845EF38F68BDC948DA6927017A34984C2042818E33AF66C2FEF511221A6E86A70F64A81687889A37C5A69C48FDE31FD38A81912EACF2FE58D6E54B6FA8A07F49B6CDC823502489BDCD733D38ABD8C493E465EB91B57A98DFCB721F0D01BF93E786125F591B4FB35745C7BC7CF
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/Futura-Medium cguidfix
/F1.1/Futura-Medium renmfont
%RBIBeginFontSubset: Futura-Bold
%!FontType1-1.0: Futura-Bold 1.0000.2.0010
/FontInfo 1 dict dup begin
/FSType 8 def
end readonly def
14 dict begin/FontName /Futura-Bold def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /S put
dup 34 /T put
dup 35 /R put
dup 36 /E put
dup 37 /A put
dup 38 /M put
dup 39 /C put
dup 40 /O put
dup 41 /D put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -227 1 index div -344 2 index div 1459 3 index div 1099 5 -1 roll div]cvx def
/sfnts [<

00010009000200000000000000010000040FFEFC001E05DAFF1DFF2205B300010000000000000000000000000000000B01F4003303220007029B002D0312004F023A004F040B002D039D002D02C5004F0286002D02160008015400350000001600300062008C00A200BE00F8012201660178019800010000000B006E00070046000400010000000000000000000000000002000100000000
00>] def
/CharStrings 11 dict dup begin
/.notdef 0 def
/A 1 def
/C 2 def
/D 3 def
/E 4 def
/M 5 def
/O 6 def
/R 7 def
/S 8 def
/T 9 def
/anoteleia 10 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontInfo 1 dict dup begin
/FSType 8 def
end readonly def
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-227 -344 1459 1099}def
/UniqueID 4364665 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C91B5BF8E443649147905228038171EB73F3E0B647FF27DF9EB6CBB52D7B57A03BF1C51FB260AAEF53FC75B2AFA68A8D7599A1313B12B62E30A5BD18595B988E2D634EDB421113911CCBC56982AE354E5DA9E28909744B5BA890E40399F57DBEB455CCED4099070E41D2A412D80B613E6C6930A0A630CCC18CFD98116A965611ED530CD65E5BE3DFC841F1F105645B99DF94AE4E07A914B987097F42F532941DBF4454939A9BC97AE689E43C8CEAC0EF48EAC490E90E5213C7E69503881CD98A9BB003E58F7D54FB1E50732DA303C788138EA48FD20935BEB90202B30F362CEED72F70F2A235654E8D58DAD9765646599C8D1155529022A87006260CF524477CC822BE2E426EE4CA382DEE935EDFC112BDDF1B3025A7052FE609E31BCAAB959DE74F6339B487E0E1AD55DFE5E2E1C2389B1406B8A8A9A6587B49940618FC881FBAD2976230D3E37D97EC3194902765791A2A22ADEEB807D5E58EB6F2EF230614EA51E9405552FD663A6A0CAC57B2644828D2BDC93C45E21F6427E914471D7BAA67F0B7FB136176DB5280ADDB1310357137A88B1586D409E8DFE0EBF327BD525320CD7FDD540989CE6BC1EFD8D40E74585EEEE38D274F5B7A0754ACE92FB1A40BE81A0D1D6E92F0BABC556BE0DBEAFA91BD20AA0EB641967728478D8F6271ACDE95CAE2B32F39E8FB08E09E81826C1164773326BA62413CE43ABB53B2DB4EA087108609FD4F5A0AA2B2302E9FD8C50B39DA484968AA6BA3991B0DCC51ADD9E900825

AF209211C5E64AD6A8C80C
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/Futura-Bold cguidfix
/F2.1/Futura-Bold renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
 exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 1 1 sc
q
0 0 1839 279 rc
5 103 m
116.52517 103 l
116.52517 49 l
5 49 l
h
5 103 m
f
Q
10 w
1 J
1 j
0.60000002 i
0 0 0 sc
q
-95 203 m
216.52516 203 l
216.52516 -51 l
-95 -51 l
h
5 103 m
116.52517 103 l
116.52517 49 l
5 49 l
h
5 103 m
W*
0 0 1839 279 rc
1 0 0 -1 -410 1197 cm
415 1094 m
526.52515 1094 l
526.52515 1148 l
415 1148 l
h
415 1094 m
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 1839 279 rc
1 0 0 -1 60.762585 76 cm
/F1.1[ 19 0 0 -19 0 0]sf
-37.211426 7.217041 m
(!"#$%&)[ 8.423828 10.743164 16.188965 15.966309 9.166016 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
119.01661 103 m
558.0293 103 l
558.0293 49 l
119.01661 49 l
h
119.01661 103 m
f
Q
0.60000002 i
/Cs1 SC
0 0 0 sc
q
19.016613 203 m
658.0293 203 l
658.0293 -51 l
19.016613 -51 l
h
119.01661 103 m
558.0293 103 l
558.0293 49 l
119.01661 49 l
h
119.01661 103 m
W*
0 0 1839 279 rc
1 0 0 -1 -410 1197 cm
529.0166 1094 m
968.0293 1094 l
968.0293 1148 l
529.0166 1148 l
h
529.0166 1094 m
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 1839 279 rc
1 0 0 -1 338.52295 76 cm
/F1.1[ 19 0 0 -19 0 0]sf
-42.698975 7.217041 m
('\(\)!*\(+)[ 9.212402 12.821289 11.401855 7.839355 16.253906 14.073730 0.000000 ] xS
4 w
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -410 1197 cm
415 986.14923 m
415 970 l
2246.4792 970 l
2246.4792 1016.2924 l
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 920.73956 257.5 cm
/F2.1[ 25 0 0 -25 0 0]sf
-53.762501 9.6250153 m
(!"#$%&)[ 16.275000 13.350000 17.725000 14.250000 20.050000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
560.52075 103 m
672.0459 103 l
672.0459 49 l
560.52075 49 l
h
560.52075 103 m
f
Q
0.60000002 i
/Cs1 SC
0 0 0 sc
q
460.52075 203 m
772.0459 203 l
772.0459 -51 l
460.52075 -51 l
h
560.52075 103 m
672.0459 103 l
672.0459 49 l
560.52075 49 l
h
560.52075 103 m
W*
0 0 1839 279 rc
1 0 0 -1 -410 1197 cm
970.52075 1094 m
1082.0459 1094 l
1082.0459 1148 l
970.52075 1148 l
h
970.52075 1094 m
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 1839 279 rc
1 0 0 -1 616.28333 76 cm
/F1.1[ 19 0 0 -19 0 0]sf
-37.211426 7.217041 m
(!"#$%&)[ 8.423828 10.743164 16.188965 15.966309 9.166016 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
674.53735 103 m
900.0293 103 l
900.0293 49 l
674.53735 49 l
h
674.53735 103 m
f
Q
0.60000002 i
/Cs1 SC
0 0 0 sc
q
574.53735 203 m
1000.0293 203 l
1000.0293 -51 l
574.53735 -51 l
h
674.53735 103 m
900.0293 103 l
900.0293 49 l
674.53735 49 l
h
674.53735 103 m
W*
0 0 1839 279 rc
1 0 0 -1 -410 1197 cm
1084.5374 1094 m
1310.0293 1094 l
1310.0293 1148 l
1084.5374 1148 l
h
1084.5374 1094 m
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 1839 279 rc
1 0 0 -1 787.28333 76 cm
/F1.1[ 19 0 0 -19 0 0]sf
-42.698975 7.217041 m
('\(\)!*\(+)[ 9.212402 12.821289 11.401855 7.839355 16.253906 14.073730 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
902.52075 103 m
1036.7288 103 l
1036.7288 49 l
902.52075 49 l
h
902.52075 103 m
f
Q
0.60000002 i
/Cs1 SC
0 0 0 sc
q
802.52075 203 m
1136.7288 203 l
1136.7288 -51 l
802.52075 -51 l
h
902.52075 103 m
1036.7288 103 l
1036.7288 49 l
902.52075 49 l
h
902.52075 103 m
W*
0 0 1839 279 rc
1 0 0 -1 -410 1197 cm
1312.5208 1094 m
1446.7288 1094 l
1446.7288 1148 l
1312.5208 1148 l
h
1312.5208 1094 m
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 1839 279 rc
1 0 0 -1 969.62476 76 cm
/F1.1[ 19 0 0 -19 0 0]sf
-37.211426 7.217041 m
(!"#$%&)[ 8.423828 10.743164 16.188965 15.966309 9.166016 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
1039.7269 103 m
1499.0293 103 l
1499.0293 49 l
1039.7269 49 l
h
1039.7269 103 m
f
Q
0.60000002 i
/Cs1 SC
0 0 0 sc
q
939.72693 203 m
1599.0293 203 l
1599.0293 -51 l
939.72693 -51 l
h
1039.7269 103 m
1499.0293 103 l
1499.0293 49 l
1039.7269 49 l
h
1039.7269 103 m
W*
0 0 1839 279 rc
1 0 0 -1 -410 1197 cm
1449.7269 1094 m
1909.0293 1094 l
1909.0293 1148 l
1449.7269 1148 l
h
1449.7269 1094 m
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 1839 279 rc
1 0 0 -1 1269.3781 76 cm
/F1.1[ 20 0 0 -20 0 0]sf
-44.946289 7.7021484 m
('\(\)!*\(+)[ 9.697266 13.496094 12.001953 8.251953 17.109375 14.814453 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
1502.4253 103 m
1636.6333 103 l
1636.6333 49 l
1502.4253 49 l
h
1502.4253 103 m
f
Q
0.60000002 i
/Cs1 SC
0 0 0 sc
q
1402.4253 203 m
1736.6333 203 l
1736.6333 -51 l
1402.4253 -51 l
h
1502.4253 103 m
1636.6333 103 l
1636.6333 49 l
1502.4253 49 l
h
1502.4253 103 m
W*
0 0 1839 279 rc
1 0 0 -1 -410 1197 cm
1912.4253 1094 m
2046.6333 1094 l
2046.6333 1148 l
1912.4253 1148 l
h
1912.4253 1094 m
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 1839 279 rc
1 0 0 -1 1569.5293 76 cm
/F1.1[ 19 0 0 -19 0 0]sf
-37.211426 7.217041 m
(!"#$%&)[ 8.423828 10.743164 16.188965 15.966309 9.166016 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
1640.0293 103 m
1831.2871 103 l
1831.2871 49 l
1640.0293 49 l
h
1640.0293 103 m
f
Q
0.60000002 i
/Cs1 SC
0 0 0 sc
q
1540.0293 203 m
1931.2871 203 l
1931.2871 -51 l
1540.0293 -51 l
h
1640.0293 103 m
1831.2871 103 l
1831.2871 49 l
1640.0293 49 l
h
1640.0293 103 m
W*
0 0 1839 279 rc
1 0 0 -1 -410 1197 cm
2050.0293 1094 m
2241.2871 1094 l
2241.2871 1148 l
2050.0293 1148 l
h
2050.0293 1094 m
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 1839 279 rc
1 0 0 -1 1735.6582 76 cm
/F1.1[ 19 0 0 -19 0 0]sf
-42.698975 7.217041 m
('\(\)!*\(+)[ 9.212402 12.821289 11.401855 7.839355 16.253906 14.073730 0.000000 ] xS
4 w
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -410 1197 cm
415 1053.8109 m
415 1036.0562 l
968.0293 1036.0562 l
968.0293 1057.2936 l
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 281.51465 191.5 cm
/F2.1[ 25 0 0 -25 0 0]sf
-54.712502 9.6250153 m
(#$'\(#\))[ 17.725000 14.250000 16.950000 23.125000 17.725000 0.000000 ] xS
1 0 0 -1 60.762585 19 cm
/F1.1[ 21 0 0 -21 0 0]sf
-26.72168 8.1872559 m
(,-./01)[ 10.192383 12.591797 8.172363 5.229492 11.515137 0.000000 ] xS
1 0 0 -1 338.52295 19 cm
-24.845215 8.1872559 m
(23145)[ 12.212402 11.412598 5.926758 11.617676 0.000000 ] xS
ep
end
%%Trailer
%%EOF

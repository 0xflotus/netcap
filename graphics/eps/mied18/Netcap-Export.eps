%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 1751.000000 1525.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.14.1 (Build 18B75) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 1751 1525
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 1751 1525
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: Futura-Medium
%!FontType1-1.0: Futura-Medium 1.0000.1.0000
/FontInfo 1 dict dup begin
/FSType 6 def
end readonly def
14 dict begin/FontName /Futura-Medium def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /E put
dup 34 /t put
dup 35 /h put
dup 36 /e put
dup 37 /r put
dup 38 /n put
dup 39 /period put
dup 40 /c put
dup 41 /a put
dup 42 /p put
dup 43 /g put
dup 44 /z put
dup 45 /I put
dup 46 /P put
dup 47 /v put
dup 48 /four put
dup 49 /U put
dup 50 /D put
dup 51 /fi put
dup 52 /l put
dup 53 /i put
dup 54 /space put
dup 55 /ampersand put
dup 56 /s put
dup 57 /x put
dup 58 /o put
dup 59 /T put
dup 60 /C put
dup 61 /m put
dup 62 /comma put
dup 63 /S put
dup 64 /M put
dup 65 /A put
dup 66 /y put
dup 67 /d put
dup 68 /V put
dup 69 /H put
dup 70 /L put
dup 71 /O put
dup 72 /F put
dup 73 /f put
dup 74 /k put
dup 75 /u put
dup 76 /ellipsis put
dup 77 /q put
dup 78 /N put
dup 79 /Y put
dup 80 /R put
dup 81 /K put
dup 82 /G put
dup 83 /W put
dup 84 /w put
dup 85 /dollar put
dup 86 /hyphen put
dup 87 /greater put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -1074 1 index div -591 2 index div 2707 3 index div 2164 5 -1 roll div]cvx def
/sfnts [<





00>] def
/CharStrings 57 dict dup begin
/.notdef 0 def
/space 1 def
/ellipsis 2 def
/dollar 3 def
/ampersand 4 def
/comma 5 def
/hyphen 6 def
/period 7 def
/four 8 def
/greater 9 def
/A 10 def
/C 11 def
/D 12 def
/E 13 def
/F 14 def
/G 15 def
/H 16 def
/I 17 def
/K 18 def
/L 19 def
/M 20 def
/N 21 def
/O 22 def
/P 23 def
/R 24 def
/S 25 def
/T 26 def
/U 27 def
/V 28 def
/W 29 def
/Y 30 def
/a 31 def
/c 32 def
/d 33 def
/e 34 def
/f 35 def
/g 36 def
/h 37 def
/i 38 def
/k 39 def
/l 40 def
/m 41 def
/n 42 def
/o 43 def
/p 44 def
/q 45 def
/r 46 def
/s 47 def
/t 48 def
/u 49 def
/v 50 def
/w 51 def
/x 52 def
/y 53 def
/z 54 def
/fi 55 def
/hbar 56 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontInfo 1 dict dup begin
/FSType 6 def
end readonly def
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-1074 -591 2707 2164}def
/UniqueID 4208071 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C55AC8266BDD340E521355EEF85826934CAE169B3813170EF21157F980278DEA2CE475C6187CB4267A04435AB7CCB196A466EDED31699319305B4913DB428C1F94A0BD0621B41DEC2216CE6C1E3EBC36487BA48FFFC5F94B7C8705655675D4E21DD11D422EFC346F0840F70FCA808FD56424C244741A5EEC370A3276C5E050182153744A195066BD7AA429092A1D177FBAF786F0AF577C4D7E983BFDF2B7FE821BBBBAF2C47B5474634BA018290091A8E988263F35324E8D8A3B26AB91D3AA6AB8659576E7437B84E8E03648CB202973038D49A65CE536350FE9CBCD257410D49223F96A365106A242AFFB2283B33E2A4B701844D4865611AA881117727B1D8FF5097DDC9F59791800E889707785E808D635DA20516AF2632E0F75A15A92BD62FB7967C7582C5397E1E5A8DCF7B03936CB8EFFFE39E2C2EAF80264A191E403E6EFCD34C6CADC3237E350DEC75DE58A063BEF1C0D4BB7AB623DC924CAB85205E095AF8F83354D779F5CE771E090394887D5DB89F88114835B91C3B684A5E16F7ABE423A05EB9842F30CFD8FAFC90D785D55E2FC6B956D772AE6DF74EC94CB5AE97899AD6B8CE9C04FF738B2B1945DAA0E70DDB05AAD59E99DB9863750BDCB9381D7FD887194CCB65286148D2AD477B187541AC22B86F887E4BAC2AD1F8D5E7E6E6C0460F29E30F57586938B7FA87467609642C22DBD79939C8A024D7190E955E941CE91F2B1D7326CC2E552B87BA0F4A7B0EA6133397D797BE3024ED3B66AB331F88F8FAACB93D85C9270108DC7D2379084DF64BCCB07DEBE43B6A69F6312B56A4044675E
5F248E38CC545A4A87FFD0F87904DEDC1413B4FF6FBEFA8F9AA643AD94F3C671A6D870D70FB9F0E9E83A249AFF3CE988B1AE8905F53645BA954A4E0517DB881E91E22C76124F35323865205482B8D1FE3CF9AAF3186EAAAB5C6BB762D0EFF6C159833D20D035FFA45355BE8345C6E53D0B3223656E697B9987A5AF5EB6C84C637ADBE9BEDFC78619872F980989749453A8D88C1883315A3636B4065412400ED52A63AAACC5C29F288FEBF06E1384E3F1F12C60B487A2D96AB0B34C42E46CFC8D7D199CD29F29635B5DF03EE7EB295757D96F62F60520A3F284AEC79316DA2D861B183C36B6E98CDE5F19987DC910907AF0FE93F8590122B7D55F7919D6139BB99F276F83652B2AC09EBA940B09059C1A005D462AA59A44E2A39BEB4487C9A5B39237C1B1121ED5DA1F059307EF8DBFA579286EFD8A949903D7DE04A7690034475F6B02373E94B4F3DD1E24A937C46F1F8C150362F5C661676F78002152308877D25C24040868B6EC672A8A5230020433B03ADB369E6154D6143D7EBE46520557CD54F84E81A3D37C8C9CF33F2A2281380FD3B6BBF82C8E52DB411AC46171145C4910C2385C5266849089AA314F8CD863825E787EA029F5582022934E4BA1E3E56FDFFB606810414271647C8E2D99F3D046C2BDA9F30A3D81D1F7E45D3C86C5565A207EE1EB69DE5339877E00EC5403AE4455415D3473F8844CBE8E80C46556774EB46670BD6C6A3B1DBE5E9E43F970191E7F90447F6415920AF4620049FD14A1590097082B9A13590E8EDFCF577129AFE6569747881F72BC76290697FAD000087A2922399DF4A5DEB619DE8456633CF775B9682329F2B24B8EFEF045B426B4BF14B8A97746F08FC88E6C80DF2A47734D784EA8605A986777EF56D2A5A9A0A8EDC1B86FDEB2D04163150567A3864291396DB927D2A2FDF7E1F0D7F8214E22447839633A93ACC04A4BD2401EC0E9259A2AD422C29BF1EFF1DE0310369ABDBF9614C1B53CB140F94B1C1784A12E4CA1C3BE56C199531971BFF745F7968A6D9CB298859FDA63ECA56A98C3D93C2A3338755F1334A563F2DEF143B363E8DCF6F21C00659606155EEEEF94EDC092D6E322A9DFA315C54F09D98733CBE1B2FFE9997544C0F3D1555B0CAB75DC03FED538DE95F49AF65D4831B2471E1CDB12A331E427CE0C8F5F2556E840A4B758ACDE74A28206A0C2D9F981AEB92766EDB30A7472A85B7067066E7BACE8A97266AD27368B608D33388CC0A5DD4BB1AA7FE0875386FBBC82B69ABBF1F8CCC1C85FCF4F76BAC41F77F733D75A91E708FE65464B788B182EC18B2D83247587863097CFB092F4D5B1083A1FD282003CFD1889665FE0E0277872F538EC40713A91D8B5EFB950CD4B585ECCB104ACCC1E71ED69B967D5B902DFBF5CB1C36AA1024CD10A950186893888655022FCA6509443D9F34C278B16B551

1E92D4AFB39C40090D58E39B7C08B25D00734F3CC07296501FC4B843E5DF57B46FB1780C87D738754AD27DD7B3D2764DD1339F57F39E5537D160C1E6EC3C386914BC30F534355B8BEE75D4C1D51B811F3C6921446905AA6FFB8E4693B982B226C22087A3768586E0E4D6A824E0B86270DC37AA0037EFA0E85A22B668FCF42804D5E93FD387299E8FD9A13411A32E1361B1318E04E483AE6BAC4191535FFA892C47A3CB9B2D685D8897675D2D2CD7171E2AB2DA356A735FE289EDD7FC4738A0AE0B1D23984267ABB28B58CA7C310F2DC507E8160D499DC7949470B26B8F297F27E41A92A84A3DD36B1F7052B9A57FE5C9766ACA76119A8E54A62F9A3813E7A743D5597FB64B84F44D489D6D50B9F5D35DA4BCD8CF47BC187B01D6FD0E9509FCC3DE90C9958BF779B51B622A423A10DDBC0F738885C8FCE87A262C09E8CE5DB6FFF5200DC20783DF29C49D8049EB21A00EC4830DC71BF399B3786332515D5F44B3F3289735D8F1DBA01709807FD891966BB1FAB0E68F677FEA23AC90DF9D732F614B052C45BCE56CB1879E23B5771F4072D85E98D5C8FE357EC2C9348FCD4F91BCC1FCD1EBF2CC072CCC726D8D197FB08FAAE346B600E26A778A9607135B5D04DAB3B60DC0A017E0242C2C43084C4EAB3E6CD2A0694FBBEE36D137B29AF615C284123840851E6CFC888E48F93C00F32F1CEA5702044998E4D7B057B4DD3D23B7C5C3D3CC927B261B3BEF5C18B4D209578769EEC0343F8C027F91AA70E8ADBA5E0A1604DA3353784F67863803E1B5F5E2763436DF01987EED81980659E3C497D396729150FA71BDE4B0A2F5071FDE2C459B86F73994CE68651030AE42342700164F2466641DCD0BE95A5C872BC0BFE66DE062B472A849BE8372047AFFB4EA930A3658A928C19EFC83A56B09D4AC9B4CAA46166154FB8C9987029D3D22077DA11ACBD6379FB2984C4F8B36C6E293E57FBE605405462A88A8FCC5B4462B7686C3773BE3819AEAD22C4EEB694E50780BE1CFBDB1AB7202CE1C58FFBC4DC3657AFDF94E670D72B106C5DA75C5B732A78190A74EA366BB480D65579415A47BB7185DF128910905D1D8C89B33A586CA1B38423D8522BEFE56AC3CB92DA1944D874E1722DFC68DF194732AE4ED3F4F5B7F4225A29163A5A0DAFC28F96BB88CF2F6217DFA2678A920CC54ED141EC96BB32990BE3B94017D955273158073C2D03A6947DDFA36699AB7FA81F30EE1D4A45A6D8B6073B4BBE93C39DE1101BD01FF80CC82B22DF40C0D97F8B798107CBCEA2ABA79FA420F0ABB9F8665D2D1123FCB1FC895CE737736089389F174FDD0D71253E21D9C856C48905C9E1F008BB246378BC2438C51C08ED5A650BC37C66B44E9F05853BB0A4685DA3645F1A1BB14B5D93B212DD55051470A55CE56100DA2E90B825E0C0D27B0CD0BC1DFFE02083BFB28D9C6B6945A76


12681E7D91A6E1B79DA280B265626FFA2896D669C54EDFB6F56097168BF02B9C3B00CF4289C5B2E1746DB24E1EBC6360BAF4FA06C8025E60297EB4B4DF3263B194EFE27E20786B2778E990595A1687B40BE03DE173D2C2DE44236B8020157773E9EAE3FC80D145912D109DFD2DB3BAF9C4A5B6D681B8918488A87E682A31F7EF5DB85CDA7094ED2C497A20FD3B80691F3309CD1BB29F699BA464387B86522C4223C23D35762D58428A172BD0135F2BD0BB12EA6C238355B7D1F716DB7940E89C6E7040E6C803EF401DF3373DD431DE515573FD109253215265EFD7468F123A556AC1FB7DACA8C1775B81018F2AAE9995C028ED910BB1A124588EBCC30FC663E2E2F10782E6767A9113B9B1E107BE1EDC6463C1070EA92F4E276FDE9DAC55114902E768E8B8930A8833398A0A88CB564F51C2EE4C6C966C260883B4508F4EDAC3D4A72129B8282ED07026A769F8E95809390CD216C3F084CBFD8512170FD794075F604270DCD852725905F6A79FE951DCC1D39D4710FC5168DA1EFA0741CB3EE73B842D7D44F4DF6872AC053FD6938590513A6DEF645B2CB0ABC557AC8C55BB80991F755B45B107991E44EE81846B1192D74AEF78F3FEE4A0AF71C2D3BD29BA903381DCA93F919ADC11A5F7D0FE94245C53D95846314AFB5FB53F6E610270F36C9AAD676424FEA3A03C5A183999209B7CE4C9D5704E5F885C7B292F4D883B077824A06FECF1A2FD57923B032284FFC5CFFEBD2990670D3D331BE64E1870D715DFC54898413F103C1AD1908D95E28A35FBF088A127E987263DEABB0E3306B286435AD2FF683818F2E8F2A27B1F0829E2193AD78EF75F6C1D52B950FC91D057D9F5B0C38FD77508ECE12F2AEC1FA578B4B4C1D25A850497D3363E71814C1A1956118BE777E8CE99BBE5E01CCE0026AE2883A01F10FDDAB3FDDF77FFD6320699B94EB84E9D984CC865FF3A258706F03E0E1FDDFD0C8F2C7B6E2889AB1F014AFED750D46A807BB1247B894ADD3F5BF9AFADAC36D68B6D2E6C8B657271504776D6F398D81191A4B23634FB94BF9FA433055D2261A9EF79786A4332C05758EA4F0F6510506EEA077D4658F8F8E2FF7DA77BBA391711E7C88EF4D5CFC4CD4C1946479EA252D6AE423FD1D71E1BD25BD7C1D068E079FFDD05DBC6F842D0B7C6ACCF5984645FA9F6C2C75276ABE70ED95FBB17DAA776D50A8D854B3D3636F761CC8230E113CC3E7E275A9E2FCFC2601EC80492FE120330
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/Futura-Medium cguidfix
/F1.1/Futura-Medium renmfont
%RBIBeginFontSubset: Futura-Bold
%!FontType1-1.0: Futura-Bold 1.0000.2.0010
/FontInfo 1 dict dup begin
/FSType 8 def
end readonly def
14 dict begin/FontName /Futura-Bold def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /N put
dup 34 /E put
dup 35 /T put
dup 36 /C put
dup 37 /A put
dup 38 /P put
dup 39 /space put
dup 40 /e put
dup 41 /t put
dup 42 /c put
dup 43 /a put
dup 44 /p put
dup 45 /u put
dup 46 /d put
dup 47 /i put
dup 48 /R put
dup 49 /o put
dup 50 /r put
dup 51 /s put
dup 52 /F put
dup 53 /l put
dup 54 /S put
dup 55 /n put
dup 56 /x put
dup 57 /I put
dup 58 /O put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -227 1 index div -344 2 index div 1459 3 index div 1099 5 -1 roll div]cvx def
/sfnts [<



00>] def
/CharStrings 28 dict dup begin
/.notdef 0 def
/space 1 def
/A 2 def
/C 3 def
/E 4 def
/F 5 def
/I 6 def
/N 7 def
/O 8 def
/P 9 def
/R 10 def
/S 11 def
/T 12 def
/a 13 def
/c 14 def
/d 15 def
/e 16 def
/i 17 def
/n 18 def
/o 19 def
/p 20 def
/r 21 def
/s 22 def
/u 23 def
/x 24 def
/l 25 def
/t 26 def
/anoteleia 27 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontInfo 1 dict dup begin
/FSType 8 def
end readonly def
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-227 -344 1459 1099}def
/UniqueID 4364665 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C926AE0E2EF20EAFDBFC5FC1E83BEF5713FF899F5A98AA12E11EE8D7354FA9D44C614FE78BF4AB55BFFA83C00AD1A97417D927EAF455D06F47F5F38DF89CF8E4030805EF530126534F75D8EEFFA1EAE2BD38693F767BA324DECD894D1866EAD3CD42DD9F65CCD20C980C91D272724F59BFC0822E3FB2F9B063F71016EC79CBD65BC00E5661EF2D72523D01C84E411641EC603B754694A7FBC420666E74AADBC2B2DE007C28A19AD1EC704285E1C6E3D44CF1E33F6EC5178503E155A021D3BAAC4AF7EF6B5900169E77D3E4DA64F00B773E2A8DEEDA6F7F1039C887797A7E171F5501EC7C4D6BCC39C2BBE97470583356D8931C8EA35D6F0DA91289E633E7C51B90E68CD27D3D84429C33F28AD056F392ACC20AC0C46FEA50A834B473A09629E2F85DB25B0269D4FAF353D83125DF25C72CA99BB3853024B6055FEB37BBBCB8564CC7B9BDE65878059735C3F5002A86C6A7010EFD18477555B08970307C7630D93D7A3C7569BD283523983D1C61380252C6E5DBD22E6E7FEF631E902EB0004A5FB3D816C4A1555527A5BEB4146DF02650E51A70AE599D6EA735D287BC11C73D6080647B81434FF2847C75C2BBE2C2A5B63FFE313FAE248F5CDEFB55AB6203E7EC5BD1D72ED1E60720FF67C46451DB9BA8BCB46DB3B4B240D7CA654676C5826EA84B704F3213213846A0969CCBB5992FFEAB754797A8028CD8405BD6F774108C0CA03B523DED5D310F639D55E1AD11DB9C5AEF6A0DC01FC7EA2096E8E2D74AD578D4D
347D5FF2435EE60A64B85C6794BE54BF479E4503C20D00FC848C4DD8A4E19D38A8CE81AFF32F0298026AFC6BA3E81715915B0FEF5B676E85F1EDBC71899C122A0440E9BF0C745695D3CF697D9C6148CC2BE448840D343959474C4178AB1E249F3D39CD9DE823C70DFADB045941ED4E29AF759F97083957655EEA16D0F6FF1A9E4B151A0CE7C013959B53C72B5011085BC10E50AE9B484AB9A7A603ABF07F5C040AC8137664897F3A262B522B689B500F526F26E2E3493E66CD6EE133FC9EA3B978E1F71184BBCEBB24636A07073AF4B476BFCE647DC669D01BC2D5973712A9DC146243B097B6763A75D5FC0A026C466B21925877A57DCB8A3E1198F624DB68CD255BCE5CE5562A3814BA4278E52DA1C45E036D5E34D2E5E0B2C862159017700DDD63246401AD94C7966BB15EB836C838BC314DB0B67F98B29B6F76E34FD1947267A02ABE1074D2535EF77AF48FCE5CB9933B8D0BF285C2AC1F9BF3FC7F8CE86102B89E81E53ECF1B9A507A1B03047A64FD118CFDB83A65F848931955CB0C5846F526FFF05C1DEFFFC2FBDB5D8BE5BDFBC8308B3B7745E2EFB4A73CFBCE43E51BB232E008EFE898428A84B98BA1E63CFFBA629770E2B74EE6ABAF7D7D250315FF188E544773A3EC71D251F823100D86FB357E46A84C080D60494887D7071A2767320D1570974AC1994AE666DF2D55E81DA1C42E18000EABF6C686CC0614F22E6A5782A2D45AA36CFF1B5ED0DC5901ECEB212E33CA81E29984C859B207AC5CC972967C470C92BF10ECB7223C20FEC4DD299F66243221C61CCDB017B60F4DD72B73B58741525E811C371536F325CC2032D55EB024A85D5464099606A8126F67BE22DA9955320C2840244EEFA59A2A395967D09D2AAD97E304F0F222138DAB61831EAC9525D892A04FEDB8CFA326012CE61A309D96FC63E012C7E22F86C76167A0FFD2AA4C0E455DA56CAB21F53801A50ACB36C97EF7DC64D12CDFF4F626677AB0598F5BD4159CAD6CAFDDB7652B234F9B062BB33B9422145D1DEA940A8FAF7E42306F60308F1564C5AA318FB92375B093D8FADE31E98B059B12FDD6848B3A7FDC047E62A21FF988ABDF8496700FED528054760E1FE78E182A644B12C28366214DF425E6AB33F779676CD5E9FE71CA8112CB6C350BA625B6A4B09E56DAD5F29DA1BE136717E21E157F66941EB9E3B68A3D87B40F82E3860BB05CBE4F6A671C36271C1F8B52C2BF9092C1695B67E7511C7CBD21B966F0D99661CC56FF58482CC58AC4EB7675A5B2E7E61084F3D2CC1113974B8958F7B0BA1F91AC5EE283DFD4CE108DB2EBF4D92BB5C3DD895E30EB1C8900E19C9913F7C8809D32EE617A746275465639156E41D3E60C1BBC40D4E4D41EF8DEBEB692C543817E385D53C8146B746D9774DB7F6B97D4D6C2A619394D60AA07F216C8CE30424A40B1E5023ED96479E2E4
C5D72480C717C58A20C6C41E8E701E5D95EBE93F42902B1FFAEA417C007C17AA694FFE0ABBEC9412798FA2B76FFB49D7704DF6601C79F0F3E9A03B1B15F7178FD192A7B8107E4330CFE53E38133E7CBF05BB7C37D095FA872563609198F71058E688A747D948DF74B690A207E6938375584869602AB3EA13BB17DEC52A9A2502B56BA7009C7AEB16CE77716968F5E966C5B31635D42C0CD843C2D33BB6B3E3DB170061AA04E6AA0BB9677C0A63451B08D19894E22B4D8FA94CA47614E430B32A3914BE99822CB25596554443F1CE1108F151EC32427FDE58B24A45E8D8384AF380CC3EC92EB54BC49650A2389014879C834E6DA050F84BFE5FD6BC0D4DDD3ED35BA5AF357611782AE3B108F83794CB3E913363FED767368F42EF19E9E3AD9D522C48BD0036587C8B7D307A13EEE7EFF3AD92921125FAB545851D3C3D837A7CB9B9A7497427D7B65CB6893D1044BD738176760ECAA69B1522E987C288A6CB5FCDFFC1E6F659362AB254CFF5974EF6E51D1C9B5FF9634DB857096C4D7119661479675560AB38AB16B24D613147D56F46A8F9374BCE64A7D10129A145B29259B73B7580CD22F500A6AF8412E05E489583ACD9BB66E4B999DA3C5E39C38CD78B29ED723D4DEB28B87B56EFF37A72CBD52177C4AFD1A40F38037BD3A4264860121C34DC7DFEA5BC1BC083E8F391C89DD6537E86314954B7CA3D9B43BFAE64EA0DCE8E3B815BC8A7B21F8666F72BDF7F7EB90BFB1704C61F04654F6368DBF2D0AF5A9BE4D03608126B1DFB3E991293B82F4A7B7D47D1D2F1B7C6325D37C14C410A620813BAE5EC80C0928D615C5EDB6FAC8AFF398D73800BF4264DF645B799C10083FC877961CA11FCF146E8CF3B0C2766AB78415921DB45601D38444426364B341B9A29A3F99891B3715F3488A4F38BF5F4F5B41C2E9D78EA89C3B9B015F04D16AA9051886B4D96F8FAC35E39EA160D27B521934AD4B9F01D37CBA0BDD2B91AD852DDC89364EA9C06EB4B9D2D57928E2742F7796D612E45B474F8BE1D5FB8B2FEC3DFB6D789C27EE782C7519C1C0D915A4E44A6365362D5743D6830EDB5E511A301DB335FC6A24D21EA7AAB87FEA1776AE7445466D9D7A8C53F867031CE367E63CAED1EFB1D6C0763C62F7ED3601003652772C478114CEB87C233D0771FA5D60D2290936506376CA588006C4A3D4509E93F7783CD90BEF0224DBA1B48AB6BDA880C48125E22403C87A4AEC93053B58E9640E35AF6EB376E2F091D0C60E08B2BCE00212AB363906AD03B8DC3EAAB8113C4B22F89DE5750CECFB7DBBCACA1174A37C3A34C70255100F59F2042A53B3D185A489D59714D63AABE198BDF3C99F9924CA6097BF77D452808C6B0376EB766484B36376A7F6EE85DB8D731BC361B8223D4B27178B6BAC8BEE8DAECFC193534BFA6996F28261681BFB92F998EFAC48E8A36A193
29C2144E27B34E0EE00BEE31D6DAEFA1755832C7ABAB6DF99DEAEA888AD0C68946B27E80E0ED4BBE9DB56C40D1CFE79036E34014AA187843F46FB9AA3AD8E55507BBFFDD1634D7436B3B7D9ABAFB284E8AFCF5A4985557BE1B51648D430B2C90F89FA28C2591C31C5F20F42B33C8112308C8AC77F5EA611A3A54F556F40FAFCC59D8D0717E8A5490994C8F3E51810E4A179E53F07A46E3C8093622EE18E7A3A7B886366FB33C5DE1FA850CC37783ED91D64AF2D05D871E8CFDD7D3F6C892524E0BFCCEA3567B5DFDFA4AAACF49507911BEC21A13EA65492BEA5E1864AB134B6B97B0021B575F68E211AECB0B75F3913DD9426FA3ABDB9A78C6F39132881BE245F38A5FD684ABC03F57630EFEB30F7E48F62EB852DAC7037C0AB7014D99186F479445400017AD82B808E35F99E02987032908EA1205FE9360B5F65B44163EC289AB87A7A99374F73FD9CBE12CA9626D2F7D024A2F18F7C2024461F024E0D969AB668A63CD39E7A0C4927D3C93D3A26AA0B48371A1D76F8B4F67F068CA24E26F03BDB5378FB801B0B0FF22BE59D17B1225C23E3BD72A81DE91EA77E18B11D0277501BE5E7F3216D9EC75C9AAF3D8ABF9BCE3D81E443BF2B3AA7179E53C45AA76035CC8DCBB4F90406F3CD1F45AFD46B657F5499A4D08225B7037CC3F38D68A49454FF1E77EC06E33EBA30BE41C26EB846AEA2819A5BE731556EFF127DD87BF5AB29D0A99C2651F138FA8A7A894BD59A8BE44ED691A022FC5D6F1BAE29BC28337699BD7B53CAEAF717A5132C414E3D1AF902CC82F22B7C836B484D04706981276C5338C11AA535C78C97935F34EE7E649EEB3DD494F31EBE32FA2A01CEE237DE951BCA8C79E9E3F310679D80446BEAE66EDFB2BF79C47A2A29F8F64AD29613A22DC6DF989E706BDFF94A4D8F677E55437071E777F754D8D52A169F767AAF4AE39790E37F05AA49C851779777E94A2FCED21DB0FFDEFE844992CBDAAA142EE59B6D1510341CDBA8F50B1BB5DD085CBCD5485CEFE725291E069EA154D915ABE6F269B807C6284C67E58AB17BB8186CCD21D608AC4C71910A46777444113BBA0CB8B16C251B7942579D06F83537709192D06B58865C46865613205381289B4A0827EC41C00052C07792EB1D714F5F5EB7697B71A94D284389EEB02D5F105514D9F8822607306B2D5C6B7ACDE630BE3795BA4F9741778B41AFE3BCACB47DEBE5B3BC4B0C2D15E98B922A18604BAD3FD7DDB5044DF738DEB54BD04733791BCA5315B1ACFCBD4B041978A228AD21F3A17CE7C0C80C6920FE0D1E23AE599163A8416B23EE201ED2B5E19961D2B18AB4EAA2570AAA4A905C0A37D4344F23A661B28B000232FC274E78C1A855C5E546A744F807E407EE2689312ABF8883E5127E8F82DA1D6BC46D8D0B9DDB42D4EB6A7FFD924C0DD2E2C39A20A2149FAEBCBC21951A9542EBB
11F2F336CAF49AE629E0859E094B5DD7B84E79908DAF8C9AF6CE883DBE2F93D54040B8CA32B762D4485A2CA3CEDD70E19E2E6AAD3E153896DCFEEAB5E6E7DFD7C69B6AC5008FCCB90FADE98BDE0C1500482A1209FB9CE3AA49F9BACF845024EF8E810FAC9183C93B332B6EC92AA912ACB894445FCE03922E8621D1
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/Futura-Bold cguidfix
/F2.1/Futura-Bold renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
 exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
0 0 0 sc
q
0 0 1751 1525 rc
5 99.259521 m
1746 99.259521 l
1746 1.2595217 l
5 1.2595217 l
h
5 99.259521 m
f
1 J
1 j
0.60000002 i
1 0 0 -1 -829 1348 cm
834 1248.7405 m
2575 1248.7405 l
2575 1346.7405 l
834 1346.7405 l
h
834 1248.7405 m
S
Q
10 w
1 J
1 j
0.60000002 i
q
395.224 1215.9976 m
1490.5278 1215.9976 l
1490.5278 63.470642 l
395.224 63.470642 l
h
495.224 1115.9976 m
1390.5278 1115.9976 l
1390.5278 163.47064 l
495.224 163.47064 l
h
495.224 1115.9976 m
W*
0 0 1751 1525 rc
1 0 0 -1 -829 1348 cm
1324.224 232.00244 m
2219.5278 232.00244 l
2219.5278 1184.5294 l
1324.224 1184.5294 l
h
1324.224 232.00244 m
S
Q
q
-95 1115.1311 m
497.42618 1115.1311 l
497.42618 806.6922 l
-95 806.6922 l
h
5 1015.131 m
397.42618 1015.131 l
397.42618 906.6922 l
5 906.6922 l
h
5 1015.131 m
W*
0 0 1751 1525 rc
1 0 0 -1 -829 1348 cm
834 332.86893 m
1226.4261 332.86893 l
1226.4261 441.30783 l
834 441.30783 l
h
834 332.86893 m
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 1751 1525 rc
1 0 0 -1 201.21309 960.91162 cm
/F1.1[ 26 0 0 -26 0 0]sf
-100.31836 9.612793 m
(!"#$%&$"'&\(\)*'+,)[ 14.701172 7.629883 14.256836 14.383789 10.118164 14.256836 14.612305 7.109375 8.023438 14.256836 12.390625 15.589844 15.589844 8.023438 15.564453 0.000000 ] xS
Q
0.60000002 i
/Cs1 SC
0 0 0 sc
q
-95 954.76373 m
497.42618 954.76373 l
497.42618 646.32483 l
-95 646.32483 l
h
5 854.76373 m
397.42618 854.76373 l
397.42618 746.32483 l
5 746.32483 l
h
5 854.76373 m
W*
0 0 1751 1525 rc
1 0 0 -1 -829 1348 cm
834 493.2363 m
1226.4261 493.2363 l
1226.4261 601.67517 l
834 601.67517 l
h
834 493.2363 m
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 1751 1525 rc
1 0 0 -1 201.21309 800.54425 cm
/F1.1[ 26 0 0 -26 0 0]sf
-77.193848 9.612793 m
(-./0'&\(\)*'+,)[ 7.667969 14.041016 13.063477 16.046875 8.023438 14.256836 12.390625 15.589844 15.589844 8.023438 15.564453 0.000000 ] xS
Q
0.60000002 i
/Cs1 SC
0 0 0 sc
q
-95 794.39636 m
497.42618 794.39636 l
497.42618 485.95749 l
-95 485.95749 l
h
5 694.39636 m
397.42618 694.39636 l
397.42618 585.95746 l
5 585.95746 l
h
5 694.39636 m
W*
0 0 1751 1525 rc
1 0 0 -1 -829 1348 cm
834 653.60364 m
1226.4261 653.60364 l
1226.4261 762.04254 l
834 762.04254 l
h
834 653.60364 m
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 1751 1525 rc
1 0 0 -1 201.21309 640.17694 cm
/F1.1[ 26 0 0 -26 0 0]sf
-76.743164 9.612793 m
(12.'&\(\)*'+,)[ 19.208008 18.877930 11.832031 8.023438 14.256836 12.390625 15.589844 15.589844 8.023438 15.564453 0.000000 ] xS
1 0 0 -1 867 1454 cm
/F2.1[ 99 0 0 -99 0 0]sf
-567.16718 37.01506 m
(!"#$%&')[ 90.189000 56.430000 52.173000 67.815000 79.398000 67.122000 0.000000 ] xS
/F1.1[ 73 0 0 -73 0 0]sf
-120.38018 37.01506 m
(34"$%5&+676\(8/6$9*:%")[ 38.745605 18.178711 20.602539 40.385254 28.408691 18.178711 40.028809 43.700195 22.527344 53.359863 22.527344 34.789062 29.620605 36.678223 22.527344 38.995117 40.741699 43.771484 43.878418 29.941406 0.000000 ] xS
5 w
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -829 1348 cm
1231.4261 387.08838 m
1392.7887 387.08838 l
S
0 i
CM
578.18866 960.91162 m
563.78864 966.31165 l
563.78864 955.5116 l
h
578.18866 960.91162 m
f
0 J
0 j
1 0 0 -1 -829 1348 cm
1407.1886 387.08838 m
1392.7887 381.68839 l
1392.7887 392.48837 l
h
1407.1886 387.08838 m
S
1 J
1 j
0.60000002 i
1231.4261 547.45575 m
1392.7887 547.45575 l
S
0 i
CM
578.18866 800.54425 m
563.78864 805.94427 l
563.78864 795.14429 l
h
578.18866 800.54425 m
f
0 J
0 j
1 0 0 -1 -829 1348 cm
1407.1886 547.45575 m
1392.7887 542.05573 l
1392.7887 552.85571 l
h
1407.1886 547.45575 m
S
1 J
1 j
0.60000002 i
1231.4261 857.98718 m
1392.7887 857.98718 l
S
0 i
CM
578.18866 490.01285 m
563.78864 495.41284 l
563.78864 484.61282 l
h
578.18866 490.01285 m
f
0 J
0 j
1 0 0 -1 -829 1348 cm
1407.1886 857.98718 m
1392.7887 852.58716 l
1392.7887 863.38715 l
h
1407.1886 857.98718 m
S
Q
0.60000002 i
/Cs1 SC
0 0 0 sc
q
-95 644.2323 m
497.42618 644.2323 l
497.42618 335.7934 l
-95 335.7934 l
h
5 544.2323 m
397.42618 544.2323 l
397.42618 435.7934 l
5 435.7934 l
h
5 544.2323 m
W*
0 0 1751 1525 rc
1 0 0 -1 -829 1348 cm
834 803.7677 m
1226.4261 803.7677 l
1226.4261 912.2066 l
834 912.2066 l
h
834 803.7677 m
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 1751 1525 rc
1 0 0 -1 201.21309 490.01285 cm
/F1.1[ 26 0 0 -26 0 0]sf
-72.731445 9.612793 m
(;<.'&\(\)*'+,)[ 11.844727 18.217773 11.832031 8.023438 14.256836 12.390625 15.589844 15.589844 8.023438 15.564453 0.000000 ] xS
5 w
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -829 1348 cm
1231.4261 707.82306 m
1392.7887 707.82306 l
S
0 i
CM
578.18866 640.17694 m
563.78864 645.5769 l
563.78864 634.77692 l
h
578.18866 640.17694 m
f
0 J
0 j
1 0 0 -1 -829 1348 cm
1407.1886 707.82306 m
1392.7887 702.4231 l
1392.7887 713.22308 l
h
1407.1886 707.82306 m
S
Q
0.60000002 i
/Cs1 SC
0 0 0 sc
q
490.68866 1115.1311 m
1386.2019 1115.1311 l
1386.2019 806.6922 l
490.68866 806.6922 l
h
590.68866 1015.131 m
1286.2019 1015.131 l
1286.2019 906.6922 l
590.68866 906.6922 l
h
590.68866 1015.131 m
W*
0 0 1751 1525 rc
1 0 0 -1 -829 1348 cm
1419.6886 332.86893 m
2115.2019 332.86893 l
2115.2019 441.30783 l
1419.6886 441.30783 l
h
1419.6886 332.86893 m
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 1751 1525 rc
1 0 0 -1 938.44531 960.91162 cm
/F1.1[ 27 0 0 -27 0 0]sf
-262.59082 -7.8041992 m
(;5=$8"\)=*>?%\(@A<>28"@A<>!"#$%&$";B*$>)[ 13.513184 6.723633 21.357422 14.937012 10.955566 7.620117 16.189453 21.687012 16.189453 8.332031 15.741211 9.861328 12.867188 25.958496 19.050293 18.918457 8.332031 19.604004 10.955566 7.382812 25.958496 19.050293 18.918457 8.332031 15.266602 7.923340 14.805176 14.937012 10.507324 14.805176 15.174316 7.382812 11.812500 14.673340 16.189453 14.937012 0.000000 ] xS
-177.06885 28 m
(.\)B4:\)C!&"%:*B>.\)B4:\)C?5,$)[ 13.855957 16.426758 14.910645 6.723633 16.229004 16.189453 16.189453 15.266602 14.805176 7.382812 9.861328 16.229004 15.622559 13.513184 8.332031 13.855957 16.426758 14.910645 6.723633 16.229004 16.189453 16.189453 15.741211 6.723633 14.673340 0.000000 ] xS
Q
0.60000002 i
/Cs1 SC
0 0 0 sc
q
490.68866 954.76373 m
1386.2019 954.76373 l
1386.2019 646.32483 l
490.68866 646.32483 l
h
590.68866 854.76373 m
1286.2019 854.76373 l
1286.2019 746.32483 l
590.68866 746.32483 l
h
590.68866 854.76373 m
W*
0 0 1751 1525 rc
1 0 0 -1 -829 1348 cm
1419.6886 493.2363 m
2115.2019 493.2363 l
2115.2019 601.67517 l
1419.6886 601.67517 l
h
1419.6886 493.2363 m
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 1751 1525 rc
1 0 0 -1 938.44531 800.54425 cm
/F1.1[ 27 0 0 -27 0 0]sf
-338.5415 -25.706299 m
(;5=$8"\)=*>D$%85:&>-EF>;G?>F$&+"#>-C>H4\)+8>H%\)+GII8$">)[ 13.513184 6.723633 21.357422 14.937012 10.955566 7.620117 16.189453 21.687012 16.189453 8.332031 16.716797 14.937012 10.098633 10.955566 6.723633 16.229004 14.805176 8.332031 7.962891 19.801758 11.970703 8.332031 12.379395 24.125977 15.741211 8.332031 11.970703 14.937012 14.805176 16.163086 7.923340 14.805176 8.332031 7.962891 16.189453 8.332031 13.724121 6.723633 16.189453 16.163086 10.955566 8.332031 13.460449 9.914062 16.189453 16.163086 24.125977 8.912109 8.015625 10.955566 15.174316 7.382812 0.000000 ] xS
-316.96655 10.0979 m
(;;F>.%:":\(:4><#$\(J8K=>?%\(-.>28"-.>.\)CC5&+>G*"5:&8>)[ 13.025391 13.025391 11.970703 8.332031 14.581055 9.861328 16.387207 7.567383 16.229004 12.867188 16.229004 6.723633 8.332031 18.918457 14.805176 14.937012 13.565918 13.447266 10.955566 14.712891 21.357422 8.332031 15.741211 9.861328 12.867188 7.962891 12.669434 8.332031 19.604004 10.955566 7.382812 7.962891 12.669434 8.332031 13.855957 16.189453 16.189453 16.189453 6.723633 14.805176 16.163086 8.332031 24.125977 16.426758 7.382812 6.723633 16.229004 14.805176 10.955566 0.000000 ] xS
-177.06885 45.9021 m
(.\)B4:\)C!&"%:*B>.\)B4:\)C?5,$)[ 13.855957 16.426758 14.910645 6.723633 16.229004 16.189453 16.189453 15.266602 14.805176 7.382812 9.861328 16.229004 15.622559 13.513184 8.332031 13.855957 16.426758 14.910645 6.723633 16.229004 16.189453 16.189453 15.741211 6.723633 14.673340 0.000000 ] xS
Q
0.60000002 i
/Cs1 SC
0 0 0 sc
q
490.68866 794.39636 m
1386.2019 794.39636 l
1386.2019 485.95749 l
490.68866 485.95749 l
h
590.68866 694.39636 m
1286.2019 694.39636 l
1286.2019 585.95746 l
590.68866 585.95746 l
h
590.68866 694.39636 m
W*
0 0 1751 1525 rc
1 0 0 -1 -829 1348 cm
1419.6886 653.60364 m
2115.2019 653.60364 l
2115.2019 762.04254 l
1419.6886 762.04254 l
h
1419.6886 653.60364 m
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 1751 1525 rc
1 0 0 -1 938.44531 640.17694 cm
/F1.1[ 27 0 0 -27 0 0]sf
-273.76392 -7.8041992 m
(;5=$8"\)=*>?%\(.:%">28".:%">F$&+"#><#$\(J8K=>)[ 13.513184 6.723633 21.357422 14.937012 10.955566 7.620117 16.189453 21.687012 16.189453 8.332031 15.741211 9.861328 12.867188 13.803223 16.229004 11.074219 7.382812 8.332031 19.604004 10.955566 7.382812 13.803223 16.229004 11.074219 7.382812 8.332031 11.970703 14.937012 14.805176 16.163086 7.923340 14.805176 8.332031 18.918457 14.805176 14.937012 13.565918 13.447266 10.955566 14.712891 21.357422 0.000000 ] xS
-193.9834 28 m
(.\)B4:\)C!&"%:*B>.\)B4:\)C?5,$>L)[ 13.855957 16.426758 14.910645 6.723633 16.229004 16.189453 16.189453 15.266602 14.805176 7.382812 9.861328 16.229004 15.622559 13.513184 8.332031 13.855957 16.426758 14.910645 6.723633 16.229004 16.189453 16.189453 15.741211 6.723633 14.673340 14.937012 8.332031 0.000000 ] xS
Q
0.60000002 i
/Cs1 SC
0 0 0 sc
q
490.68866 644.2323 m
1386.2019 644.2323 l
1386.2019 335.7934 l
490.68866 335.7934 l
h
590.68866 544.2323 m
1286.2019 544.2323 l
1286.2019 435.7934 l
590.68866 435.7934 l
h
590.68866 544.2323 m
W*
0 0 1751 1525 rc
1 0 0 -1 -829 1348 cm
1419.6886 803.7677 m
2115.2019 803.7677 l
2115.2019 912.2066 l
1419.6886 912.2066 l
h
1419.6886 803.7677 m
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 1751 1525 rc
1 0 0 -1 938.44531 490.01285 cm
/F1.1[ 27 0 0 -27 0 0]sf
-278.15405 -25.706299 m
(;5=$8"\)=*>?%\(.:%">28".:%">?$MNK=>A\(JNK=>)[ 13.513184 6.723633 21.357422 14.937012 10.955566 7.620117 16.189453 21.687012 16.189453 8.332031 15.741211 9.861328 12.867188 13.803223 16.229004 11.074219 7.382812 8.332031 19.604004 10.955566 7.382812 13.803223 16.229004 11.074219 7.382812 8.332031 15.741211 14.937012 16.189453 23.097656 14.712891 21.357422 8.332031 19.867676 13.565918 13.447266 23.097656 14.712891 21.357422 0.000000 ] xS
-340.04443 10.0979 m
(2\)"\)GII8$">H-N>?ON>P?;>.?E>A<Q>1PR>!<!><SP>N?>)[ 19.604004 16.189453 7.620117 16.189453 24.125977 8.912109 8.015625 10.955566 15.174316 7.382812 8.332031 13.724121 7.962891 23.690918 8.332031 15.556641 16.202637 23.690918 8.332031 16.255371 16.123535 12.563965 8.332031 14.581055 15.741211 19.801758 8.332031 19.050293 19.485352 17.890137 8.332031 19.946777 15.793945 22.741699 8.332031 15.266602 18.918457 15.266602 8.332031 18.918457 28.634766 16.255371 8.332031 22.794434 15.741211 0.000000 ] xS
-68.027344 45.9021 m
(S5&C:T>L)[ 28.898438 6.723633 14.805176 16.189453 15.714844 19.894043 8.332031 0.000000 ] xS
5 w
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -829 1348 cm
1232.3549 1029.0321 m
1393.9095 1029.0321 l
S
0 i
CM
579.30951 318.96786 m
564.90948 324.36786 l
564.90948 313.56787 l
h
579.30951 318.96786 m
f
0 J
0 j
1 0 0 -1 -829 1348 cm
1408.3094 1029.0321 m
1393.9095 1023.6321 l
1393.9095 1034.4321 l
h
1408.3094 1029.0321 m
S
Q
0.60000002 i
/Cs1 SC
0 0 0 sc
q
-94.071259 473.18729 m
498.35492 473.18729 l
498.35492 164.74843 l
-94.071259 164.74843 l
h
5.92874 373.18729 m
398.35492 373.18729 l
398.35492 264.74841 l
5.92874 264.74841 l
h
5.92874 373.18729 m
W*
0 0 1751 1525 rc
1 0 0 -1 -829 1348 cm
834.92871 974.81268 m
1227.3549 974.81268 l
1227.3549 1083.2516 l
834.92871 1083.2516 l
h
834.92871 974.81268 m
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 1751 1525 rc
1 0 0 -1 202.14183 318.96786 cm
/F1.1[ 26 0 0 -26 0 0]sf
-12.276367 9.612793 m
(L)s
Q
0.60000002 i
/Cs1 SC
0 0 0 sc
q
491.80948 473.18729 m
1387.3228 473.18729 l
1387.3228 164.74843 l
491.80948 164.74843 l
h
591.80951 373.18729 m
1287.3228 373.18729 l
1287.3228 264.74841 l
591.80951 264.74841 l
h
591.80951 373.18729 m
W*
0 0 1751 1525 rc
1 0 0 -1 -829 1348 cm
1420.8094 974.81268 m
2116.3228 974.81268 l
2116.3228 1083.2516 l
1420.8094 1083.2516 l
h
1420.8094 974.81268 m
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 1751 1525 rc
1 0 0 -1 939.5661 318.96786 cm
/F1.1[ 26 0 0 -26 0 0]sf
-12.276367 9.612793 m
(L)s
5 w
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -829 1348 cm
2121.3228 1029.0321 m
2322.3425 1029.0321 l
S
0 i
CM
1507.7426 318.96786 m
1493.3425 324.36786 l
1493.3425 313.56787 l
h
1507.7426 318.96786 m
f
0 J
0 j
1 0 0 -1 -829 1348 cm
2336.7427 1029.0321 m
2322.3425 1023.6321 l
2322.3425 1034.4321 l
h
2336.7427 1029.0321 m
S
Q
0.60000002 i
/Cs1 SC
0 0 0 sc
q
1420.2426 473.18729 m
1846 473.18729 l
1846 164.74843 l
1420.2426 164.74843 l
h
1520.2426 373.18729 m
1746 373.18729 l
1746 264.74841 l
1520.2426 264.74841 l
h
1520.2426 373.18729 m
W*
0 0 1751 1525 rc
1 0 0 -1 -829 1348 cm
2349.2427 974.81268 m
2575 974.81268 l
2575 1083.2516 l
2349.2427 1083.2516 l
h
2349.2427 974.81268 m
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 1751 1525 rc
1 0 0 -1 1633.1213 318.96786 cm
/F1.1[ 26 0 0 -26 0 0]sf
-12.276367 9.612793 m
(L)s
1 0 0 -1 179.80356 1229.0868 cm
/F2.1[ 35 0 0 -35 0 0]sf
-66.504959 -10.049957 m
(!\(\)*+,')[ 32.305000 22.890000 13.055000 17.150000 24.535000 24.535000 0.000000 ] xS
-128.90996 36 m
(%-./\)'0\(*12.3)[ 28.105000 23.415000 24.535000 10.675000 13.055000 11.900000 24.430000 22.645000 17.150000 24.500000 16.520000 24.535000 0.000000 ] xS
1 0 0 -1 910.62433 1241.6044 cm
-43.855 -10.049957 m
(4/\(5.)[ 19.180000 10.675000 22.645000 10.675000 0.000000 ] xS
-83.842499 36 m
(6\(5\(*\)/17)[ 22.610000 22.645000 10.675000 22.645000 17.150000 13.545000 10.675000 24.500000 0.000000 ] xS
1 0 0 -1 1627.2526 1241.6044 cm
-62.4925 12.975021 m
("8,12\))[ 19.950000 25.970000 24.535000 24.500000 16.975000 0.000000 ] xS
5 w
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -829 1348 cm
2120.2019 387.29901 m
2316.4739 387.4162 l
S
0 i
CM
1501.8739 960.5752 m
1487.4771 965.98376 l
1487.4706 955.18378 l
h
1501.8739 960.5752 m
f
0 J
0 j
1 0 0 -1 -829 1348 cm
2330.8738 387.4248 m
2316.4771 382.0162 l
2316.4707 392.81619 l
h
2330.8738 387.4248 m
S
1 J
1 j
0.60000002 i
2120.2019 547.45575 m
2316.4739 547.45575 l
S
0 i
CM
1501.8739 800.54425 m
1487.4739 805.94427 l
1487.4739 795.14429 l
h
1501.8739 800.54425 m
f
0 J
0 j
1 0 0 -1 -829 1348 cm
2330.8738 547.45575 m
2316.4739 542.05573 l
2316.4739 552.85571 l
h
2330.8738 547.45575 m
S
1 J
1 j
0.60000002 i
2120.2019 858.21216 m
2321.9565 858.34082 l
S
0 i
CM
1507.3566 489.64999 m
1492.9601 495.05917 l
1492.9531 484.25916 l
h
1507.3566 489.64999 m
f
0 J
0 j
1 0 0 -1 -829 1348 cm
2336.3567 858.35004 m
2321.96 852.94086 l
2321.9531 863.74084 l
h
2336.3567 858.35004 m
S
1 J
1 j
0.60000002 i
2120.2019 708.04907 m
2318.804 708.17633 l
S
0 i
CM
1504.204 639.81445 m
1489.8074 645.22363 l
1489.8004 634.42365 l
h
1504.204 639.81445 m
f
0 J
0 j
1 0 0 -1 -829 1348 cm
2333.2039 708.18555 m
2318.8074 702.77637 l
2318.8005 713.57635 l
h
2333.2039 708.18555 m
S
Q
0.60000002 i
/Cs1 SC
0 0 0 sc
q
1414.3739 1114.7197 m
1840.1313 1114.7197 l
1840.1313 806.28088 l
1414.3739 806.28088 l
h
1514.3739 1014.7198 m
1740.1313 1014.7198 l
1740.1313 906.28088 l
1514.3739 906.28088 l
h
1514.3739 1014.7198 m
W*
0 0 1751 1525 rc
1 0 0 -1 -829 1348 cm
2343.3738 333.28024 m
2569.1313 333.28024 l
2569.1313 441.71912 l
2343.3738 441.71912 l
h
2343.3738 333.28024 m
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 1751 1525 rc
1 0 0 -1 1627.2526 960.50031 cm
/F1.1[ 26 0 0 -26 0 0]sf
-70.547852 9.612793 m
(!"#$%&$"'\(8/)[ 14.701172 7.629883 14.256836 14.383789 10.118164 14.256836 14.612305 7.109375 8.023438 12.390625 10.549805 0.000000 ] xS
Q
0.60000002 i
/Cs1 SC
0 0 0 sc
q
1414.3739 954.76373 m
1840.1313 954.76373 l
1840.1313 646.32483 l
1414.3739 646.32483 l
h
1514.3739 854.76373 m
1740.1313 854.76373 l
1740.1313 746.32483 l
1514.3739 746.32483 l
h
1514.3739 854.76373 m
W*
0 0 1751 1525 rc
1 0 0 -1 -829 1348 cm
2343.3738 493.2363 m
2569.1313 493.2363 l
2569.1313 601.67517 l
2343.3738 601.67517 l
h
2343.3738 493.2363 m
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 1751 1525 rc
1 0 0 -1 1627.2526 800.54425 cm
/F1.1[ 26 0 0 -26 0 0]sf
-47.42334 9.612793 m
(-./0'\(8/)[ 7.667969 14.041016 13.063477 16.046875 8.023438 12.390625 10.549805 0.000000 ] xS
Q
0.60000002 i
/Cs1 SC
0 0 0 sc
q
1416.704 793.95355 m
1842.4613 793.95355 l
1842.4613 485.51465 l
1416.704 485.51465 l
h
1516.704 693.95355 m
1742.4613 693.95355 l
1742.4613 585.51465 l
1516.704 585.51465 l
h
1516.704 693.95355 m
W*
0 0 1751 1525 rc
1 0 0 -1 -829 1348 cm
2345.7039 654.04645 m
2571.4614 654.04645 l
2571.4614 762.48535 l
2345.7039 762.48535 l
h
2345.7039 654.04645 m
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 1751 1525 rc
1 0 0 -1 1629.5826 639.73407 cm
/F1.1[ 26 0 0 -26 0 0]sf
-46.972656 9.612793 m
(12.'\(8/)[ 19.208008 18.877930 11.832031 8.023438 12.390625 10.549805 0.000000 ] xS
Q
0.60000002 i
/Cs1 SC
0 0 0 sc
q
1419.8566 643.78943 m
1845.614 643.78943 l
1845.614 335.35059 l
1419.8566 335.35059 l
h
1519.8566 543.78943 m
1745.614 543.78943 l
1745.614 435.35059 l
1519.8566 435.35059 l
h
1519.8566 543.78943 m
W*
0 0 1751 1525 rc
1 0 0 -1 -829 1348 cm
2348.8567 804.21057 m
2574.614 804.21057 l
2574.614 912.64941 l
2348.8567 912.64941 l
h
2348.8567 804.21057 m
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 1751 1525 rc
1 0 0 -1 1632.7354 489.57001 cm
/F1.1[ 26 0 0 -26 0 0]sf
-42.960938 9.612793 m
(;<.'\(8/)[ 11.844727 18.217773 11.832031 8.023438 12.390625 10.549805 0.000000 ] xS
1 0 0 -1 202.14183 179.5 cm
/F2.1[ 35 0 0 -35 0 0]sf
-86.152496 12.975021 m
(97,-\)'4/5\()[ 12.390000 23.835000 24.535000 23.415000 13.055000 11.900000 19.180000 10.675000 10.675000 0.000000 ] xS
/Cs1 SC
0 0.97680002 0 sc
1 0 0 -1 875.5 49.367077 cm
/F1.1[ 35 0 0 -35 0 0]sf
-824.63623 12.97876 m
(U6&$"\(\)*6V%6;<.'&\(\)*'+,6666V8$4$\("6;5=$8"\)=*>?%\(.:%">28".:%">?$MNK=>S5&C:T>A<Q>?ON>P?;666W6;<.'\(8/6)[ 21.601562 10.800781 19.191895 19.670410 9.570312 16.679688 20.986328 20.986328 10.800781 7.622070 13.090820 10.800781 15.944824 24.523926 15.927734 10.800781 19.191895 16.679688 20.986328 20.986328 10.800781 20.952148 19.020996 10.800781 10.800781 10.800781 10.800781 7.622070 14.201660 19.362793 8.715820 19.362793 16.679688 9.570312 10.800781 17.517090 8.715820 27.685547 19.362793 14.201660 9.877930 20.986328 28.112793 20.986328 10.800781 20.405273 12.783203 16.679688 17.893066 21.037598 14.355469 9.570312 10.800781 25.412598 14.201660 9.570312 17.893066 21.037598 14.355469 9.570312 10.800781 20.405273 19.362793 20.986328 29.941406 19.072266 27.685547 10.800781 37.460938 8.715820 19.191895 20.986328 20.371094 25.788574 10.800781 24.694824 25.258789 23.190918 10.800781 20.166016 21.003418 30.710449 10.800781 21.071777 20.900879 16.884766 10.800781 10.800781 10.800781 21.601562 10.800781 15.944824 24.523926 15.927734 10.800781 16.679688 14.201660 17.585449 0.000000 ] xS
/Cs2 SC
0 sc
1 0 0 -1 1632.6313 179.5 cm
/F2.1[ 35 0 0 -35 0 0]sf
-102.4625 12.975021 m
(:-\),-\)'4/5\()[ 32.375000 23.415000 13.055000 24.535000 23.415000 13.055000 11.900000 19.180000 10.675000 10.675000 0.000000 ] xS
ep
end
%%Trailer
%%EOF

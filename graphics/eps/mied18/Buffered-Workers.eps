%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 1723.000000 1212.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.14.1 (Build 18B75) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 1723 1212
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 1723 1212
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: Futura-Medium
%!FontType1-1.0: Futura-Medium 1.0000.1.0000
/FontInfo 1 dict dup begin
/FSType 6 def
end readonly def
14 dict begin/FontName /Futura-Medium def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /W put
dup 34 /O put
dup 35 /R put
dup 36 /K put
dup 37 /E put
dup 38 /space put
dup 39 /one put
dup 40 /two put
dup 41 /three put
dup 42 /b put
dup 43 /u put
dup 44 /f put
dup 45 /e put
dup 46 /r put
dup 47 /d put
dup 48 /w put
dup 49 /o put
dup 50 /k put
dup 51 /s put
dup 52 /four put
dup 53 /C put
dup 54 /L put
dup 55 /T put
dup 56 /ellipsis put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -1074 1 index div -591 2 index div 2707 3 index div 2164 5 -1 roll div]cvx def
/sfnts [<



00>] def
/CharStrings 28 dict dup begin
/.notdef 0 def
/space 1 def
/ellipsis 2 def
/hyphen 3 def
/one 4 def
/two 5 def
/three 6 def
/four 7 def
/C 8 def
/E 9 def
/K 10 def
/L 11 def
/O 12 def
/R 13 def
/T 14 def
/W 15 def
/b 16 def
/d 17 def
/e 18 def
/f 19 def
/h 20 def
/k 21 def
/o 22 def
/r 23 def
/s 24 def
/u 25 def
/w 26 def
/hbar 27 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontInfo 1 dict dup begin
/FSType 6 def
end readonly def
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-1074 -591 2707 2164}def
/UniqueID 4208071 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C55AC8266BDD340E521355EEF85826934CAE169B3813170EF21157F980278DEA2CE475C6187CB4267A04435AB7CCB196A466EDED31699319305B4913DB428C1F94A0BD0621B41DEC2216CE6C1E3EBC36487BA48FFFC5F94B7C8705655675D4E21DD11D422EFC346F0840F70FCA808FD56424C244741A5EEC370A3276C5E050182153744A195066BD7AA429092A1D177FBAF786F0AF577C4D7E983BFDF2B7FE821BBBBAF2C47B5474634C5EBA3FDC6D94C46C72352125632A4E041E73E9BD5C6762AFA8CFF61FB47A00994F3CC783A174E33BEE4ACD59694A794DE0454399839EB3DFBDA5257074AE23896D43EF4B93E7C634E9EE4FD60205658B32D5051871025AEEFC537429455819FAF20F088B8F409D05ED07AE2AAE6FB05CCD488C19BAA4F4D99409BE990F02FB8D8D5B68F2FAB203C75FF3F3C8E39CF2E5EB849FFAF094D2BF982692CD13C4F7FEB8EEDE35F239B389B57EA7B5BC9FCBBCF0F4A7A0279FE792EB09D4F93EB05289B9780E42F2E844AE219B44C94E2BAAD2DEC0F26BED42CB273CD869EB74696277C6B18075310837A4B002E619EE324AA07DD8AC01DBB9C64B22AE263E08D99834870FC3C0D1C1B14A460BDF99DF5774104102CB40AAD653D3821EE0D4D55CF0CB0DEF1CEC4FC2966CE519B764ADDA915869BEFDE353A98BFC61F8D56A470B307B2C24B9E76625F0F951513EAF0B8FB3274231029B605744F59190BE791E0884A4A4085FB3BE93EC754E116BF243D419B0C24CD1DD87DCAED95CE56CE6C2422192B557725D923B3F940A4FA6F44C91544A7153F794FE6541AC3EFF
3948504536469326885571F7E6005B772B44FDC1B945D94676916C13A1A5ACB90F284CFCC674DBC4CAF66C47F9EE64441E6815995E839295344D4DEF1DB349E5C392DC61CA204BDACBF485D641E5B9FEF59E07EA6C368D9779D3EEE8979D32B42025E6BE9EE515C5A4FBA3BEE44B394A2D22C5D5403C05768EDE1F9916C64F02E3AB4941663EA834A02085EFAA4B8C18DCBCBEA20CEABD403BC75DE0FA4F2D1E87481280552623A0331EEC4433CFEE2D8F29A66650F0EF48459EFE4E404E527B16E90F51298834DCA9E02B520D85365FE482FEB397C98703266B0411775E6DF0B2AA80C144A967A99C844D848BFC576F4E9A71055572EA9C0963F9CE1FF7716581C15583EFA84805C7B18DBB0FD24242E06F28FFBCC1D9B7F831E0118307E49EA632C29EFA1D3165F273BCA29935F96F512A85129C539EF23039D241BF444FCFE2198313374BCA460350DC1693D32B455B14971B6CEC1B54DAA499042B7A29AE74C93AADE85449398DDF79FADA8C6756599531052E588ED36A379E7E83E1B0E4BA8146FB10070966E273D3FB4A8BD8182DE6D6023C4566CE0F6F07216371173A9924B5E61390C5068C662ED27C2D0BA94D73229BB744525DD817D074FE5B497F465ABED95EB4A00C185720A35EBD12911A73ACC3FDEF19EA69E89CF6FA0441FA2DBF86BA03AAEB14FC7970526BE790690FA16E99B323DF29C7E25005240C672E6E5F028A412A34495733490AD9B696B5A80D7B1AE514A7C4EB5F98347C2F2B68B4ABC0AC7BF1F1264718E4EA9BB18B20BE2F0E3A78CCC39B9657674DD670A8C2761D25466B06C536EB218596A78BCFFC92B8DB23F7438031E2745BD4DCF9A8EBC00A45DCB6EAE79F9024B839C2D3BEF29DDC6384B646BA0B2AFEDD48509EAD78993E155827EA663699DAA7B7DE9D0B350E428721E3035A87790EF4F71AB30DDEA0D72B62A924C95E57E480D7E7F2775DED1DC5415085BB021A6584548D0520E9FC63BB94E19E2FA2E8FEA2166E8E4A04E048048F225F393903A939F50724BC6262C453E86BA2A4D8E6F40974DC0D1BDB1436308D77506FEF3AE29177B8BA6DB842BDEC50A49CE6C5DD047A061D6403B67CD063CAEA63B86791199BC50350DF41852D08A528546EE3BA9F34AA7F28698F8885B2E053522A634259FBAEABC314D4389909821BD14963E63C934C127153CB64C9AF283C956752307E61ABD42AD1FAB98F39E9DFF904FB170E8D3A7585BE5CB888129AF54AF3E3B2D70C28156DBBEBC22FAD587456F05AA80926F807235B4C9D149A0171446399904DAF1D71B1948E3C1E81F5336CCC90A4FD392840C43F5A4FD41842AC1341DB809B411E801E7B9DF3D9437EAD861B45E86E5B0E35EF674BB33207096FBEB0D0E55E0490907B3300089165F98958C7A5C8740C93B542A7FF12535B980B61D7B1E711F6C91ACD2D47

6546570F554DA8E20C5A3069DF7BE397E26B7C67972EE9B7736F4A7AC56FD059CCD6C24F509593B10A6EDE928EC850C1B201378893461CD910AB8640446E44B60A13A61860B97E1791BBF35995634C24D94E1D8BE4B14692A475EDCD91969DFCE6F8EFAF4CF42BB11392859049EE4EEC383D991FD8B1E6B724449BEDD7D04829332E4A2B256E332067599B6B3BA46BC43DB4D029CC39D03CABC92551B517EC12C560BA3EA8AD980AE67BBA70B6F3A70E9D1896D447CB6F4745591481BF224515F66B3C949FEF526A478C6AC0B81E0C0CB254F1560AE17BE6043A0D32E7C3DA0599F0E8CAEFC047E0D8B3EB525D184D35FEDD72E84D41737408267B6E3497A8D739404084B3B1C879205DA2BAFEEC3F91B1C81F82BF6580E1E3D94C8B8CE2B006289EDD482AC358BB4F13DE120AB94421F720153FBCC2081F4A96EF91910461D97E8FD40F86E37231D92156358DAE26E12921B1378C3C6CE178263A09080172C40C1C6F38609CACE7DC6994B9D871D4597E751FAE3D7D1FBB120450139140AC63CFB250966CBCC5D0CE3F8661F09D9E950846AE1433484C041A27D077777AD29C3D32CE4C92DC04A0346461FF9903FD2DE2829327C5F32B83F6B798A1958E4A431687375ECB4E2F3C187EFCF005965DC64C48751A6F5412ED8C02BE5D2ED0E0989CFCCAA3D4D3298EE35E0CFFE991CDF1AB1DD3A28B681912D3A9B74000E8845AA865295AE80E1A80963BE2A0A9B96F454248F892A25C28461391C496C05962D1453F74521885F59B285ACD8010EE7331DACFF6DDE8209410E9469D03E06CADD0749CBEB56B1E2B5E2D6092E37D5CF221691D68F705D515AB98A17F5CE229CB69707BF285B1CC4CA3051A52D2FBD868591E1BB1F132CF4FB309A23710CC099B1BBE440F64B556E1388D03D5D4022D3C7B83DD2A61CE16967650F71880DAF4316CA8FA6AFD0050A36E85CDE3FA29718440BA45F550C89BF5CBF28E4EDD843D602F83D6213EE7ADA622FAA2F0FE33D07D6A
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/Futura-Medium cguidfix
/F1.1/Futura-Medium renmfont
%RBIBeginFontSubset: Futura-Bold
%!FontType1-1.0: Futura-Bold 1.0000.2.0010
/FontInfo 1 dict dup begin
/FSType 8 def
end readonly def
14 dict begin/FontName /Futura-Bold def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /N put
dup 34 /E put
dup 35 /T put
dup 36 /C put
dup 37 /A put
dup 38 /P put
dup 39 /space put
dup 40 /a put
dup 41 /c put
dup 42 /k put
dup 43 /e put
dup 44 /t put
dup 45 /D put
dup 46 /i put
dup 47 /s put
dup 48 /r put
dup 49 /b put
dup 50 /u put
dup 51 /o put
dup 52 /n put
dup 53 /v put
dup 54 /R put
dup 55 /d put
dup 56 /B put
dup 57 /f put
dup 58 /I put
dup 59 /p put
dup 60 /h put
dup 61 /l put
dup 62 /w put
dup 63 /fi put
dup 64 /g put
dup 65 /m put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -227 1 index div -344 2 index div 1459 3 index div 1099 5 -1 roll div]cvx def
/sfnts [<

4060395F432627465F37643AB5FF182B201312202B18182A1F1312202A0256FE90432B49633839644A2B4939033E00000001002AFFF001C10211001D0000012623220E0215141E02333237150623222E0235343E0233321701C12F301A2D221313212E1A332C433C38654D2E2C4C693C4238015B2012212D1C1B2D2112239A1D2647633D3D6549291C0000000002002AFFF00280033E00130026000013141E0233323E0235342E0223220E0213331123350623222E0235343E02333217E6121F2B19182B1F13131F2B18182B1F13E4B6B63A63385E462725445F39603F0102192B201212202A18182B20121220290224FCC239492A4A643A37634A2B430000000002002AFFED025E02140006001E0000012E012322060F0114333237330623222E0235343E0233321E021D0101B50938282A3507056E3B1EAF35D4416C4D2A284A694241684826014B262E2C28697530B02748643E40674827274A6B431300000001000C000001810349001E0000011123112335333534373E0333321617152E01232206070E011D0133150102B541410C0A2C3B4421172714121F110B170A0A077F016AFE96016A974D4026203728160A099E0909070B0B292340970002002AFEFE027C020F0013003B000013141E0233323E0235342E0223220E0225111406070E0323222E022733163332363D010E0323222E0235343E0233321735E6121F2B19182B1F1313202B17182A201301960A090C33485B353C644B3008CC1343393D1425262A19375C432528455F385B3E0103192B201212202B18192A2012131F2AE6FE222B441A21392A181E35472A334039311319100726445F3A3B654B2B44360000000001003E0000025B033E001500001333113E0133321615112311342627262322061511233EB5254C336163B50C0E18222E31B5033EFE822D1F6B5BFEBA010327300D153733FEEE0000020032000000FE032C0003001700001311231127343E0233321E0215140E0223222E02F3B50C101C251515251C10101C251515251C100201FDFF0201C515251C10101C251515251C10101C250000000001003E000002B8033E000A00001311373305012327152311F3BEF8FEFF0110FEC7B5033EFE0AB9EDFEECD1D1033E000001003E000003A2020A00260000133315363332173633321E0215112335342E0223221D012335342E0223220E021D01233EB54A5C723C3D7124402E1BB50B151C1057B50A131E14111E170DB502013F476061152D4833FEB3FD27321C0A7FFDFD27331E0B0A1D3329FD00000001003E0000025B020C001900001333153E01333216171E01151123113426272E012322061511233EB5254C33364D1B1610B50B0E0C1E112E31B50201412D1F23201A4029FEBA0103262F0E0C0A3733FEEE00000002002AFFED0292021400130027000013141E02

001600300064009600C000D600E400FA011801420154018C01C601F4022E025E028C02E00304032C0344037A03A403DE041804340472048E04A204C004F4050205180538000100000023006E00070046000400010000000000000000000000000002000100000000
00>] def
/CharStrings 35 dict dup begin
/.notdef 0 def
/space 1 def
/A 2 def
/B 3 def
/C 4 def
/D 5 def
/E 6 def
/I 7 def
/N 8 def
/P 9 def
/R 10 def
/T 11 def
/a 12 def
/b 13 def
/c 14 def
/d 15 def
/e 16 def
/f 17 def
/g 18 def
/h 19 def
/i 20 def
/k 21 def
/m 22 def
/n 23 def
/o 24 def
/p 25 def
/r 26 def
/s 27 def
/u 28 def
/v 29 def
/w 30 def
/fi 31 def
/l 32 def
/t 33 def
/anoteleia 34 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontInfo 1 dict dup begin
/FSType 8 def
end readonly def
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-227 -344 1459 1099}def
/UniqueID 4364665 def
currentdict currentfile eexec

3673443196A52534F09780E3709590B1E3F752A18F27E51E1856BF6F83FCC4E0388CA0830D1C3982AED9163A037360829AF23827C56B6F58012389DA076281415D247251B0859CBBCD8B8E63356F3118A61E68E25C39EB85C3D52863535DC7DA2A1CB4CD48AEF51AFF5EC1D59EA50A5B68E4D94BE3DE466913EC779D8DD2C4A80977787B45BF3848FA960D3D325F062A53C6BAEAC5E3658C9BB909F17B678A8EB1FC308AF721080407CD4A367689A9A69FE18F1A8A29070DA82F961C4C10D49F9FF989F16858B592246C2D6709A54A4359DCC2CF1C85D58830074345ACFB562C8B920BA934451688FC153A9A3684F94D70A4599BAE516F3FBC7CF6869EBA2A11A06E1CC403C39F26AF8ECE351E45501D4977199B3B3E89B5277D96097367D29B3FAD89611449CC683E0B19D9376D193CB18EC968B840F5B254084F684A5344C1D16BA5659F51FE5772AE6AB89AEC1D7AF29DD15A2D5FEB0CDA3D1493765CE471E1BE757086DDC010D642078A058D283B86CE221E9B0279648670AA259B0D2F8B5B8141A20C3A7ECACD2EB9B619258D07AAF2D79FCD84BC863633E48FA2869BD142B5F049D755DF98CA42FF47AD676C42E1C04575C02209D0532B1A4552D6FBDCB870929D5FE08DE70AE9C8AF4C30DAF17A130ABEF448FB77AAE971CC81BB1E61AA74FEAFE948E66D5DA981F75821BA593F3F6B13636DED32C176B639FA6F72FA9F5060CA2FD0C361E7E31733FD96CC3A1F85C895A6B66A5D71CFB5C7D2227047EB7D6A121FE81FB22DC5C471DD026236E160E4A462E68DE91D7B3C0C3B4439B8485F8E199C53AF038599E6114C81F86AF96D1C91187C09F988D5806118375E68A3E1F4D5277204E3F48F1AF64B3EB5D5A06108EC1D14E5772C4090806F82006D72FA0F749C07E3B2E0D642DCFC6213BB22518CE97E89A301A29F0D8033A1A1FF9FC3355DFBB357879EBA2AB8FDE1A4037E9948A9ADA2815F44E0C8A0EBF88B8F76EA670DD08AF61BE53C2D9B05A4C0025E6E908C94884E80B8F8D2AF3017D0E9AE355E295FD2ECD2084EE6D0F4470F1A2BC88C26B3F387761169ECBBDF95A5A1370EA12636A2C74C81A3F1D1A173928AF58A33F3CA48542CCE23AC42CDF9CF5C92A1084C1AB18B787DF69CE70453BCBD136C017D04CD728E454297F9B3F02B77B51C8E683EC8965A0BB6C3B8A4088B7A53134960E532222D1494036DCBE53234E05AB73F5DD6FABDE1F3D689595E12CD724A47DE0C87CD31903D398BA41799BFDACBDA6C5E2C18AB6542069658434E2413ACFDD7D63004F4E83578194A288D690A3CD55F994B55A6F287AEDA6937681DB9ECB32AD3B236E62665C774B521A24E76877EC6BFDC8DE945055FFA97DC3F739F25AFA2EEAD9411EDEC2B3BC2701EF7C47FB4DB345F64347CDA7061177634DF7E24FA8D5E0EB8D63EB6DFE4F7117499

DFA9410FFE0165B823D54D904D09C23023309041E2FC90063B2A931BC6FD6300783A035AFC075A42CE9CDA80BD4F7406239E17F22E27B761DA80E471A38744D3EAB394F9B9615F28B8B4B0527EC63A14FF062D714072E84623E16A4B329CABB59FA74F39996D9DE17DD04BAE180EB6FDC6B3F2FE3D23E571B57C0944F24A0EC3211E8CA3A8E75678264B518C91B89C0452FCE6EC87C78DBBBE10B15CBB57CE2271C6D0E12284EF78A6CDADFCC3B5CD5DC50106CA4518EC0AB2F1FE97D3261309BA4B2A8E9EC547E751B64BD5E3ADD1DEFFD77BC18CAE429BC073E04C2BEC79F792408828EC30E0B0BB997D786A849E4DB9AEC2902CF207C611D47C9CA35285F49C6CA87226E5C9F8DFD6934EE13F6011735E221C146CA6796F774A6A29F578D34D38FBD7E1D04CF1585D519795B3BC3FFA47640CCCC604558D78E1109EC7D35CDFBC537622F56A11827C4E248E4E79ACDB57046550574B6337FB89D06124F3A73B8E2186D4F58852297D25665918370BCE9A5F8C6882D2FA844E889D2CD3F2EADA1182C5DF2043A100754F77EFCDC46A660AE1A03EB2AE73E0D978A961C45484CF00B6A4F88A6DF08D30B2509DA404F7B8D7A62B5B634842E588EC5FBEDE75CD40C66B810098047FC3A05613DFEA37C791D05A1CF5FA10F528433DBD0C8622DCE3D2205AC5887454A5A972F3DAA57828AD281734C2F59C334079D4DDEDDE1407A95CE9FC418BB2B95BFBA7C89BF5B4B22144520C90038F53937C9414FC7C923E5BC6BFA5D3FFB5E87B2D4E9EC49C930755A001D0368283C23261BE6562B43F09457831FFB481EB87C4447B5D367C49D42BD963BEA55FABE300E2BFAAF24367F9D2841921DD3569C99730F06B307B0BE1F9C3BF8CF85262859CAF43A0EFA1D109C903935E99C27E5C95E0EC11CE564AA08245E08C834B05BB4FFBFDCFE4A347EF20CFD417FE453152667D8F7E2DE1E93BADC27597B315414BE9CBA819B2B1C6A3E2B5572C25CE740441C9241B8582748638B79F57177525F8CD4D6775C2F9C405F9DAD7F27E71CE57447A0762492123392E21350E2BFC47F644DA1901BBB60B777D85F12D81A9CFF7DB811D73635CC38F42A8CCDF0CDDA6E6F3F39DE08BA4F54355665EF91279EFB2D63711CE7484026E7C81BF7E43EE5D2E11E3310D2A8ECCDCF087FA4AA75E9134298491C165C942B017CFFD7129603FA3FBB9FB5C42A623320C8FDDD890A48086659A25BCC0DA78ACCEC79B190B601705EA7B57D6EA939A26C63820A1ACAC99221AB767F2A97F8435C27C85EA42BB64430694533F24684E12E46F9059AA97184DDBA96DDFC6A66E5486B4F56DB21C746806F80A9464F3F92A48C8B53AC09FA7CEDCC87D641668E4E284DEB6D78634E0BA377125DA3E9E13BA44A995C61CE3A75E6AF82EC34034D0568218A74BD7C7262AF21C798ACFD56D78
4DB6AF35027B6468F07310F92DED1F1AE0CDDA99EB518ECB36C0485531BC64822271B5A9DB06BA1EF71004343F631F4D502306C9373E5F3681479D11AEFA7AA84EE22F386E56B4650988B93A6768AEEE8D54992B6FA419EF0AEF16CD34EE817478E9CBCD2B5C7751BF46939F72D3EA722123CE3F456A5DF40F766AE08D3C67877D2FCA5595ECBC4853951F5009B86D9B74818F30BDEFDAF59680E4470BD75BA2AF9D7D246DB301F3F428409BD62FBBEB7C5E80B8B69C600E72150E1367E1C692FB6D1A0B1483C6FAE67810C68FABFE532C8EF13FB91E1C7FE1389503EA56C0811A1DE6E795009B57A60A223F9AFDB2D9F019553440ECFB962E6E52ED2F1DBB35D79081971BE4358034C7D1EAB22118E254C49C9E484E411D785717D5B3A8998205890C131B9970EF5963EB95235BCA5E28C34055A8DA368043E3457DE6E44AECD380C41631A36CB6C70ABA0B1FEDEBE891C616D32C837585FA83F28F7FC3D8C4DEF259E34100B5D342E73D814FF27E73696AED6B91AD6DF82BC004D1B0310E39B2088EF685D35826CBE51A08EF8DD3A0685E880C491655356B9A4391370E3DAE291973C944B10B74C36D4407E74821247DA340AB76C116480EF5167C795173CB3C0B60CDCEE6C7345786213442A3E35BBF700A8C181CDE508B5843AE5DCBA10E03DF078A22012B8901DAB2786DF7DFCA2070EEE3F0AAC4977E3C939B2B49C906163FADD6CB35C47A8E020E0CCF1E08F098AB1B3F2E87D11C1936C44685F25AFCF83F76518092A51BFD1857BEF247CD170476B11378E52BEAF7A8A4CA98D16D72FFD3A70341701DB0A24A85110EC801E0870DFCB8C78B9ABD785B2E3F12E7B26046B43BB98A466FE97AC3A6924DF575473AE715AF8C6EC41F26C1E01E904129C58034090E12A3662D1485543298F4D10D2C41F3A0BEEFA9FE676CBAAE380B330D8517B5DB37DC169CC12D88D5F840F7086EFD9DFD571FC918AFEFA83FE2C715AF1997401F70EF091934C129F19CFF25DFCF014507D1AF704652203895D7696E14DE8F91BF144AB51F530EA44635DB48F15C2572AE4FFEF6CBB7433B1323581948D8DA31DBE2471B1E0EF5C1D79994DF5B45998527AC9EBF6013AF291C2CE188AE6E495640A2B9A8586DEC9A817108655FC9B716843BC3F5C8B832CF46FC06B29B47201544C4F0C5856CDBBEF214D1C29430E775FEE86B3711751171784567FE1BFC2A2F6C1EC05443DCAD715D1DADB0812BC4CB0D5343F14640C12C7111A604115164DA5CBE51E2E4A88F99A3A10A28751EB9B28F8DAEA56B24B8F85BA00EFBB58B71EDFC12CD1B4494EF87F5F5DF837F40F8A55E82B4CEAF16516B6C3FEF68BC0F15B76BD5B9CD7C04DCA3583F4CFF9E84ECA9FA6B29009AD9466258F026EC34DE9CBD88E357CAF3B0A6610952F87C06B7C0081E1CF7CE94AA375B31B3E38596
8867FBDA17BA7E579DF09A39BE170DA51821A5F454D6B47A73917B90F7CEC074BE70060E27A231AFEF3F02505BCF30FD01A429284852F7308695893BB0FD735CCC50CC428DFB30F093365AD3E7AD9EA242130EBB5540B22FEA5FA5A58D0C8A626654C4A6B43FA3670F5CEABEC0821A4B620BFDB8AB79F30588D30BD998F703E7CEFA347B2E23AE3D936F5DC521C6D1979BE4FB1D35BB6BEA438F324DE056B0C2A9DC6E5C074C4DB4BEFB5A7CCB809E5461
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/Futura-Bold cguidfix
/F2.1/Futura-Bold renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
 exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
10 w
1 J
1 j
0.60000002 i
/Cs1 SC
0 0 0 sc
q
-94.243149 904 m
1818 904 l
1818 -95 l
-94.243149 -95 l
h
5.7568493 804 m
1718 804 l
1718 5 l
5.7568493 5 l
h
5.7568493 804 m
W*
0 0 1723 1212 rc
1 0 0 -1 -532 1056 cm
537.75684 252 m
2250 252 l
2250 1051 l
537.75684 1051 l
h
537.75684 252 m
S
Q
q
1065 811.25769 m
1787.7628 811.25769 l
1787.7628 520.29681 l
1065 520.29681 l
h
1165 711.25769 m
1687.7628 711.25769 l
1687.7628 620.29681 l
1165 620.29681 l
h
1165 711.25769 m
W*
0 0 1723 1212 rc
1 0 0 -1 -532 1056 cm
1697 344.74234 m
2219.7627 344.74234 l
2219.7627 435.70319 l
1697 435.70319 l
h
1697 344.74234 m
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 1723 1212 rc
1 0 0 -1 1426.3813 665.77722 cm
/F1.1[ 25 0 0 -25 0 0]sf
-65.9729 9.6276855 m
(!"#$%#&')[ 25.659180 22.338867 15.051270 16.564941 14.135742 15.051270 7.714844 0.000000 ] xS
Q
0.60000002 i
/Cs1 SC
0 0 0 sc
q
1065 676.7381 m
1787.7628 676.7381 l
1787.7628 385.77725 l
1065 385.77725 l
h
1165 576.7381 m
1687.7628 576.7381 l
1687.7628 485.77725 l
1165 485.77725 l
h
1165 576.7381 m
W*
0 0 1723 1212 rc
1 0 0 -1 -532 1056 cm
1697 479.2619 m
2219.7627 479.2619 l
2219.7627 570.22278 l
1697 570.22278 l
h
1697 479.2619 m
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 1723 1212 rc
1 0 0 -1 1426.3813 531.25769 cm
/F1.1[ 25 0 0 -25 0 0]sf
-65.9729 9.6276855 m
(!"#$%#&\()[ 25.659180 22.338867 15.051270 16.564941 14.135742 15.051270 7.714844 0.000000 ] xS
Q
0.60000002 i
/Cs1 SC
0 0 0 sc
q
1065 542.21851 m
1787.7628 542.21851 l
1787.7628 251.25768 l
1065 251.25768 l
h
1165 442.21854 m
1687.7628 442.21854 l
1687.7628 351.25766 l
1165 351.25766 l
h
1165 442.21854 m
W*
0 0 1723 1212 rc
1 0 0 -1 -532 1056 cm
1697 613.78149 m
2219.7627 613.78149 l
2219.7627 704.74231 l
1697 704.74231 l
h
1697 613.78149 m
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 1723 1212 rc
1 0 0 -1 1426.3813 396.7381 cm
/F1.1[ 25 0 0 -25 0 0]sf
-65.9729 9.6276855 m
(!"#$%#&\))[ 25.659180 22.338867 15.051270 16.564941 14.135742 15.051270 7.714844 0.000000 ] xS
1 0 0 -1 839 1141 cm
/F2.1[ 99 0 0 -99 0 0]sf
-505.51996 37.01506 m
(!"#$%&')[ 90.189000 56.430000 52.173000 67.815000 79.398000 67.122000 0.000000 ] xS
/F1.1[ 73 0 0 -73 0 0]sf
-58.732964 37.01506 m
(*+,,-.-/&01.2-.3)[ 43.771484 39.779297 24.095703 22.776855 40.385254 26.804688 40.385254 43.771484 22.527344 55.177734 43.878418 28.408691 35.181152 40.385254 27.303711 0.000000 ] xS
Q
0.60000002 i
/Cs1 SC
0 0 0 sc
q
1066.2372 413.19894 m
1789 413.19894 l
1789 122.2381 l
1066.2372 122.2381 l
h
1166.2372 313.19894 m
1689 313.19894 l
1689 222.2381 l
1166.2372 222.2381 l
h
1166.2372 313.19894 m
W*
0 0 1723 1212 rc
1 0 0 -1 -532 1056 cm
1698.2372 742.80103 m
2221 742.80103 l
2221 833.7619 l
1698.2372 833.7619 l
h
1698.2372 742.80103 m
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 1723 1212 rc
1 0 0 -1 1427.6187 267.71854 cm
/F1.1[ 25 0 0 -25 0 0]sf
-65.9729 9.6276855 m
(!"#$%#&4)[ 25.659180 22.338867 15.051270 16.564941 14.135742 15.051270 7.714844 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
34 484.41391 m
305.45117 484.41391 l
305.45117 307.61676 l
34 307.61676 l
h
34 484.41391 m
f
Q
0.60000002 i
/Cs1 SC
0 0 0 sc
q
-66 584.41394 m
405.45117 584.41394 l
405.45117 207.61676 l
-66 207.61676 l
h
34 484.41391 m
305.45117 484.41391 l
305.45117 307.61676 l
34 307.61676 l
h
34 484.41391 m
W*
0 0 1723 1212 rc
1 0 0 -1 -532 1056 cm
566 571.58606 m
837.45117 571.58606 l
837.45117 748.38324 l
566 748.38324 l
h
566 571.58606 m
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 1723 1212 rc
1 0 0 -1 169.72559 396.01535 cm
/F1.1[ 25 0 0 -25 0 0]sf
-71.203613 9.6276855 m
(5"66%57"#)[ 17.395020 22.338867 11.083984 11.083984 14.135742 17.517090 11.462402 22.338867 0.000000 ] xS
Q
0.60000002 i
/Cs1 SC
0 0 0 sc
q
1066.2372 272.78146 m
1789 272.78146 l
1789 -18.179377 l
1066.2372 -18.179377 l
h
1166.2372 172.78148 m
1689 172.78148 l
1689 81.820625 l
1166.2372 81.820625 l
h
1166.2372 172.78148 m
W*
0 0 1723 1212 rc
1 0 0 -1 -532 1056 cm
1698.2372 883.21851 m
2221 883.21851 l
2221 974.17938 l
1698.2372 974.17938 l
h
1698.2372 883.21851 m
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 1723 1212 rc
1 0 0 -1 1427.6187 127.30105 cm
/F1.1[ 25 0 0 -25 0 0]sf
-11.804199 9.6276855 m
(8)s
1 0 0 -1 250 908.5 cm
/F2.1[ 35 0 0 -35 0 0]sf
-227.6925 -10.049957 m
(&\(\)*+,'-\(,\('-./,0.12,.34')[ 23.310000 24.535000 18.025000 23.345000 22.890000 13.055000 11.900000 27.510000 24.535000 13.405000 24.535000 11.900000 27.510000 10.675000 18.305000 13.055000 16.310000 10.675000 24.535000 23.415000 13.545000 10.675000 24.500000 23.240000 0.000000 ] xS
-154.52499 36 m
(5.\('63247'631.4)[ 22.820000 10.675000 24.535000 11.900000 24.290000 24.500000 23.415000 23.240000 24.535000 11.900000 24.290000 24.500000 24.535000 10.675000 0.000000 ] xS
1 0 0 -1 806.5 903.5 cm
-217.42 -10.049957 m
(8299+0+7':4;2,'$<\(44+=')[ 24.220000 23.415000 14.840000 14.070000 22.645000 16.520000 22.645000 24.535000 11.900000 12.390000 23.835000 24.535000 23.415000 13.055000 11.900000 23.345000 23.240000 24.535000 23.240000 23.240000 22.645000 10.675000 0.000000 ] xS
-152.53 36 m
(930'+\(\)<'>30*+0)[ 14.000000 24.500000 16.275000 11.900000 22.645000 24.535000 18.025000 23.240000 11.900000 34.965000 24.500000 16.310000 23.345000 22.645000 0.000000 ] xS
5 w
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -532 1056 cm
839.88892 659.74072 m
859.69208 659.74072 l
859.69208 928.69373 l
1671.3372 928.69757 l
S
0 i
CM
1153.7372 127.30235 m
1139.3373 132.70242 l
1139.3372 121.90242 l
h
1153.7372 127.30235 m
f
0 J
0 j
1 0 0 -1 -532 1056 cm
1685.7372 928.69763 m
1671.3373 923.29761 l
1671.3372 934.0976 l
h
1685.7372 928.69763 m
S
1 J
1 j
0.60000002 i
859.69208 805.06116 m
859.69208 390.54697 l
1061.3121 390.54697 l
1666.1 390.22275 l
1670.1 390.22275 l
S
0 i
CM
1152.5 665.77722 m
1138.1 671.17725 l
1138.1 660.37726 l
h
1152.5 665.77722 m
f
0 J
0 j
1 0 0 -1 -532 1056 cm
1684.5 390.22275 m
1670.1 384.82275 l
1670.1 395.62277 l
h
1684.5 390.22275 m
S
1 J
1 j
0.60000002 i
860 524.55554 m
1013.225 524.26416 l
1666.1 524.74231 l
1670.1 524.74231 l
S
0 i
CM
1152.5 531.25769 m
1138.1 536.65765 l
1138.1 525.85767 l
h
1152.5 531.25769 m
f
0 J
0 j
1 0 0 -1 -532 1056 cm
1684.5 524.74231 m
1670.1 519.34235 l
1670.1 530.14233 l
h
1684.5 524.74231 m
S
1 J
1 j
0.60000002 i
859.69208 860.5329 m
859.69208 658.81482 l
860.22784 658.81482 l
1666.1 659.2619 l
1670.1 659.2619 l
S
0 i
CM
1152.5 396.7381 m
1138.1 402.13809 l
1138.1 391.3381 l
h
1152.5 396.7381 m
f
0 J
0 j
1 0 0 -1 -532 1056 cm
1684.5 659.2619 m
1670.1 653.86188 l
1670.1 664.66193 l
h
1684.5 659.2619 m
S
1 J
1 j
0.60000002 i
1105.199 928.69489 m
860 928.69489 l
860 788.28149 l
1671.3372 788.28149 l
S
0 i
CM
1153.7372 267.71854 m
1139.3372 273.11853 l
1139.3372 262.31851 l
h
1153.7372 267.71854 m
f
0 J
0 j
1 0 0 -1 -532 1056 cm
1685.7372 788.28149 m
1671.3372 782.88147 l
1671.3372 793.68146 l
h
1685.7372 788.28149 m
S
3 w
1 J
1 j
0.60000002 i
1027 371 m
1650 371 l
1650 408 l
1027 408 l
h
1027 371 m
S
1 w
1048.5 378.5 m
1076 378.5 l
1076 401.5 l
1048.5 401.5 l
h
1048.5 378.5 m
S
0 i
CM
516.5 677.27722 m
544 677.27722 l
544 654.27722 l
516.5 654.27722 l
h
516.5 677.27722 m
f
2 w
0.60000002 i
1 0 0 -1 -532 1056 cm
1048.5 378.72275 m
1076 378.72275 l
1076 401.72275 l
1048.5 401.72275 l
h
1048.5 378.72275 m
S
0 i
CM
563 677.27722 m
590.5 677.27722 l
590.5 654.27722 l
563 654.27722 l
h
563 677.27722 m
f
0.60000002 i
1 0 0 -1 -532 1056 cm
1095 378.72275 m
1122.5 378.72275 l
1122.5 401.72275 l
1095 401.72275 l
h
1095 378.72275 m
S
0 i
CM
608.71002 677.27722 m
636.21002 677.27722 l
636.21002 654.27722 l
608.71002 654.27722 l
h
608.71002 677.27722 m
f
0.60000002 i
1 0 0 -1 -532 1056 cm
1140.71 378.72275 m
1168.21 378.72275 l
1168.21 401.72275 l
1140.71 401.72275 l
h
1140.71 378.72275 m
S
0 i
CM
654.41998 677.27722 m
681.91998 677.27722 l
681.91998 654.27722 l
654.41998 654.27722 l
h
654.41998 677.27722 m
f
0.60000002 i
1 0 0 -1 -532 1056 cm
1186.42 378.72275 m
1213.92 378.72275 l
1213.92 401.72275 l
1186.42 401.72275 l
h
1186.42 378.72275 m
S
0 i
CM
700.91998 677.27722 m
728.41998 677.27722 l
728.41998 654.27722 l
700.91998 654.27722 l
h
700.91998 677.27722 m
f
0.60000002 i
1 0 0 -1 -532 1056 cm
1232.92 378.72275 m
1260.42 378.72275 l
1260.42 401.72275 l
1232.92 401.72275 l
h
1232.92 378.72275 m
S
0 i
CM
747.41998 677.27722 m
774.91998 677.27722 l
774.91998 654.27722 l
747.41998 654.27722 l
h
747.41998 677.27722 m
f
0.60000002 i
1 0 0 -1 -532 1056 cm
1279.42 378.72275 m
1306.92 378.72275 l
1306.92 401.72275 l
1279.42 401.72275 l
h
1279.42 378.72275 m
S
0 i
CM
793.13 677.27722 m
820.63 677.27722 l
820.63 654.27722 l
793.13 654.27722 l
h
793.13 677.27722 m
f
0.60000002 i
1 0 0 -1 -532 1056 cm
1325.13 378.72275 m
1352.63 378.72275 l
1352.63 401.72275 l
1325.13 401.72275 l
h
1325.13 378.72275 m
S
0 i
CM
838.84003 677.27722 m
866.34003 677.27722 l
866.34003 654.27722 l
838.84003 654.27722 l
h
838.84003 677.27722 m
f
0.60000002 i
1 0 0 -1 -532 1056 cm
1370.84 378.72275 m
1398.34 378.72275 l
1398.34 401.72275 l
1370.84 401.72275 l
h
1370.84 378.72275 m
S
0 i
CM
884.43481 677.27722 m
911.93481 677.27722 l
911.93481 654.27722 l
884.43481 654.27722 l
h
884.43481 677.27722 m
f
0.60000002 i
1 0 0 -1 -532 1056 cm
1416.4348 378.72275 m
1443.9348 378.72275 l
1443.9348 401.72275 l
1416.4348 401.72275 l
h
1416.4348 378.72275 m
S
0 i
CM
930.93481 677.27722 m
958.43481 677.27722 l
958.43481 654.27722 l
930.93481 654.27722 l
h
930.93481 677.27722 m
f
0.60000002 i
1 0 0 -1 -532 1056 cm
1462.9348 378.72275 m
1490.4348 378.72275 l
1490.4348 401.72275 l
1462.9348 401.72275 l
h
1462.9348 378.72275 m
S
0 i
CM
976.64478 677.27722 m
1004.1448 677.27722 l
1004.1448 654.27722 l
976.64478 654.27722 l
h
976.64478 677.27722 m
f
0.60000002 i
1 0 0 -1 -532 1056 cm
1508.6448 378.72275 m
1536.1448 378.72275 l
1536.1448 401.72275 l
1508.6448 401.72275 l
h
1508.6448 378.72275 m
S
0 i
CM
1022.3548 677.27722 m
1049.8549 677.27722 l
1049.8549 654.27722 l
1022.3548 654.27722 l
h
1022.3548 677.27722 m
f
0.60000002 i
1 0 0 -1 -532 1056 cm
1554.3549 378.72275 m
1581.8549 378.72275 l
1581.8549 401.72275 l
1554.3549 401.72275 l
h
1554.3549 378.72275 m
S
0 i
CM
1068.0648 677.27722 m
1095.5648 677.27722 l
1095.5648 654.27722 l
1068.0648 654.27722 l
h
1068.0648 677.27722 m
f
0.60000002 i
1 0 0 -1 -532 1056 cm
1600.0648 378.72275 m
1627.5648 378.72275 l
1627.5648 401.72275 l
1600.0648 401.72275 l
h
1600.0648 378.72275 m
S
3 w
1027.51 371.51001 m
1650.51 371.51001 l
1650.51 408.51001 l
1027.51 408.51001 l
h
1027.51 371.51001 m
S
0 i
CM
517.01001 676.76721 m
544.51001 676.76721 l
544.51001 653.76721 l
517.01001 653.76721 l
h
517.01001 676.76721 m
f
2 w
0.60000002 i
1 0 0 -1 -532 1056 cm
1049.01 379.23276 m
1076.51 379.23276 l
1076.51 402.23276 l
1049.01 402.23276 l
h
1049.01 379.23276 m
S
0 i
CM
563.51001 676.76721 m
591.01001 676.76721 l
591.01001 653.76721 l
563.51001 653.76721 l
h
563.51001 676.76721 m
f
0.60000002 i
1 0 0 -1 -532 1056 cm
1095.51 379.23276 m
1123.01 379.23276 l
1123.01 402.23276 l
1095.51 402.23276 l
h
1095.51 379.23276 m
S
0 i
CM
609.21997 676.76721 m
636.71997 676.76721 l
636.71997 653.76721 l
609.21997 653.76721 l
h
609.21997 676.76721 m
f
0.60000002 i
1 0 0 -1 -532 1056 cm
1141.22 379.23276 m
1168.72 379.23276 l
1168.72 402.23276 l
1141.22 402.23276 l
h
1141.22 379.23276 m
S
0 i
CM
654.92999 676.76721 m
682.42999 676.76721 l
682.42999 653.76721 l
654.92999 653.76721 l
h
654.92999 676.76721 m
f
0.60000002 i
1 0 0 -1 -532 1056 cm
1186.9301 379.23276 m
1214.4301 379.23276 l
1214.4301 402.23276 l
1186.9301 402.23276 l
h
1186.9301 379.23276 m
S
0 i
CM
701.42999 676.76721 m
728.92999 676.76721 l
728.92999 653.76721 l
701.42999 653.76721 l
h
701.42999 676.76721 m
f
0.60000002 i
1 0 0 -1 -532 1056 cm
1233.4301 379.23276 m
1260.9301 379.23276 l
1260.9301 402.23276 l
1233.4301 402.23276 l
h
1233.4301 379.23276 m
S
0 i
CM
747.92999 676.76721 m
775.42999 676.76721 l
775.42999 653.76721 l
747.92999 653.76721 l
h
747.92999 676.76721 m
f
0.60000002 i
1 0 0 -1 -532 1056 cm
1279.9301 379.23276 m
1307.4301 379.23276 l
1307.4301 402.23276 l
1279.9301 402.23276 l
h
1279.9301 379.23276 m
S
0 i
CM
793.64001 676.76721 m
821.14001 676.76721 l
821.14001 653.76721 l
793.64001 653.76721 l
h
793.64001 676.76721 m
f
0.60000002 i
1 0 0 -1 -532 1056 cm
1325.64 379.23276 m
1353.14 379.23276 l
1353.14 402.23276 l
1325.64 402.23276 l
h
1325.64 379.23276 m
S
0 i
CM
839.34998 676.76721 m
866.84998 676.76721 l
866.84998 653.76721 l
839.34998 653.76721 l
h
839.34998 676.76721 m
f
0.60000002 i
1 0 0 -1 -532 1056 cm
1371.35 379.23276 m
1398.85 379.23276 l
1398.85 402.23276 l
1371.35 402.23276 l
h
1371.35 379.23276 m
S
0 i
CM
884.94482 676.76721 m
912.44482 676.76721 l
912.44482 653.76721 l
884.94482 653.76721 l
h
884.94482 676.76721 m
f
0.60000002 i
1 0 0 -1 -532 1056 cm
1416.9448 379.23276 m
1444.4448 379.23276 l
1444.4448 402.23276 l
1416.9448 402.23276 l
h
1416.9448 379.23276 m
S
0 i
CM
931.44482 676.76721 m
958.94482 676.76721 l
958.94482 653.76721 l
931.44482 653.76721 l
h
931.44482 676.76721 m
f
0.60000002 i
1 0 0 -1 -532 1056 cm
1463.4448 379.23276 m
1490.9448 379.23276 l
1490.9448 402.23276 l
1463.4448 402.23276 l
h
1463.4448 379.23276 m
S
0 i
CM
977.15479 676.76721 m
1004.6548 676.76721 l
1004.6548 653.76721 l
977.15479 653.76721 l
h
977.15479 676.76721 m
f
0.60000002 i
1 0 0 -1 -532 1056 cm
1509.1548 379.23276 m
1536.6548 379.23276 l
1536.6548 402.23276 l
1509.1548 402.23276 l
h
1509.1548 379.23276 m
S
0 i
CM
1022.8648 676.76721 m
1050.3647 676.76721 l
1050.3647 653.76721 l
1022.8648 653.76721 l
h
1022.8648 676.76721 m
f
0.60000002 i
1 0 0 -1 -532 1056 cm
1554.8647 379.23276 m
1582.3647 379.23276 l
1582.3647 402.23276 l
1554.8647 402.23276 l
h
1554.8647 379.23276 m
S
0 i
CM
1068.5748 676.76721 m
1096.0748 676.76721 l
1096.0748 653.76721 l
1068.5748 653.76721 l
h
1068.5748 676.76721 m
f
0.60000002 i
1 0 0 -1 -532 1056 cm
1600.5748 379.23276 m
1628.0748 379.23276 l
1628.0748 402.23276 l
1600.5748 402.23276 l
h
1600.5748 379.23276 m
S
3 w
1027 506.24234 m
1650 506.24234 l
1650 543.24231 l
1027 543.24231 l
h
1027 506.24234 m
S
0 i
CM
516.5 542.03491 m
544 542.03491 l
544 519.03491 l
516.5 519.03491 l
h
516.5 542.03491 m
f
2 w
0.60000002 i
1 0 0 -1 -532 1056 cm
1048.5 513.96509 m
1076 513.96509 l
1076 536.96509 l
1048.5 536.96509 l
h
1048.5 513.96509 m
S
0 i
CM
563 542.03491 m
590.5 542.03491 l
590.5 519.03491 l
563 519.03491 l
h
563 542.03491 m
f
0.60000002 i
1 0 0 -1 -532 1056 cm
1095 513.96509 m
1122.5 513.96509 l
1122.5 536.96509 l
1095 536.96509 l
h
1095 513.96509 m
S
0 i
CM
608.71002 542.03491 m
636.21002 542.03491 l
636.21002 519.03491 l
608.71002 519.03491 l
h
608.71002 542.03491 m
f
0.60000002 i
1 0 0 -1 -532 1056 cm
1140.71 513.96509 m
1168.21 513.96509 l
1168.21 536.96509 l
1140.71 536.96509 l
h
1140.71 513.96509 m
S
0 i
CM
654.41998 542.03491 m
681.91998 542.03491 l
681.91998 519.03491 l
654.41998 519.03491 l
h
654.41998 542.03491 m
f
0.60000002 i
1 0 0 -1 -532 1056 cm
1186.42 513.96509 m
1213.92 513.96509 l
1213.92 536.96509 l
1186.42 536.96509 l
h
1186.42 513.96509 m
S
0 i
CM
700.91998 542.03491 m
728.41998 542.03491 l
728.41998 519.03491 l
700.91998 519.03491 l
h
700.91998 542.03491 m
f
0.60000002 i
1 0 0 -1 -532 1056 cm
1232.92 513.96509 m
1260.42 513.96509 l
1260.42 536.96509 l
1232.92 536.96509 l
h
1232.92 513.96509 m
S
0 i
CM
747.41998 542.03491 m
774.91998 542.03491 l
774.91998 519.03491 l
747.41998 519.03491 l
h
747.41998 542.03491 m
f
0.60000002 i
1 0 0 -1 -532 1056 cm
1279.42 513.96509 m
1306.92 513.96509 l
1306.92 536.96509 l
1279.42 536.96509 l
h
1279.42 513.96509 m
S
0 i
CM
793.13 542.03491 m
820.63 542.03491 l
820.63 519.03491 l
793.13 519.03491 l
h
793.13 542.03491 m
f
0.60000002 i
1 0 0 -1 -532 1056 cm
1325.13 513.96509 m
1352.63 513.96509 l
1352.63 536.96509 l
1325.13 536.96509 l
h
1325.13 513.96509 m
S
0 i
CM
838.84003 542.03491 m
866.34003 542.03491 l
866.34003 519.03491 l
838.84003 519.03491 l
h
838.84003 542.03491 m
f
0.60000002 i
1 0 0 -1 -532 1056 cm
1370.84 513.96509 m
1398.34 513.96509 l
1398.34 536.96509 l
1370.84 536.96509 l
h
1370.84 513.96509 m
S
0 i
CM
884.43481 542.03491 m
911.93481 542.03491 l
911.93481 519.03491 l
884.43481 519.03491 l
h
884.43481 542.03491 m
f
0.60000002 i
1 0 0 -1 -532 1056 cm
1416.4348 513.96509 m
1443.9348 513.96509 l
1443.9348 536.96509 l
1416.4348 536.96509 l
h
1416.4348 513.96509 m
S
0 i
CM
930.93481 542.03491 m
958.43481 542.03491 l
958.43481 519.03491 l
930.93481 519.03491 l
h
930.93481 542.03491 m
f
0.60000002 i
1 0 0 -1 -532 1056 cm
1462.9348 513.96509 m
1490.4348 513.96509 l
1490.4348 536.96509 l
1462.9348 536.96509 l
h
1462.9348 513.96509 m
S
0 i
CM
976.64478 542.03491 m
1004.1448 542.03491 l
1004.1448 519.03491 l
976.64478 519.03491 l
h
976.64478 542.03491 m
f
0.60000002 i
1 0 0 -1 -532 1056 cm
1508.6448 513.96509 m
1536.1448 513.96509 l
1536.1448 536.96509 l
1508.6448 536.96509 l
h
1508.6448 513.96509 m
S
0 i
CM
1022.3548 542.03491 m
1049.8549 542.03491 l
1049.8549 519.03491 l
1022.3548 519.03491 l
h
1022.3548 542.03491 m
f
0.60000002 i
1 0 0 -1 -532 1056 cm
1554.3549 513.96509 m
1581.8549 513.96509 l
1581.8549 536.96509 l
1554.3549 536.96509 l
h
1554.3549 513.96509 m
S
0 i
CM
1068.0648 542.03491 m
1095.5648 542.03491 l
1095.5648 519.03491 l
1068.0648 519.03491 l
h
1068.0648 542.03491 m
f
0.60000002 i
1 0 0 -1 -532 1056 cm
1600.0648 513.96509 m
1627.5648 513.96509 l
1627.5648 536.96509 l
1600.0648 536.96509 l
h
1600.0648 513.96509 m
S
3 w
1027.89 640.7619 m
1650.89 640.7619 l
1650.89 677.7619 l
1027.89 677.7619 l
h
1027.89 640.7619 m
S
0 i
CM
517.39001 407.51535 m
544.89001 407.51535 l
544.89001 384.51535 l
517.39001 384.51535 l
h
517.39001 407.51535 m
f
2 w
0.60000002 i
1 0 0 -1 -532 1056 cm
1049.39 648.48468 m
1076.89 648.48468 l
1076.89 671.48468 l
1049.39 671.48468 l
h
1049.39 648.48468 m
S
0 i
CM
563.89001 407.51535 m
591.39001 407.51535 l
591.39001 384.51535 l
563.89001 384.51535 l
h
563.89001 407.51535 m
f
0.60000002 i
1 0 0 -1 -532 1056 cm
1095.89 648.48468 m
1123.39 648.48468 l
1123.39 671.48468 l
1095.89 671.48468 l
h
1095.89 648.48468 m
S
0 i
CM
609.59998 407.51535 m
637.09998 407.51535 l
637.09998 384.51535 l
609.59998 384.51535 l
h
609.59998 407.51535 m
f
0.60000002 i
1 0 0 -1 -532 1056 cm
1141.6 648.48468 m
1169.1 648.48468 l
1169.1 671.48468 l
1141.6 671.48468 l
h
1141.6 648.48468 m
S
0 i
CM
655.31 407.51535 m
682.81 407.51535 l
682.81 384.51535 l
655.31 384.51535 l
h
655.31 407.51535 m
f
0.60000002 i
1 0 0 -1 -532 1056 cm
1187.3101 648.48468 m
1214.8101 648.48468 l
1214.8101 671.48468 l
1187.3101 671.48468 l
h
1187.3101 648.48468 m
S
0 i
CM
701.81 407.51535 m
729.31 407.51535 l
729.31 384.51535 l
701.81 384.51535 l
h
701.81 407.51535 m
f
0.60000002 i
1 0 0 -1 -532 1056 cm
1233.8101 648.48468 m
1261.3101 648.48468 l
1261.3101 671.48468 l
1233.8101 671.48468 l
h
1233.8101 648.48468 m
S
0 i
CM
748.31 407.51535 m
775.81 407.51535 l
775.81 384.51535 l
748.31 384.51535 l
h
748.31 407.51535 m
f
0.60000002 i
1 0 0 -1 -532 1056 cm
1280.3101 648.48468 m
1307.8101 648.48468 l
1307.8101 671.48468 l
1280.3101 671.48468 l
h
1280.3101 648.48468 m
S
0 i
CM
794.02002 407.51535 m
821.52002 407.51535 l
821.52002 384.51535 l
794.02002 384.51535 l
h
794.02002 407.51535 m
f
0.60000002 i
1 0 0 -1 -532 1056 cm
1326.02 648.48468 m
1353.52 648.48468 l
1353.52 671.48468 l
1326.02 671.48468 l
h
1326.02 648.48468 m
S
0 i
CM
839.72998 407.51535 m
867.22998 407.51535 l
867.22998 384.51535 l
839.72998 384.51535 l
h
839.72998 407.51535 m
f
0.60000002 i
1 0 0 -1 -532 1056 cm
1371.73 648.48468 m
1399.23 648.48468 l
1399.23 671.48468 l
1371.73 671.48468 l
h
1371.73 648.48468 m
S
0 i
CM
885.32483 407.51535 m
912.82483 407.51535 l
912.82483 384.51535 l
885.32483 384.51535 l
h
885.32483 407.51535 m
f
0.60000002 i
1 0 0 -1 -532 1056 cm
1417.3248 648.48468 m
1444.8248 648.48468 l
1444.8248 671.48468 l
1417.3248 671.48468 l
h
1417.3248 648.48468 m
S
0 i
CM
931.82483 407.51535 m
959.32483 407.51535 l
959.32483 384.51535 l
931.82483 384.51535 l
h
931.82483 407.51535 m
f
0.60000002 i
1 0 0 -1 -532 1056 cm
1463.8248 648.48468 m
1491.3248 648.48468 l
1491.3248 671.48468 l
1463.8248 671.48468 l
h
1463.8248 648.48468 m
S
0 i
CM
977.53479 407.51535 m
1005.0348 407.51535 l
1005.0348 384.51535 l
977.53479 384.51535 l
h
977.53479 407.51535 m
f
0.60000002 i
1 0 0 -1 -532 1056 cm
1509.5348 648.48468 m
1537.0348 648.48468 l
1537.0348 671.48468 l
1509.5348 671.48468 l
h
1509.5348 648.48468 m
S
0 i
CM
1023.2448 407.51535 m
1050.7448 407.51535 l
1050.7448 384.51535 l
1023.2448 384.51535 l
h
1023.2448 407.51535 m
f
0.60000002 i
1 0 0 -1 -532 1056 cm
1555.2448 648.48468 m
1582.7448 648.48468 l
1582.7448 671.48468 l
1555.2448 671.48468 l
h
1555.2448 648.48468 m
S
0 i
CM
1068.9548 407.51535 m
1096.4548 407.51535 l
1096.4548 384.51535 l
1068.9548 384.51535 l
h
1068.9548 407.51535 m
f
0.60000002 i
1 0 0 -1 -532 1056 cm
1600.9548 648.48468 m
1628.4548 648.48468 l
1628.4548 671.48468 l
1600.9548 671.48468 l
h
1600.9548 648.48468 m
S
3 w
1027 769.78149 m
1650 769.78149 l
1650 806.78149 l
1027 806.78149 l
h
1027 769.78149 m
S
0 i
CM
516.5 278.49576 m
544 278.49576 l
544 255.49576 l
516.5 255.49576 l
h
516.5 278.49576 m
f
2 w
0.60000002 i
1 0 0 -1 -532 1056 cm
1048.5 777.50421 m
1076 777.50421 l
1076 800.50421 l
1048.5 800.50421 l
h
1048.5 777.50421 m
S
0 i
CM
563 278.49576 m
590.5 278.49576 l
590.5 255.49576 l
563 255.49576 l
h
563 278.49576 m
f
0.60000002 i
1 0 0 -1 -532 1056 cm
1095 777.50421 m
1122.5 777.50421 l
1122.5 800.50421 l
1095 800.50421 l
h
1095 777.50421 m
S
0 i
CM
608.71002 278.49576 m
636.21002 278.49576 l
636.21002 255.49576 l
608.71002 255.49576 l
h
608.71002 278.49576 m
f
0.60000002 i
1 0 0 -1 -532 1056 cm
1140.71 777.50421 m
1168.21 777.50421 l
1168.21 800.50421 l
1140.71 800.50421 l
h
1140.71 777.50421 m
S
0 i
CM
654.41998 278.49576 m
681.91998 278.49576 l
681.91998 255.49576 l
654.41998 255.49576 l
h
654.41998 278.49576 m
f
0.60000002 i
1 0 0 -1 -532 1056 cm
1186.42 777.50421 m
1213.92 777.50421 l
1213.92 800.50421 l
1186.42 800.50421 l
h
1186.42 777.50421 m
S
0 i
CM
700.91998 278.49576 m
728.41998 278.49576 l
728.41998 255.49576 l
700.91998 255.49576 l
h
700.91998 278.49576 m
f
0.60000002 i
1 0 0 -1 -532 1056 cm
1232.92 777.50421 m
1260.42 777.50421 l
1260.42 800.50421 l
1232.92 800.50421 l
h
1232.92 777.50421 m
S
0 i
CM
747.41998 278.49576 m
774.91998 278.49576 l
774.91998 255.49576 l
747.41998 255.49576 l
h
747.41998 278.49576 m
f
0.60000002 i
1 0 0 -1 -532 1056 cm
1279.42 777.50421 m
1306.92 777.50421 l
1306.92 800.50421 l
1279.42 800.50421 l
h
1279.42 777.50421 m
S
0 i
CM
793.13 278.49576 m
820.63 278.49576 l
820.63 255.49576 l
793.13 255.49576 l
h
793.13 278.49576 m
f
0.60000002 i
1 0 0 -1 -532 1056 cm
1325.13 777.50421 m
1352.63 777.50421 l
1352.63 800.50421 l
1325.13 800.50421 l
h
1325.13 777.50421 m
S
0 i
CM
838.84003 278.49576 m
866.34003 278.49576 l
866.34003 255.49576 l
838.84003 255.49576 l
h
838.84003 278.49576 m
f
0.60000002 i
1 0 0 -1 -532 1056 cm
1370.84 777.50421 m
1398.34 777.50421 l
1398.34 800.50421 l
1370.84 800.50421 l
h
1370.84 777.50421 m
S
0 i
CM
884.43481 278.49576 m
911.93481 278.49576 l
911.93481 255.49576 l
884.43481 255.49576 l
h
884.43481 278.49576 m
f
0.60000002 i
1 0 0 -1 -532 1056 cm
1416.4348 777.50421 m
1443.9348 777.50421 l
1443.9348 800.50421 l
1416.4348 800.50421 l
h
1416.4348 777.50421 m
S
0 i
CM
930.93481 278.49576 m
958.43481 278.49576 l
958.43481 255.49576 l
930.93481 255.49576 l
h
930.93481 278.49576 m
f
0.60000002 i
1 0 0 -1 -532 1056 cm
1462.9348 777.50421 m
1490.4348 777.50421 l
1490.4348 800.50421 l
1462.9348 800.50421 l
h
1462.9348 777.50421 m
S
0 i
CM
976.64478 278.49576 m
1004.1448 278.49576 l
1004.1448 255.49576 l
976.64478 255.49576 l
h
976.64478 278.49576 m
f
0.60000002 i
1 0 0 -1 -532 1056 cm
1508.6448 777.50421 m
1536.1448 777.50421 l
1536.1448 800.50421 l
1508.6448 800.50421 l
h
1508.6448 777.50421 m
S
0 i
CM
1022.3548 278.49576 m
1049.8549 278.49576 l
1049.8549 255.49576 l
1022.3548 255.49576 l
h
1022.3548 278.49576 m
f
0.60000002 i
1 0 0 -1 -532 1056 cm
1554.3549 777.50421 m
1581.8549 777.50421 l
1581.8549 800.50421 l
1554.3549 800.50421 l
h
1554.3549 777.50421 m
S
0 i
CM
1068.0648 278.49576 m
1095.5648 278.49576 l
1095.5648 255.49576 l
1068.0648 255.49576 l
h
1068.0648 278.49576 m
f
0.60000002 i
1 0 0 -1 -532 1056 cm
1600.0648 777.50421 m
1627.5648 777.50421 l
1627.5648 800.50421 l
1600.0648 800.50421 l
h
1600.0648 777.50421 m
S
3 w
1027 910.01379 m
1650 910.01379 l
1650 947.01379 l
1027 947.01379 l
h
1027 910.01379 m
S
0 i
CM
516.5 138.26343 m
544 138.26343 l
544 115.26344 l
516.5 115.26344 l
h
516.5 138.26343 m
f
2 w
0.60000002 i
1 0 0 -1 -532 1056 cm
1048.5 917.73657 m
1076 917.73657 l
1076 940.73657 l
1048.5 940.73657 l
h
1048.5 917.73657 m
S
0 i
CM
563 138.26343 m
590.5 138.26343 l
590.5 115.26344 l
563 115.26344 l
h
563 138.26343 m
f
0.60000002 i
1 0 0 -1 -532 1056 cm
1095 917.73657 m
1122.5 917.73657 l
1122.5 940.73657 l
1095 940.73657 l
h
1095 917.73657 m
S
0 i
CM
608.71002 138.26343 m
636.21002 138.26343 l
636.21002 115.26344 l
608.71002 115.26344 l
h
608.71002 138.26343 m
f
0.60000002 i
1 0 0 -1 -532 1056 cm
1140.71 917.73657 m
1168.21 917.73657 l
1168.21 940.73657 l
1140.71 940.73657 l
h
1140.71 917.73657 m
S
0 i
CM
654.41998 138.26343 m
681.91998 138.26343 l
681.91998 115.26344 l
654.41998 115.26344 l
h
654.41998 138.26343 m
f
0.60000002 i
1 0 0 -1 -532 1056 cm
1186.42 917.73657 m
1213.92 917.73657 l
1213.92 940.73657 l
1186.42 940.73657 l
h
1186.42 917.73657 m
S
0 i
CM
700.91998 138.26343 m
728.41998 138.26343 l
728.41998 115.26344 l
700.91998 115.26344 l
h
700.91998 138.26343 m
f
0.60000002 i
1 0 0 -1 -532 1056 cm
1232.92 917.73657 m
1260.42 917.73657 l
1260.42 940.73657 l
1232.92 940.73657 l
h
1232.92 917.73657 m
S
0 i
CM
747.41998 138.26343 m
774.91998 138.26343 l
774.91998 115.26344 l
747.41998 115.26344 l
h
747.41998 138.26343 m
f
0.60000002 i
1 0 0 -1 -532 1056 cm
1279.42 917.73657 m
1306.92 917.73657 l
1306.92 940.73657 l
1279.42 940.73657 l
h
1279.42 917.73657 m
S
0 i
CM
793.13 138.26343 m
820.63 138.26343 l
820.63 115.26344 l
793.13 115.26344 l
h
793.13 138.26343 m
f
0.60000002 i
1 0 0 -1 -532 1056 cm
1325.13 917.73657 m
1352.63 917.73657 l
1352.63 940.73657 l
1325.13 940.73657 l
h
1325.13 917.73657 m
S
0 i
CM
838.84003 138.26343 m
866.34003 138.26343 l
866.34003 115.26344 l
838.84003 115.26344 l
h
838.84003 138.26343 m
f
0.60000002 i
1 0 0 -1 -532 1056 cm
1370.84 917.73657 m
1398.34 917.73657 l
1398.34 940.73657 l
1370.84 940.73657 l
h
1370.84 917.73657 m
S
0 i
CM
884.43481 138.26343 m
911.93481 138.26343 l
911.93481 115.26344 l
884.43481 115.26344 l
h
884.43481 138.26343 m
f
0.60000002 i
1 0 0 -1 -532 1056 cm
1416.4348 917.73657 m
1443.9348 917.73657 l
1443.9348 940.73657 l
1416.4348 940.73657 l
h
1416.4348 917.73657 m
S
0 i
CM
930.93481 138.26343 m
958.43481 138.26343 l
958.43481 115.26344 l
930.93481 115.26344 l
h
930.93481 138.26343 m
f
0.60000002 i
1 0 0 -1 -532 1056 cm
1462.9348 917.73657 m
1490.4348 917.73657 l
1490.4348 940.73657 l
1462.9348 940.73657 l
h
1462.9348 917.73657 m
S
0 i
CM
976.64478 138.26343 m
1004.1448 138.26343 l
1004.1448 115.26344 l
976.64478 115.26344 l
h
976.64478 138.26343 m
f
0.60000002 i
1 0 0 -1 -532 1056 cm
1508.6448 917.73657 m
1536.1448 917.73657 l
1536.1448 940.73657 l
1508.6448 940.73657 l
h
1508.6448 917.73657 m
S
0 i
CM
1022.3548 138.26343 m
1049.8549 138.26343 l
1049.8549 115.26344 l
1022.3548 115.26344 l
h
1022.3548 138.26343 m
f
0.60000002 i
1 0 0 -1 -532 1056 cm
1554.3549 917.73657 m
1581.8549 917.73657 l
1581.8549 940.73657 l
1554.3549 940.73657 l
h
1554.3549 917.73657 m
S
0 i
CM
1068.0648 138.26343 m
1095.5648 138.26343 l
1095.5648 115.26344 l
1068.0648 115.26344 l
h
1068.0648 138.26343 m
f
0.60000002 i
1 0 0 -1 -532 1056 cm
1600.0648 917.73657 m
1627.5648 917.73657 l
1627.5648 940.73657 l
1600.0648 940.73657 l
h
1600.0648 917.73657 m
S
0 i
CM
370 652.01721 m
370 678.51721 l
450 678.51721 l
450 691.76721 l
461 665.26721 l
450 638.76721 l
450 652.01721 l
h
370 652.01721 m
f
3 w
0.60000002 i
1 0 0 -1 -532 1056 cm
902 403.98276 m
902 377.48276 l
982 377.48276 l
982 364.23276 l
993 390.73276 l
982 417.23276 l
982 403.98276 l
h
902 403.98276 m
S
0 i
CM
370 518.00769 m
370 544.50769 l
450 544.50769 l
450 557.75769 l
461 531.25769 l
450 504.75766 l
450 518.00769 l
h
370 518.00769 m
f
0.60000002 i
1 0 0 -1 -532 1056 cm
902 537.99231 m
902 511.49234 l
982 511.49234 l
982 498.24234 l
993 524.74231 l
982 551.24231 l
982 537.99231 l
h
902 537.99231 m
S
0 i
CM
370 383.99811 m
370 410.49811 l
450 410.49811 l
450 423.74811 l
461 397.24811 l
450 370.74811 l
450 383.99811 l
h
370 383.99811 m
f
0.60000002 i
1 0 0 -1 -532 1056 cm
902 672.00189 m
902 645.50189 l
982 645.50189 l
982 632.25189 l
993 658.75189 l
982 685.25189 l
982 672.00189 l
h
902 672.00189 m
S
0 i
CM
370 254.46852 m
370 280.96854 l
450 280.96854 l
450 294.21854 l
461 267.71854 l
450 241.21852 l
450 254.46852 l
h
370 254.46852 m
f
0.60000002 i
1 0 0 -1 -532 1056 cm
902 801.53149 m
902 775.03149 l
982 775.03149 l
982 761.78149 l
993 788.28149 l
982 814.78149 l
982 801.53149 l
h
902 801.53149 m
S
0 i
CM
370 114.05105 m
370 140.55106 l
450 140.55106 l
450 153.80106 l
461 127.30105 l
450 100.80105 l
450 114.05105 l
h
370 114.05105 m
f
0.60000002 i
1 0 0 -1 -532 1056 cm
902 941.94897 m
902 915.44897 l
982 915.44897 l
982 902.19897 l
993 928.69897 l
982 955.19897 l
982 941.94897 l
h
902 941.94897 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 1427.6187 903.5 cm
-203.64751 -10.049957 m
($34?@20\(1=+'!2A1+0)[ 23.345000 24.500000 23.240000 23.555000 24.395000 23.415000 16.520000 24.535000 24.535000 10.675000 22.645000 11.900000 32.445000 23.415000 34.720000 24.535000 22.645000 0.000000 ] xS
-102.935 36 m
(39'>30*+0/)[ 24.500000 13.685000 11.900000 34.965000 24.500000 16.310000 23.345000 22.645000 16.205000 0.000000 ] xS
ep
end
%%Trailer
%%EOF

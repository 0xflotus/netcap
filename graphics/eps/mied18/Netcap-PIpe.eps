%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 1999.000000 794.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.14.1 (Build 18B75) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 1999 794
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 1999 794
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: Futura-Medium
%!FontType1-1.0: Futura-Medium 1.0000.1.0000
/FontInfo 1 dict dup begin
/FSType 6 def
end readonly def
14 dict begin/FontName /Futura-Medium def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /A put
dup 34 /t put
dup 35 /o put
dup 36 /m put
dup 37 /i put
dup 38 /c put
dup 39 /space put
dup 40 /W put
dup 41 /r put
dup 42 /e put
dup 43 /D put
dup 44 /l put
dup 45 /d put
dup 46 /G put
dup 47 /z put
dup 48 /p put
dup 49 /B put
dup 50 /u put
dup 51 /f put
dup 52 /F put
dup 53 /a put
dup 54 /k put
dup 55 /S put
dup 56 /y put
dup 57 /n put
dup 58 /h put
dup 59 /s put
dup 60 /b put
dup 61 /g put
dup 62 /colon put
dup 63 /four put
dup 64 /zero put
dup 65 /nine put
dup 66 /six put
dup 67 /O put
dup 68 /fi put
dup 69 /period put
dup 70 /T put
dup 71 /C put
dup 72 /P put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -1074 1 index div -591 2 index div 2707 3 index div 2164 5 -1 roll div]cvx def
/sfnts [<


16333237363534272623220706035CE2E285A8C884838382C5AB87FDEA4B4D757D4D4D4D4D7B744E4D0699F96766829295DFDA92938CFE8D8C585956598989595758590000020060FFE4040E03E9001B0023000001211617163332373637170E0323222726353437363332171615272623220E02070405FD460945456C54373645BE2C6270824CDA84848081D5D77D7CE82FB429483B2A0B01B278474628286C6A4B6B45208C8DE9E78F8D8988F183B4192F422A000100450000026C06B400180000011123112335331134373633321715272623220706151133150177E250504058A83C5B17492F3C1515F502FCFD0402FCD20178B84C6A23E60C252B2A78FEBFD2000000020060FDEC043C03E90021003100002514060706070623222726273316171633321135062322272635343736333217353303342726232207061514171633323736043C0908184684E7C37E8214E20D1E4686F786AFC77F807780D2B87AE1D84C4D78804A43434981814B45174569286E4F98696CBF48275B012F88899092DBD5959E896EFE178E55575F558785555D5E5500000001008E000003D40699001400001333113633321716151123113426232207061511238EE17891A56354E1535C76302FE10699FCE46C6B5DCCFDAB02407569494AB4FE290002006C0000019105F4000300110000011123110334363332171615140706232226016FE122563C3D2B2B2B2A3D3D5603CEFC3203CE01953B562B2A3D3D2B2B560000000001008E000003F90699000B0000011101210901210107112311016F013D012EFE5901C6FEDCFEBE24E10699FBFA013BFE67FDCB019B24FE890699000001008E0000016F06990003000001112311016FE10699F9670699000001008E000005C603E9002000001333153637363332173633201901231134272623220615112311102322061511238EE1412E314AA5606AB50149E22223505D55E2965F57E103CE5A4418199090FE71FDA6021D8C3A3B8C9BFE09021A01048E99FE09000001008E000003D503E900150000133315363332171615112311342726232207061511238EE27694AA5F52E2282767702F2EE203CE5A756B5BCEFDAB02209037384A49B6FE2A000000020060FFE4046F03E9000E001C0000133400333217161514070623222726371417163332363534272623220660012ED9DA98969798DDDB9494E64E5083849E4F508381A001EED301289595D9DB94939694DC925556AA8E8E5556AC0002008EFDEE046C03E90010001F00000123113315363332171615140706232227013427262322061514171633323736016FE1E185A9C982848382C6AB8702174C4D757C9A4D4C7C754C4EFDEE05E06A859493E0DB92918901748C5859AC8C89595758580001008E0000030B03E9000F00001333153637363332170726232219

00>] def
/CharStrings 43 dict dup begin
/.notdef 0 def
/space 1 def
/hyphen 2 def
/period 3 def
/zero 4 def
/four 5 def
/six 6 def
/nine 7 def
/colon 8 def
/A 9 def
/B 10 def
/C 11 def
/D 12 def
/F 13 def
/G 14 def
/O 15 def
/P 16 def
/S 17 def
/T 18 def
/W 19 def
/a 20 def
/b 21 def
/c 22 def
/d 23 def
/e 24 def
/f 25 def
/g 26 def
/h 27 def
/i 28 def
/k 29 def
/l 30 def
/m 31 def
/n 32 def
/o 33 def
/p 34 def
/r 35 def
/s 36 def
/t 37 def
/u 38 def
/y 39 def
/z 40 def
/fi 41 def
/hbar 42 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontInfo 1 dict dup begin
/FSType 6 def
end readonly def
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-1074 -591 2707 2164}def
/UniqueID 4208071 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C55AC8266BDD340E521355EEF85826934CAE169B3813170EF21157F980278DEA2CE475C6187CB4267A04435AB7CCB196A466EDED31699319305B4913DB428C1F94A0BD0621B41DEC2216CE6C1E3EBC36487BA48FFFC5F94B7C8705655675D4E21DD11D422EFC346F0840F70FCA808FD56424C244741A5EEC370A3276C5E050182153744A195066BD7AA429092A1D177FBAF786F0AF577C4D7E983BFDF2B7FE821BBBBAF2C47B5474634AFA10825B63ACFED17370D24B40B500A6168D2AE9DB62C0725F29223BCB5A376E55360333F18E0F205D535EA3B6CAE6F9DEB7ED075276F429AC6598042142534493975CE022181A749F0FE8652C5969962015E7456441ABBAE131E543DCB3B17D34C0F833F4E154CAF47D3600195CAF927932FAFC431FFCBBBA500B6C13669EF30C90557CC32E2F0895AFA5EFFCCE3EA89B8340284658765FDAED7A0009CBB49448EBDEE2497C1A923AB97E911B20BF4DE5206F311FE0D40C89908D0C632A77A26BC47E1BF7F5F3360EF5B70D56F3672C8821C5405C986B44EF09560CB143E5B09901DA12AB5C088FDE871662EE0F1059096C65139059D94BA1BFD19594CBBFCE3A7657E6E8CFD3BF0BDD48FED3D5E21985A48CA1C0EF48DB31A7BB94A1D15156C46C8334F88B8BD2A6E11DA109D044DCFCD55454B8934B43C250E77B393040A6BE1CE5B01E845FCB568CEBD5C087BF3AC003E5E96573759FC8C1EEF261CDCFD8318B5863A87ADFC58789DFCD29B9A6262BC7DE21A52C35DDA66530C0DAA59ED8E8448297F383B05466224B4C375990BA92748D0F99854F5B706E



E9C8801970126D6EED1D306CC5AFA93A0AD558D07D7B310F097C4CC5189C56AA644D85935F0E872A7FFE60098540DD7735D305EE1DB08A85B5E83D90F6AA35CA5F344F5300526E0DA98A576137DF19D27F443C1BE014FE3599B0DFB06B494E76B12B2CC565FFC6C963802A6861D5D0B932F0DAF63E38C66B4D942113649AA8B2C0BBFEB84630801486C07D04ACA8B62CCC94A02A5BC5D7606FA03DE8284FA9F1B2497FCF5BFB873411F34B0FFF1B2D7FC239A0094C6D55F14DA65175640C86B077324233B3973F06B37DBC67719586C9E4B80A13D4367A4E8F87D14BD2202DE102EABDD3D9C3A7DD23AD9C86A31EA892B445BD5AA8BF2D2E5C28A14CBBE5BBB8D0E9744813CF83A28E2FC037ED7806D878F3575F5A3C6495DE043E1C1BBF034A83E6D1C303681C19DCF742DF5DCEDF5B17D0311AD50D932607106B43D5F2D576E0D453320B16FC089ECCCD92DA559F4B522123474DF342C7544B5BF0BBC3134ABDA509A0D995D8677D16E868C8CAB0C5D4EB7246B475D98271C1C1BBB0A3C722ADA0BB7B3BE05E353C06F30AF31D49A49E46DD9FA4139BC4FF16652DA62FBF3C9AED9A3E7DD2C3DA55624BB70BCD397EBDD882BFBD538A6664199A85DE5F81DF6B392AE1110417B8AFFB22A010D40D2887D30AF1487CB687EB7D32598E4E5AF489CC308497126C42E2DDDC62DAA935010E9D8CC213E1BBFA085DD62FE1A554BE870860B0552D00ACFC0002211697A37DA871C2610A8A06BDABDA9A31B8A9FD2026A6B2EE06FED3EB3A255FD56136F61760048D5D61744714E729C554C6637E66ECD5D99192D51437C9386FEC3AAE5468763DA64EE6D491F770827B87D100C5128DEB616375A790AF20638A2564E89B1B986AF87911AFE5FA273C107AEC71CA56BAEE61F649FF782E34A1839E32BA74304021BD9D91775A44562DFA6C643BD1504C64A013B43628522C9226F1C22C81FDAD5C7DDAE616D7F9EE49A02A282770F123FDFBCB535BBBA492EEAE88597148C2BFB4EB24D10BD3B26AF7503332A99684D4111BAC43BEDB19104B1DC0EFC036EEDA1176845FC27A6F63B9CA2E4FB035EB8B32EDE38E0325641E0993F9E0719F31C3DD30AC6BE653192CAB5A7BABDC55853C5AF937C86AC13B8AA3D9E9A98F8864C5DF7721726838CAE088D8163058F0435A104D1394D4A806D7BA584D1A13DB0145AB92750B56D59900AAE65364ADC2C1EB6F6F56EA12134BD85A52A574E19C4362B89B4250F0434A15A1B0CC04992044D33322AF618E53FD8F9F2987708316B680DA39877F37A656954B6211D592F47008DB0449658ACB41BE82C5ADA14347A2BBCB106B694C97E9C4B9A0AAD59E8F1A6239376165AC746E942B346F2826BBC86D850DFBD4576FE63AF5DACD2B9B91FFC7D5180532CD809D528C52DE84F99E0D6F11A2F07127D40044E083B82D1B8B1F

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/Futura-Medium cguidfix
/F1.1/Futura-Medium renmfont
%RBIBeginFontSubset: Futura-Bold
%!FontType1-1.0: Futura-Bold 1.0000.2.0010
/FontInfo 1 dict dup begin
/FSType 8 def
end readonly def
14 dict begin/FontName /Futura-Bold def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /N put
dup 34 /E put
dup 35 /T put
dup 36 /C put
dup 37 /A put
dup 38 /P put
dup 39 /space put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -227 1 index div -344 2 index div 1459 3 index div 1099 5 -1 roll div]cvx def
/sfnts [<

00>] def
/CharStrings 9 dict dup begin
/.notdef 0 def
/space 1 def
/A 2 def
/C 3 def
/E 4 def
/N 5 def
/P 6 def
/T 7 def
/anoteleia 8 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontInfo 1 dict dup begin
/FSType 8 def
end readonly def
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-227 -344 1459 1099}def
/UniqueID 4364665 def
currentdict currentfile eexec

1E3C5F7118D5EA01C705581413E1D025E1AEB03D6874A15291A8D9E6F7DD9467435B60BCED1B1514C6EB00D7E68EF0A64310486A6AF6BD3EB1BCF7686924DCA2531502CCD305F1E84C6122D7E5189F1AF36DAC1E1494474217BDDA0254A2279D8021D50B0246D3BC1503F62BA43F4CA56A882DE2A279A037F5FDFD3347F60D80C3E618A11EDCE392F6AA06235340ABDA60F1377E5B0382D37735870B5C08B78AFD5154606D3E078434F75594910B2ABA00166AD72C8E1433A3C30A0B256E53BF790DA063887138DDB1F75FE265BEAFE9743D5A313AE7E2431BA622735D9F4A41D16A010E7D958DE7B7B1290A0A84546E782BD299808D2F4D2F89EA58D98617CE19B16D9E900EA051C45144C36C5847D0D6B65B7B3E10D63ED384463547AF4F1EBD79EAF1544109435B5EF31A02890D345892E08CFF0914A12FEEA9ADA3010ED0
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/Futura-Bold cguidfix
/F2.1/Futura-Bold renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
 exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 1 1 sc
q
0 0 1999 794 rc
375.5 491 m
573.08093 491 l
573.08093 400.03915 l
375.5 400.03915 l
h
375.5 491 m
f
Q
10 w
1 J
1 j
0.60000002 i
0 0 0 sc
q
275.5 591 m
673.08093 591 l
673.08093 300.03915 l
275.5 300.03915 l
h
375.5 491 m
573.08093 491 l
573.08093 400.03915 l
375.5 400.03915 l
h
375.5 491 m
W*
0 0 1999 794 rc
1 0 0 -1 -604 1997 cm
979.5 1506 m
1177.0809 1506 l
1177.0809 1596.9608 l
979.5 1596.9608 l
h
979.5 1506 m
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 1999 794 rc
1 0 0 -1 474.29047 445.51956 cm
/F1.1[ 25 0 0 -25 0 0]sf
-79.034424 9.6276855 m
(!"#$%&'\(\)%"*\))[ 18.798828 7.006836 15.026855 19.775391 6.225586 11.914062 7.714844 25.415039 9.729004 6.225586 7.055664 13.830566 0.000000 ] xS
5 w
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -604 1997 cm
1182.0809 1551.4805 m
1307.8297 1551.4805 l
S
0 i
CM
718.2298 445.51956 m
703.82977 450.91959 l
703.82977 440.11957 l
h
718.2298 445.51956 m
f
0 J
0 j
1 0 0 -1 -604 1997 cm
1322.2297 1551.4805 m
1307.8297 1546.0804 l
1307.8297 1556.8804 l
h
1322.2297 1551.4805 m
S
1 1 1 sc
CM
730.7298 491 m
928.31067 491 l
928.31067 400.03915 l
730.7298 400.03915 l
h
730.7298 491 m
f
Q
0.60000002 i
/Cs1 SC
0 0 0 sc
q
630.7298 591 m
1028.3107 591 l
1028.3107 300.03915 l
630.7298 300.03915 l
h
730.7298 491 m
928.31067 491 l
928.31067 400.03915 l
730.7298 400.03915 l
h
730.7298 491 m
W*
0 0 1999 794 rc
1 0 0 -1 -604 1997 cm
1334.7297 1506 m
1532.3107 1506 l
1532.3107 1596.9608 l
1334.7297 1596.9608 l
h
1334.7297 1506 m
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 1999 794 rc
1 0 0 -1 829.5202 445.51956 cm
/F1.1[ 25 0 0 -25 0 0]sf
-92.816162 9.6276855 m
(+*,%$%"*-'\(\)%"*\))[ 18.151855 13.830566 6.225586 6.225586 19.775391 6.225586 7.055664 13.830566 14.990234 7.714844 25.415039 9.729004 6.225586 7.055664 13.830566 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
1085.9596 491 m
1283.5404 491 l
1283.5404 400.03915 l
1085.9596 400.03915 l
h
1085.9596 491 m
f
Q
0.60000002 i
/Cs1 SC
0 0 0 sc
q
985.95953 591 m
1383.5404 591 l
1383.5404 300.03915 l
985.95953 300.03915 l
h
1085.9596 491 m
1283.5404 491 l
1283.5404 400.03915 l
1085.9596 400.03915 l
h
1085.9596 491 m
W*
0 0 1999 794 rc
1 0 0 -1 -604 1997 cm
1689.9596 1506 m
1887.5404 1506 l
1887.5404 1596.9608 l
1689.9596 1596.9608 l
h
1689.9596 1506 m
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 1999 794 rc
1 0 0 -1 1184.75 445.51956 cm
/F1.1[ 25 0 0 -25 0 0]sf
-27.929688 9.6276855 m
(./%0)[ 21.057129 13.586426 6.225586 0.000000 ] xS
5 w
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -604 1997 cm
1537.3107 1551.4805 m
1663.0596 1551.4805 l
S
0 i
CM
1073.4596 445.51956 m
1059.0596 450.91959 l
1059.0596 440.11957 l
h
1073.4596 445.51956 m
f
0 J
0 j
1 0 0 -1 -604 1997 cm
1677.4596 1551.4805 m
1663.0596 1546.0804 l
1663.0596 1556.8804 l
h
1677.4596 1551.4805 m
S
1 1 1 sc
CM
1441.1893 491 m
1638.7703 491 l
1638.7703 400.03915 l
1441.1893 400.03915 l
h
1441.1893 491 m
f
Q
0.60000002 i
/Cs1 SC
0 0 0 sc
q
1341.1893 591 m
1738.7703 591 l
1738.7703 300.03915 l
1341.1893 300.03915 l
h
1441.1893 491 m
1638.7703 491 l
1638.7703 400.03915 l
1441.1893 400.03915 l
h
1441.1893 491 m
W*
0 0 1999 794 rc
1 0 0 -1 -604 1997 cm
2045.1893 1506 m
2242.7703 1506 l
2242.7703 1596.9608 l
2045.1893 1596.9608 l
h
2045.1893 1506 m
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 1999 794 rc
1 0 0 -1 1539.9797 445.51956 cm
/F1.1[ 25 0 0 -25 0 0]sf
-33.81958 9.6276855 m
(1233*\))[ 14.782715 13.623047 8.251953 7.800293 13.830566 0.000000 ] xS
5 w
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -604 1997 cm
1892.5404 1551.4805 m
2018.2893 1551.4805 l
S
0 i
CM
1428.6893 445.51956 m
1414.2893 450.91959 l
1414.2893 440.11957 l
h
1428.6893 445.51956 m
f
0 J
0 j
1 0 0 -1 -604 1997 cm
2032.6893 1551.4805 m
2018.2893 1546.0804 l
2018.2893 1556.8804 l
h
2032.6893 1551.4805 m
S
1 1 1 sc
CM
1796.4191 491 m
1994 491 l
1994 400.03915 l
1796.4191 400.03915 l
h
1796.4191 491 m
f
Q
0.60000002 i
/Cs1 SC
0 0 0 sc
q
1696.4191 591 m
2094 591 l
2094 300.03915 l
1696.4191 300.03915 l
h
1796.4191 491 m
1994 491 l
1994 400.03915 l
1796.4191 400.03915 l
h
1796.4191 491 m
W*
0 0 1999 794 rc
1 0 0 -1 -604 1997 cm
2400.4192 1506 m
2598 1506 l
2598 1596.9608 l
2400.4192 1596.9608 l
h
2400.4192 1506 m
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 1999 794 rc
1 0 0 -1 1895.2096 445.51956 cm
/F1.1[ 25 0 0 -25 0 0]sf
-19.519043 9.6276855 m
(4%,*)[ 12.756348 6.225586 6.225586 0.000000 ] xS
5 w
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -604 1997 cm
2247.7703 1551.4805 m
2373.519 1551.4805 l
S
0 i
CM
1783.9191 445.51956 m
1769.519 450.91959 l
1769.519 440.11957 l
h
1783.9191 445.51956 m
f
0 J
0 j
1 0 0 -1 -604 1997 cm
2387.9192 1551.4805 m
2373.519 1546.0804 l
2373.519 1556.8804 l
h
2387.9192 1551.4805 m
S
/Cs2 SC
0 sc
1 0 0 -1 1119.7297 717.98041 cm
/F2.1[ 99 0 0 -99 0 0]sf
-383.66913 37.01506 m
(!"#$%&')[ 90.189000 56.430000 52.173000 67.815000 79.398000 67.122000 0.000000 ] xS
/F1.1[ 73 0 0 -73 0 0]sf
63.117867 37.01506 m
(-5"5'0%0*)[ 43.771484 43.771484 20.602539 43.771484 22.527344 43.771484 18.178711 43.771484 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
10 347.98044 m
248.63632 347.98044 l
248.63632 257.01956 l
10 257.01956 l
h
10 347.98044 m
f
Q
0.60000002 i
/Cs1 SC
0 0 0 sc
q
-90 447.98044 m
348.63632 447.98044 l
348.63632 157.01958 l
-90 157.01958 l
h
10 347.98044 m
248.63632 347.98044 l
248.63632 257.01956 l
10 257.01956 l
h
10 347.98044 m
W*
0 0 1999 794 rc
1 0 0 -1 -604 1997 cm
614 1649.0195 m
852.63635 1649.0195 l
852.63635 1739.9805 l
614 1739.9805 l
h
614 1649.0195 m
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 1999 794 rc
1 0 0 -1 129.31816 302.5 cm
/F1.1[ 25 0 0 -25 0 0]sf
-42.474365 9.6276855 m
(\(#\)6*\))[ 24.963379 15.026855 9.729004 12.048340 13.830566 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
5 200.98042 m
243.63632 200.98042 l
243.63632 110.01957 l
5 110.01957 l
h
5 200.98042 m
f
Q
0.60000002 i
/Cs1 SC
0 0 0 sc
q
-95 300.98044 m
343.63632 300.98044 l
343.63632 10.019573 l
-95 10.019573 l
h
5 200.98042 m
243.63632 200.98042 l
243.63632 110.01957 l
5 110.01957 l
h
5 200.98042 m
W*
0 0 1999 794 rc
1 0 0 -1 -604 1997 cm
609 1796.0195 m
847.63635 1796.0195 l
847.63635 1886.9805 l
609 1886.9805 l
h
609 1796.0195 m
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 1999 794 rc
1 0 0 -1 124.31816 155.5 cm
/F1.1[ 25 0 0 -25 0 0]sf
-42.474365 9.6276855 m
(\(#\)6*\))[ 24.963379 15.026855 9.729004 12.048340 13.830566 0.000000 ] xS
5 w
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -604 1997 cm
856 1251 m
933.01788 1251 l
933.01788 1551.4805 l
952.59998 1551.4805 l
S
0 i
CM
363 445.51956 m
348.60001 450.91959 l
348.60001 440.11957 l
h
363 445.51956 m
f
0 J
0 j
1 0 0 -1 -604 1997 cm
967 1551.4805 m
952.59998 1546.0804 l
952.59998 1556.8804 l
h
967 1551.4805 m
S
1 J
1 j
0.60000002 i
857.63635 1551.4805 m
933.41553 1551.4805 l
933.41553 1547.7987 l
933.01788 1547.7987 l
933.01788 1552.0784 l
S
856 1399 m
856 1401.0442 l
933.01788 1401.0442 l
S
852 1845 m
932.14069 1845 l
932.14069 1846.2161 l
933.01788 1846.2161 l
933.01788 1544.9565 l
S
857.63635 1694.5 m
932.54926 1694.5 l
932.54926 1690.4517 l
933.01788 1690.4517 l
933.01788 1687.1208 l
S
0 i
1 1 1 sc
CM
10 491 m
248.63632 491 l
248.63632 400.03915 l
10 400.03915 l
h
10 491 m
f
Q
0.60000002 i
/Cs1 SC
0 0 0 sc
q
-90 591 m
348.63632 591 l
348.63632 300.03915 l
-90 300.03915 l
h
10 491 m
248.63632 491 l
248.63632 400.03915 l
10 400.03915 l
h
10 491 m
W*
0 0 1999 794 rc
1 0 0 -1 -604 1997 cm
614 1506 m
852.63635 1506 l
852.63635 1596.9608 l
614 1596.9608 l
h
614 1506 m
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 1999 794 rc
1 0 0 -1 129.31816 445.51956 cm
/F1.1[ 25 0 0 -25 0 0]sf
-42.474365 9.6276855 m
(\(#\)6*\))[ 24.963379 15.026855 9.729004 12.048340 13.830566 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
10 641.98041 m
248.63632 641.98041 l
248.63632 551.01959 l
10 551.01959 l
h
10 641.98041 m
f
Q
0.60000002 i
/Cs1 SC
0 0 0 sc
q
-90 741.98041 m
348.63632 741.98041 l
348.63632 451.01956 l
-90 451.01956 l
h
10 641.98041 m
248.63632 641.98041 l
248.63632 551.01959 l
10 551.01959 l
h
10 641.98041 m
W*
0 0 1999 794 rc
1 0 0 -1 -604 1997 cm
614 1355.0195 m
852.63635 1355.0195 l
852.63635 1445.9805 l
614 1445.9805 l
h
614 1355.0195 m
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 1999 794 rc
1 0 0 -1 129.31816 596.5 cm
/F1.1[ 25 0 0 -25 0 0]sf
-42.474365 9.6276855 m
(\(#\)6*\))[ 24.963379 15.026855 9.729004 12.048340 13.830566 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
10 788.98041 m
248.63632 788.98041 l
248.63632 698.01959 l
10 698.01959 l
h
10 788.98041 m
f
Q
0.60000002 i
/Cs1 SC
0 0 0 sc
q
-90 888.98041 m
348.63632 888.98041 l
348.63632 598.01959 l
-90 598.01959 l
h
10 788.98041 m
248.63632 788.98041 l
248.63632 698.01959 l
10 698.01959 l
h
10 788.98041 m
W*
0 0 1999 794 rc
1 0 0 -1 -604 1997 cm
614 1208.0195 m
852.63635 1208.0195 l
852.63635 1298.9805 l
614 1298.9805 l
h
614 1208.0195 m
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 1999 794 rc
1 0 0 -1 129.31816 743.5 cm
/F1.1[ 25 0 0 -25 0 0]sf
-42.474365 9.6276855 m
(\(#\)6*\))[ 24.963379 15.026855 9.729004 12.048340 13.830566 0.000000 ] xS
1 0 0 -1 474.29047 311.98044 cm
/F1.1[ 23 0 0 -23 0 0]sf
-83.998291 -6.6850586 m
(789&:\)#9%/5"%#9')[ 13.409180 12.499512 12.611816 11.556152 12.611816 8.400391 13.824707 12.611816 5.727539 12.499512 13.791016 6.289062 5.727539 13.824707 12.611816 0.000000 ] xS
-110.37305 24 m
(3#\)'&#9&2\)\)*9"'5&&*;;)[ 7.108887 13.824707 8.602539 7.097656 10.960938 13.824707 12.611816 10.960938 12.533203 8.950684 8.445312 12.724121 12.611816 6.289062 7.097656 13.791016 10.960938 10.960938 12.724121 9.332520 0.000000 ] xS
1 0 0 -1 829.5202 311.98044 cm
-48.903076 -6.6850586 m
(+*,%$%"*-')[ 16.699707 12.724121 5.727539 5.727539 18.193359 5.727539 6.491211 12.724121 13.791016 0.000000 ] xS
-87.0979 24 m
(0\)#"#<23'\)*&#\)-;)[ 13.791016 8.400391 13.959473 6.446289 13.824707 13.791016 12.533203 6.828125 7.097656 8.445312 12.724121 10.960938 13.824707 8.445312 13.791016 0.000000 ] xS
1 0 0 -1 1184.75 311.98044 cm
-25.695312 -6.6850586 m
(./%0')[ 19.372559 12.499512 5.727539 13.791016 0.000000 ] xS
-64.524658 24 m
(&#$0\)*;;%#9)[ 10.960938 13.824707 18.474121 13.791016 8.445312 12.724121 9.332520 9.332520 5.727539 13.824707 0.000000 ] xS
1 0 0 -1 1539.9797 311.98044 cm
-135.16431 -6.6850586 m
(+5"5'<233*\)%9='%9'$*$#\)8)[ 16.699707 13.791016 6.491211 13.791016 7.097656 13.791016 12.533203 7.591797 7.176270 12.724121 8.950684 5.727539 12.611816 13.768555 7.097656 5.727539 12.611816 7.097656 18.193359 12.724121 18.193359 13.824707 9.613281 0.000000 ] xS
-102.65771 24 m
(-*352,">'?@AB'<8"*;)[ 13.791016 12.724121 7.176270 13.791016 12.533203 5.727539 7.075195 7.097656 7.097656 14.195312 14.195312 14.195312 14.195312 7.097656 13.375488 12.499512 6.491211 12.724121 0.000000 ] xS
1 0 0 -1 1895.2096 311.98044 cm
-54.87207 -6.6850586 m
(C2"02"'D,*)[ 20.551758 12.533203 6.289062 13.791016 12.533203 6.289062 7.097656 12.207520 5.727539 0.000000 ] xS
-88.232178 24 m
(*E=>'FGHE9&50E=/)[ 12.724121 7.097656 13.768555 7.097656 7.097656 10.478027 16.115723 10.466797 7.097656 12.611816 10.960938 13.791016 13.791016 7.097656 13.768555 0.000000 ] xS
1 0 0 -1 129.31816 36 cm
-83.346924 -6.6850586 m
(\(#\)6*\)'\)#2"%9*;)[ 22.966309 13.824707 8.950684 11.084473 12.724121 8.602539 7.097656 8.400391 13.824707 12.533203 6.289062 5.727539 12.611816 12.724121 0.000000 ] xS
-99.726562 24 m
(3#\)'-*&#-%9='"\)53D&)[ 7.108887 13.824707 8.602539 7.097656 13.791016 12.724121 10.960938 13.824707 13.791016 5.727539 12.611816 13.768555 7.097656 6.289062 8.445312 13.791016 6.828125 12.207520 0.000000 ] xS
ep
end
%%Trailer
%%EOF

%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 1325.000000 1037.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.14.1 (Build 18B75) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 1325 1037
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 1325 1037
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: Futura-Medium
%!FontType1-1.0: Futura-Medium 1.0000.1.0000
/FontInfo 1 dict dup begin
/FSType 6 def
end readonly def
14 dict begin/FontName /Futura-Medium def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /A put
dup 34 /t put
dup 35 /o put
dup 36 /m put
dup 37 /i put
dup 38 /c put
dup 39 /space put
dup 40 /W put
dup 41 /r put
dup 42 /e put
dup 43 /D put
dup 44 /l put
dup 45 /d put
dup 46 /s put
dup 47 /n put
dup 48 /a put
dup 49 /p put
dup 50 /k put
dup 51 /C put
dup 52 /h put
dup 53 /b put
dup 54 /u put
dup 55 /f put
dup 56 /S put
dup 57 /y put
dup 58 /z put
dup 59 /v put
dup 60 /g put
dup 61 /fi put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -1074 1 index div -591 2 index div 2707 3 index div 2164 5 -1 roll div]cvx def
/sfnts [<

E285A8C884838382C5AB87FDEA4B4D757D4D4D4D4D7B744E4D0699F96766829295DFDA92938CFE8D8C585956598989595758590000020060FFE4040E03E9001B0023000001211617163332373637170E0323222726353437363332171615272623220E02070405FD460945456C54373645BE2C6270824CDA84848081D5D77D7CE82FB429483B2A0B01B278474628286C6A4B6B45208C8DE9E78F8D8988F183B4192F422A000100450000026C06B400180000011123112335331134373633321715272623220706151133150177E250504058A83C5B17492F3C1515F502FCFD0402FCD20178B84C6A23E60C252B2A78FEBFD2000000020060FDEC043C03E90021003100002514060706070623222726273316171633321135062322272635343736333217353303342726232207061514171633323736043C0908184684E7C37E8214E20D1E4686F786AFC77F807780D2B87AE1D84C4D78804A43434981814B45174569286E4F98696CBF48275B012F88899092DBD5959E896EFE178E55575F558785555D5E5500000001008E000003D40699001400001333113633321716151123113426232207061511238EE17891A56354E1535C76302FE10699FCE46C6B5DCCFDAB02407569494AB4FE290002006C0000019105F4000300110000011123110334363332171615140706232226016FE122563C3D2B2B2B2A3D3D5603CEFC3203CE01953B562B2A3D3D2B2B560000000001008E000003F90699000B0000011101210901210107112311016F013D012EFE5901C6FEDCFEBE24E10699FBFA013BFE67FDCB019B24FE890699000001008E0000016F06990003000001112311016FE10699F9670699000001008E000005C603E9002000001333153637363332173633201901231134272623220615112311102322061511238EE1412E314AA5606AB50149E22223505D55E2965F57E103CE5A4418199090FE71FDA6021D8C3A3B8C9BFE09021A01048E99FE09000001008E000003D503E900150000133315363332171615112311342726232207061511238EE27694AA5F52E2282767702F2EE203CE5A756B5BCEFDAB02209037384A49B6FE2A000000020060FFE4046F03E9000E001C0000133400333217161514070623222726371417163332363534272623220660012ED9DA98969798DDDB9494E64E5083849E4F508381A001EED301289595D9DB94939694DC925556AA8E8E5556AC0002008EFDEE046C03E90010001F00000123113315363332171615140706232227013427262322061514171633323736016FE1E185A9C982848382C6AB8702174C4D757C9A4D4C7C754C4EFDEE05E06A859493E0DB92918901748C5859AC8C89595758580001008E0000030B03E9000F0000133315363736333217072623221901238EE13E303143596167403DB8E103
CE574118193ACE2EFEEAFE070001004CFFE4030303E9002600000107262322061514171E01151407062322273716171633323534272E012726272635343736333202C4BA2C411F2C82B37C68658FF566C028152939725822442362283357597FBB0328635A292038374D826E8D5F5AEF59461326683C3411201130303D607F535300000000010035000002250533000B00000111231123353311331133150176E16060E1AF02FCFD0402FCD20165FE9BD20000000001008EFFE403CE03CE0015000001111433323511331114070607062322272627263511016FBFBFE11D1C4572B0AF72461D1C03CEFDD1F2F2022FFDCC75554C3D63633D4C448602340000000001000BFFBD03FB03CE00050000011B013309010107FCFBFDFE06FE0A03CEFDDD0223FBEF0411000001000BFDEE044E03CE00070000250121090133012101C1FE4A0105012A0116FEFCF8FEFFB50319FDD00230FA200000000100130000044703CE00070000252115210121352101D10243FBFF0277FE0F03AED4D402FCD20000020045000003B006B7001D002100000123353427262322070615112115211123112335331134373633321716151123113303B0E130334A4932310102FEFEE150507475A5A47475E1E104CF5B4A383938374CFEA4D2FD0402FCD2015CA474757574A4FAD603CE00FFFF0023000003D406990226000F000000070002002302E70001000000010000CA632CC75F0F3CF5012B080000000000BFEE600000000000D55E226FFBCEFDB10A93087400000009000200000000000000010000084FFDEC003D0AE0FBCEFECB0A93000100000000000000000000000000000020040000C80278000001BE000005ED0008059B006C05CF00B904AA006C087C000804CC006004CC008E03D0006004CC0060046D00600260004504CA00600463008E01FE006C03FC008E01FE008E0654008E0463008E04CF006004CC008E02FE008E033F004C02300035045C008E0405000B0459000B04590013043F0045046300230000001400140022003E006E009C00E200FE01320166019401C8020002280272029402B602D402E2031403380366039803B403F00408042E0442045A046E04A204AE0000000100000020005D00070043000400010000000000000000000000000002000100000000
00>] def
/CharStrings 32 dict dup begin
/.notdef 0 def
/space 1 def
/hyphen 2 def
/A 3 def
/C 4 def
/D 5 def
/S 6 def
/W 7 def
/a 8 def
/b 9 def
/c 10 def
/d 11 def
/e 12 def
/f 13 def
/g 14 def
/h 15 def
/i 16 def
/k 17 def
/l 18 def
/m 19 def
/n 20 def
/o 21 def
/p 22 def
/r 23 def
/s 24 def
/t 25 def
/u 26 def
/v 27 def
/y 28 def
/z 29 def
/fi 30 def
/hbar 31 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontInfo 1 dict dup begin
/FSType 6 def
end readonly def
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-1074 -591 2707 2164}def
/UniqueID 4208071 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C55AC8266BDD340E521355EEF85826934CAE169B3813170EF21157F980278DEA2CE475C6187CB4267A04435AB7CCB196A466EDED31699319305B4913DB428C1F94A0BD0621B41DEC2216CE6C1E3EBC36487BA48FFFC5F94B7C8705655675D4E21DD11D422EFC346F0840F70FCA808FD56424C244741A5EEC370A3276C5E050182153744A195066BD7AA429092A1D177FBAF786F0AF577C4D7E983BFDF2B7FE821BBBBAF2C47B5474634D061FEC31BED2484C540143F283177F22CB8EBBEB82A37E0E7B0EAF771D8015B81814D33182A0C529223E7FF43895047C5F7F3D26BC25A6D456BCC625CCCAF3F716F94A3397083BA5E44C45FE514609FBDD69A89AB6FA34064EEC4BDD22E7AC4EAF1F596DA9130A07D883EE68134B44152A9FFE044AA09808FE3EBC9D10FA5B0925FC25AB181DD3A67CA7DF0CA6D4884D3C773AFF8C32B84ADAAF495BD7102CDE82BF5ED8E8E1FEE99D69B015F80E62AEC59FA3E34B425A69C54365168A9049438357D4E99749E3246DF4039A919CD7A5929F2FBFD4FDBC2CB32F787DDDF9B80036DBCCC58E6C4AFDD4C7227B6CA9528156EDDE55CAE29558E1262183CD3C70F283F52664EE0CC4FDE7180388B4C5181C9D351EE05CA9F47E584E4A7F9ACAFBD3CD7A78D99DEDDAEE4F5595C7CB960793264565B36B08A8FEFC8E69BE1D52530DB4D8BE7821AE2CB00F6C7EF82878A0778BF8543B84A6A50F831277491028E9A9B95F4845D1168CE69E626CB448007C578181DB281FFF205599987E4517E2638F57E22966229D1114736F5A4C9E3749859C48AE0BA018819E9596
C3855E3562D7CBBE584D668889C282B2ADD9DF129E7A874F1B5D992EC516DFFF964E1C421269DFBA22D69DA4ADE0121B929B19146A3232D073E241FAA1E82BBB1396D71B59AAD661F054198754C28258FCECC9EF532FCF93692757919923AE7207F7C85A409788DB343C9B3BBFB35E24498F78A1300ACE907FA08A81464103659FBEE5467E1D2715918A992F789461489CACCA6A03842527ACC0668E6EA290DFE21DA7624C38364A46C0C0F8A2D9099926B89EC00EB648DC49BC57F01D7DE293995C40A4EB41BD3EFA2EA7654E047DB2128322BF9ABF5B7730B130CB93A34B254127769A9A7FDA62DD2D5CEE393390890635A135F88A36F9303282BCBBEC9E94CB2EE05F4C1F57B41FB9F19AEA12FE34FE9145368619C45A15336DD76B41DDF818735EB0FE9B18A549A31D402DE71F1EE85794BE1E18516AD9E43E8B915D3171FE2826F7EBC393170E1A02C803C1CA74D8EFA62D4CC3CCBA3349A8CD78DA4F6D0C477518FAA49B4C60FAACA04F161473F9641D222E047E77FCB3E83C99A5E695C198ACB47E564F0BCD8C865302F20C75118C25E3ABC97C120F80D092A8596B83BE41D73C4328C1AA71697AEDC9E9EE5EB43D496E8AF00E9347B4AD64717D43F0442FB1A19CF0213986D224647C6C9AE58BB3F2B4F0D6DDDE45D8A4CA6FA16A0D1E066876AAF5661BAB72AD9B3FE5D7F70D184A2610B077E4D9EFB2C2E48BDAD5579AF4F28094F31CD1DE10D7F5E43D5D04C4CA8BB4AC14A71142E2D0414336A190F4C7365ABCB32E953743B7AAAB28B84D711B928BD251FF230E56749BED5D800E2C19DDA89FA38559015B5D0FB7154350E1A098288526B877FB647016D9843C5051E8A51C7F0E7041268385405BCCE8B1A574BB11506D2AEA267CEF2B4842F1DD93B7712E663C3D63BAACD3CBF701E0A2206DBC9BA763A38B7C5F264569C0CC8B38C7CEF9B731C1A728B6F9742B503FF82911D2194ED292F4E9CA999BF7D2C0AB2A01CA79312A478A7429E3229DA3D0D14AA6A66620FFCD571477D312F6A7763BAC5E4205DB63FD189686D4594EC305D697644CE155B85698E8F61F424598B037EC55E8FBE58F9D7A552A3AC18F831DEFBBED9B7252E49CFECD23A1CDB82D456F09AA10945B5587DC1544E3E074CF7CE20509DE61EF0CB0E006226950CA8D896253C6303E65E980F4AD398A729539ECE107574BF79237B2DF6D781E2DF180CD2BEA5DE74F2FC79344A259838373DE55B7A3741266E8FC98E60A436D3F78A7130865150B1531794A28466E67BDF0303F2EB2395BC2BF78ACAB237927BEE3AFC83044BD54EEC1DF0EB33C7496BABD88FF0E198D54DAAD4340420265EAA9BDB231F46FED8217D2C7147DFFAA378F2D0AE9489D32CB18681BB60BF8ADA1D30E3DE08F9B764ECC0B3E6E514F2271299577EB3C92C5F3D4113A59F7B04B8370BA6C0B
6833FA78D5EA7F419E1C76ECAF0DBBBAA9F61753359144150414F62165227AD435F4461B2295F0C4D4B971FA76E85B8C0D4C6EE3D331358182E67837F6DFF248357D07C583B6457D12908CF9BA3948F022B42BBC9851E3F4150E479E72B5B5C4F0E655AB55BDEDECC4454CCB650F3F52636B8705910362916596C6B0DAF925072C04D9193E7D1C346C4A50E62C141F34F9887901A5CFD75FE355001AFA25383FD20EE876DAD7863D2198CF80C77C86FB873E18C48807111786C6F219BAFB7894C1B7E48436133E90B41DA7083EEDCB475F0DA09004EEB721AFA61B5D536389CE145A6634C5DB0FC3A4095B3F241617C053605D5A56D48F170E4945A58C865039D6BDECB4B0D09B560F9C6133D55095EFC03E995CFBDFA5B332642E912BCB1825038D38877EF84DEDBE73B081B5AF17FC1EA2611A36510FA78CC21F3D6599772E9E43EF5FFB8EF8ED635909C250114056903BC8E769B0162674CEA9E35A777CD8AE40E4E64559A62FD7001F6DC71F64CAFAD235E475FDDE2204B9B4C83FEF71B0BB63524E98AAFBDD1C1B953140137DFD2169B59AFDEB4CCEECC1DFA83057C5E3E39558A5B27698ADDC36F6AEEA3E55B8387839419B56C3266A0115E71067FB0FE5503A1C0EACE60057A75A8E083791509EFBE7C41605653C2E4496B482A6D6275F59878D95F4E60102DF0EE1CCEA806E2DB279BCCA0C8ABA711D18636BA9CB0D95F67FB350672C365FD93A1FCAC4CCD366DD3AE6D2D65DC9FBE5449456C9B87C78CDB20E9CBB2CD2D4483BA07402CF9072EE7CB66056FF3D641BA9BB21E1F3CC8063B43D5E6EEB7466FBE32DD96E44A17EC60ED3836E486A643F9A22AEF3CA3582F41E1EF07994A4B6A4E06D689DEA00525372D559AF11FBE97C2872AA60FD9E07E6D3ED3FA7491216D768A10519812CE196F701B347056EF191C9DB884C0C4A90CFC2AD2524F4332BE03B6DEEDCC45E608E5C551037990CADFFF0F374D25BEC35FF853031D4ACB1163ADDAE037549D06F77BA052B47359BC1A34210E6F54480D1C078D8F5AFEEDB37F1E8814E039DB06AD0847EB45E6374FEAA45181841EFBC6538EE4EB872F2E370BDF72EEE5528DA6B005DAF72F0D74CDA50486A58C0800761CEB9F9075CECF832ED2C0281035CD15A997B5253C3A2D97B7B885E64C25726CE19F3AD9C8D00F5675CC602DD002F509B0EC0F12BED129D2B919CCCCE4FA25F6C06185C09474FB3817AF6BCAE41EC093E1C1D085BAC5BA8B4AD5A67340CC202ABA94D4AC8449B216D65F2759D0C8F592C6545D237E7E79A05EB9DC3CA90355B7B991E6917B3CA824D28B3ABB407FA08EDE574025B6C6D32E7328EB4A91000322BF760BB7515801264B37DD539BD9C6AFA2F56FE289FE2A9696BDFCDB01A1C6ABCB4364A142906EC98C1D7BDA902F8F4A17DC4019E8029D56C9CB3EEF1C667BB
AB222505815828E521B127810D7178E3669AE2750F9007BB949FB9C6CDCB7A4D2AA0A8AE59D2177CC095F8CCB54099BEF80E7C1C360792EBD504EB64E8D526A9AFEEB0894A7A52DB60E2D0AE033B5FDAB340910C406215566E716770B46638324648E4D47E000E2D9D70C88222C9E17EF85C9DB4CA646224016AC794DC8A6B44DCD9DEBE8BA04B4F8D3EDE7956F38AF35AEEA3D4D776BE6BCC66D778602DA85935C839829510838AC22B715E0AB3D00A44828967489356B2DCB464D36A9FCCC70A2456A703748CA6A95596557DBD9ED9A30A2CC13A49D56B95E45B2BF696ABAFF60814D5FC7B8B7404F91111A6AC0B69E1491B9CD612918D5ABE6061A7F5730EF24B661A121C858E748BD226F68020C0BA2959F8A7EC96D11A3AEF30ED18E8A2499F0EBE8F00C6A0DD6FBD0F7E1323A5114A6DF631E9A959725EEDD493317ABE4C57FC44AB45908FDC6617EB21C602F68819CD36DD6119F0A8ED160A15912D93574E28CE15B43BE4FD9605034C696E2857DF2377775E38C61AB06571F0D1DDD94FC687B5C1A17F227AD4FB86AB4B8BD8984C37464B7F2541A024C981BD23E09893A2A322CFE5B08AF35739D2B93EBAEAEBD810C3AB124CF5D029FB7F34124FDB5BE91852B3FAC35DD21D68CEBC1535962572AFDCE72CFA98D181D2EBD584E52F194B5324002230C628952219ED6E74D48241F34DE23ADFB961BC5EF23A15EF2B54C885131A017AF2B571AA875F341D5E3664C9FD878468E9B8908FE775502CA4C7628B7177116D6B1634ECA4E64A9088DE6EFF584AB4F35E02D0FF6606B347D070AEA5DAB7F35B5F3365E3F2ABA0B938831CD1FAEF2E9E7354A9736FBC4739A0892253E618B0C2C3FEC976F35ABAE92E0523CD71CA202CB28775D620D8C3B965B5F473925CC2DAA7F1FE78A1B277EE656CD38B020AFE6AC53E6A042917986F44B59A5DE805F7EABC1F0B391BB29FABC8D90A4DA76503CF37BFA271AA8DF30C0AE615F889315E815951661624C75BDD8E627DA3A10351B45B2B532DE7056FF449BB32CD087FBB89012887388487A8EEB5D4B2094556B0B562621DC8E7D47EE563C90D8B5CB252FB66373B1B51F7DA576B5CBCC7D9023EAC3123E8A1188C0FE30A3895A04DB12A69D047F410A589B1C14885CFF27859485E4204F17AB674B737C97677DAB08751774E6169B050EB43C697E15B092CE51021CEC40F7F154C677DB955D00147BD548A0A804343E3AEC569048F628CCC4413BB5C79922954DE5080B54DA3B892857641A4EA6B1C1ACDC95278C8201389B4FC346A505F3A610D7587527D32200D74308C51390D01A7E93ECCB31B2988E019B0865868DC155E4AF56BDD561EAD05A4175438D2F1C652BD8BB52C41F25552F50B750269E35B3E2A0025CFEC22A7FD234CCEB20EC7145AAA5BA644542D57C08E07E56809C88BB98480FA99
C6D777BB8D66A4BC28EBB83BC3B3AC86EF0A85A77C7A84A3559DDE85A062A0DA2BAB50E1715FB56C6AEB6387378E36C2530F96D4FE03A7C4CBF06B8D47E2E096C53331FB3B9FDC57A38DCFEF596E7AF5E41376D62BCE0BFDF9F6A8DBBBDF75AEB9E560A0D5E1145A787A2F1B86ABF09C94511F10780DB184D4C373ADBBD13240527AA97E7A2AA342DF062C6C803167D89F362E6D6DC76BA60869296B7B1CC3DE534E36E246C49B4AEBF3A5C195E98F9C3822835857F15D4E7E9F0E46F66D41395E4F3485264AC6CE101C87A4541C44D6513D2D46E9367026B03F18A733298A
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/Futura-Medium cguidfix
/F1.1/Futura-Medium renmfont
%RBIBeginFontSubset: Futura-Bold
%!FontType1-1.0: Futura-Bold 1.0000.2.0010
/FontInfo 1 dict dup begin
/FSType 8 def
end readonly def
14 dict begin/FontName /Futura-Bold def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /N put
dup 34 /E put
dup 35 /T put
dup 36 /C put
dup 37 /A put
dup 38 /P put
dup 39 /space put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -227 1 index div -344 2 index div 1459 3 index div 1099 5 -1 roll div]cvx def
/sfnts [<

00>] def
/CharStrings 9 dict dup begin
/.notdef 0 def
/space 1 def
/A 2 def
/C 3 def
/E 4 def
/N 5 def
/P 6 def
/T 7 def
/anoteleia 8 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontInfo 1 dict dup begin
/FSType 8 def
end readonly def
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-227 -344 1459 1099}def
/UniqueID 4364665 def
currentdict currentfile eexec

1E3C5F7118D5EA01C705581413E1D025E1AEB03D6874A15291A8D9E6F7DD9467435B60BCED1B1514C6EB00D7E68EF0A64310486A6AF6BD3EB1BCF7686924DCA2531502CCD305F1E84C6122D7E5189F1AF36DAC1E1494474217BDDA0254A2279D8021D50B0246D3BC1503F62BA43F4CA56A882DE2A279A037F5FDFD3347F60D80C3E618A11EDCE392F6AA06235340ABDA60F1377E5B0382D37735870B5C08B78AFD5154606D3E078434F75594910B2ABA00166AD72C8E1433A3C30A0B256E53BF790DA063887138DDB1F75FE265BEAFE9743D5A313AE7E2431BA622735D9F4A41D16A010E7D958DE7B7B1290A0A84546E782BD299808D2F4D2F89EA58D98617CE19B16D9E900EA051C45144C36C5847D0D6B65B7B3E10D63ED384463547AF4F1EBD79EAF1544109435B5EF31A02890D345892E08CFF0914A12FEEA9ADA3010ED0
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/Futura-Bold cguidfix
/F2.1/Futura-Bold renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
 exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 1 1 sc
q
0 0 1325 1037 rc
375.5 502 m
573.08093 502 l
573.08093 411.03915 l
375.5 411.03915 l
h
375.5 502 m
f
Q
10 w
1 J
1 j
0.60000002 i
0 0 0 sc
q
275.5 602 m
673.08093 602 l
673.08093 311.03915 l
275.5 311.03915 l
h
375.5 502 m
573.08093 502 l
573.08093 411.03915 l
375.5 411.03915 l
h
375.5 502 m
W*
0 0 1325 1037 rc
1 0 0 -1 -604 2008 cm
979.5 1506 m
1177.0809 1506 l
1177.0809 1596.9608 l
979.5 1596.9608 l
h
979.5 1506 m
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 1325 1037 rc
1 0 0 -1 474.29047 456.51956 cm
/F1.1[ 25 0 0 -25 0 0]sf
-79.034424 9.6276855 m
(!"#$%&'\(\)%"*\))[ 18.798828 7.006836 15.026855 19.775391 6.225586 11.914062 7.714844 25.415039 9.729004 6.225586 7.055664 13.830566 0.000000 ] xS
5 w
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -604 2008 cm
1182.0809 1551.4805 m
1307.8297 1551.4805 l
S
0 i
CM
718.2298 456.51956 m
703.82977 461.91959 l
703.82977 451.11957 l
h
718.2298 456.51956 m
f
0 J
0 j
1 0 0 -1 -604 2008 cm
1322.2297 1551.4805 m
1307.8297 1546.0804 l
1307.8297 1556.8804 l
h
1322.2297 1551.4805 m
S
1 1 1 sc
CM
730.7298 502 m
928.31067 502 l
928.31067 411.03915 l
730.7298 411.03915 l
h
730.7298 502 m
f
Q
0.60000002 i
/Cs1 SC
0 0 0 sc
q
630.7298 602 m
1028.3107 602 l
1028.3107 311.03915 l
630.7298 311.03915 l
h
730.7298 502 m
928.31067 502 l
928.31067 411.03915 l
730.7298 411.03915 l
h
730.7298 502 m
W*
0 0 1325 1037 rc
1 0 0 -1 -604 2008 cm
1334.7297 1506 m
1532.3107 1506 l
1532.3107 1596.9608 l
1334.7297 1596.9608 l
h
1334.7297 1506 m
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 1325 1037 rc
1 0 0 -1 829.5202 456.51956 cm
/F1.1[ 25 0 0 -25 0 0]sf
-92.816162 9.6276855 m
(+*,%$%"*-'\(\)%"*\))[ 18.151855 13.830566 6.225586 6.225586 19.775391 6.225586 7.055664 13.830566 14.990234 7.714844 25.415039 9.729004 6.225586 7.055664 13.830566 0.000000 ] xS
1 0 0 -1 695.5 966 cm
/F2.1[ 99 0 0 -99 0 0]sf
-500.3515 37.01506 m
(!"#$%&')[ 90.189000 56.430000 52.173000 67.815000 79.398000 67.122000 0.000000 ] xS
/F1.1[ 73 0 0 -73 0 0]sf
-53.564507 37.01506 m
(.*/.#\)'-0"0'1%1*)[ 29.620605 40.385254 40.028809 29.620605 43.878418 27.303711 22.527344 43.771484 43.771484 20.602539 43.771484 22.527344 43.771484 18.178711 43.771484 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
10 358.98044 m
248.63632 358.98044 l
248.63632 268.01956 l
10 268.01956 l
h
10 358.98044 m
f
Q
0.60000002 i
/Cs1 SC
0 0 0 sc
q
-90 458.98044 m
348.63632 458.98044 l
348.63632 168.01958 l
-90 168.01958 l
h
10 358.98044 m
248.63632 358.98044 l
248.63632 268.01956 l
10 268.01956 l
h
10 358.98044 m
W*
0 0 1325 1037 rc
1 0 0 -1 -604 2008 cm
614 1649.0195 m
852.63635 1649.0195 l
852.63635 1739.9805 l
614 1739.9805 l
h
614 1649.0195 m
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 1325 1037 rc
1 0 0 -1 129.31816 313.5 cm
/F1.1[ 25 0 0 -25 0 0]sf
-42.474365 9.6276855 m
(\(#\)2*\))[ 24.963379 15.026855 9.729004 12.048340 13.830566 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
5 211.98042 m
243.63632 211.98042 l
243.63632 121.01957 l
5 121.01957 l
h
5 211.98042 m
f
Q
0.60000002 i
/Cs1 SC
0 0 0 sc
q
-95 311.98044 m
343.63632 311.98044 l
343.63632 21.019573 l
-95 21.019573 l
h
5 211.98042 m
243.63632 211.98042 l
243.63632 121.01957 l
5 121.01957 l
h
5 211.98042 m
W*
0 0 1325 1037 rc
1 0 0 -1 -604 2008 cm
609 1796.0195 m
847.63635 1796.0195 l
847.63635 1886.9805 l
609 1886.9805 l
h
609 1796.0195 m
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 1325 1037 rc
1 0 0 -1 124.31816 166.5 cm
/F1.1[ 25 0 0 -25 0 0]sf
-42.474365 9.6276855 m
(\(#\)2*\))[ 24.963379 15.026855 9.729004 12.048340 13.830566 0.000000 ] xS
5 w
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -604 2008 cm
856 1251 m
933.01788 1251 l
933.01788 1551.4805 l
952.59998 1551.4805 l
S
0 i
CM
363 456.51956 m
348.60001 461.91959 l
348.60001 451.11957 l
h
363 456.51956 m
f
0 J
0 j
1 0 0 -1 -604 2008 cm
967 1551.4805 m
952.59998 1546.0804 l
952.59998 1556.8804 l
h
967 1551.4805 m
S
1 J
1 j
0.60000002 i
857.63635 1551.4805 m
933.41553 1551.4805 l
933.41553 1547.7987 l
933.01788 1547.7987 l
933.01788 1552.0784 l
S
856 1399 m
856 1401.0442 l
933.01788 1401.0442 l
S
852 1845 m
932.14069 1845 l
932.14069 1846.2161 l
933.01788 1846.2161 l
933.01788 1544.9565 l
S
857.63635 1694.5 m
932.54926 1694.5 l
932.54926 1690.4517 l
933.01788 1690.4517 l
933.01788 1687.1208 l
S
0 i
1 1 1 sc
CM
10 502 m
248.63632 502 l
248.63632 411.03915 l
10 411.03915 l
h
10 502 m
f
Q
0.60000002 i
/Cs1 SC
0 0 0 sc
q
-90 602 m
348.63632 602 l
348.63632 311.03915 l
-90 311.03915 l
h
10 502 m
248.63632 502 l
248.63632 411.03915 l
10 411.03915 l
h
10 502 m
W*
0 0 1325 1037 rc
1 0 0 -1 -604 2008 cm
614 1506 m
852.63635 1506 l
852.63635 1596.9608 l
614 1596.9608 l
h
614 1506 m
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 1325 1037 rc
1 0 0 -1 129.31816 456.51956 cm
/F1.1[ 25 0 0 -25 0 0]sf
-42.474365 9.6276855 m
(\(#\)2*\))[ 24.963379 15.026855 9.729004 12.048340 13.830566 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
10 652.98041 m
248.63632 652.98041 l
248.63632 562.01959 l
10 562.01959 l
h
10 652.98041 m
f
Q
0.60000002 i
/Cs1 SC
0 0 0 sc
q
-90 752.98041 m
348.63632 752.98041 l
348.63632 462.01956 l
-90 462.01956 l
h
10 652.98041 m
248.63632 652.98041 l
248.63632 562.01959 l
10 562.01959 l
h
10 652.98041 m
W*
0 0 1325 1037 rc
1 0 0 -1 -604 2008 cm
614 1355.0195 m
852.63635 1355.0195 l
852.63635 1445.9805 l
614 1445.9805 l
h
614 1355.0195 m
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 1325 1037 rc
1 0 0 -1 129.31816 607.5 cm
/F1.1[ 25 0 0 -25 0 0]sf
-42.474365 9.6276855 m
(\(#\)2*\))[ 24.963379 15.026855 9.729004 12.048340 13.830566 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
10 799.98041 m
248.63632 799.98041 l
248.63632 709.01959 l
10 709.01959 l
h
10 799.98041 m
f
Q
0.60000002 i
/Cs1 SC
0 0 0 sc
q
-90 899.98041 m
348.63632 899.98041 l
348.63632 609.01959 l
-90 609.01959 l
h
10 799.98041 m
248.63632 799.98041 l
248.63632 709.01959 l
10 709.01959 l
h
10 799.98041 m
W*
0 0 1325 1037 rc
1 0 0 -1 -604 2008 cm
614 1208.0195 m
852.63635 1208.0195 l
852.63635 1298.9805 l
614 1298.9805 l
h
614 1208.0195 m
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 1325 1037 rc
1 0 0 -1 129.31816 754.5 cm
/F1.1[ 25 0 0 -25 0 0]sf
-42.474365 9.6276855 m
(\(#\)2*\))[ 24.963379 15.026855 9.729004 12.048340 13.830566 0.000000 ] xS
5 w
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -604 2008 cm
1537.3107 1551.4805 m
1658.1 1551.4805 l
S
0 i
CM
1068.5 456.51956 m
1054.1 461.91959 l
1054.1 451.11957 l
h
1068.5 456.51956 m
f
0 J
0 j
1 0 0 -1 -604 2008 cm
1672.5 1551.4805 m
1658.1 1546.0804 l
1658.1 1556.8804 l
h
1672.5 1551.4805 m
S
1 1 1 sc
CM
1081 502 m
1278.5809 502 l
1278.5809 411.03915 l
1081 411.03915 l
h
1081 502 m
f
Q
0.60000002 i
/Cs1 SC
0 0 0 sc
q
981 602 m
1378.5809 602 l
1378.5809 311.03915 l
981 311.03915 l
h
1081 502 m
1278.5809 502 l
1278.5809 411.03915 l
1081 411.03915 l
h
1081 502 m
W*
0 0 1325 1037 rc
1 0 0 -1 -604 2008 cm
1685 1506 m
1882.5809 1506 l
1882.5809 1596.9608 l
1685 1596.9608 l
h
1685 1506 m
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 1325 1037 rc
1 0 0 -1 1179.7904 456.51956 cm
/F1.1[ 25 0 0 -25 0 0]sf
-86.505127 9.6276855 m
(340//*,'\(\)%"*\))[ 17.517090 13.708496 14.990234 13.708496 13.708496 13.830566 6.225586 7.714844 25.415039 9.729004 6.225586 7.055664 13.830566 0.000000 ] xS
1 0 0 -1 829.5202 331 cm
/F1.1[ 23 0 0 -23 0 0]sf
-48.903076 -6.6850586 m
(+*,%$%"*-')[ 16.699707 12.724121 5.727539 5.727539 18.193359 5.727539 6.491211 12.724121 13.791016 0.000000 ] xS
-87.0979 24 m
(1\)#"#567'\)*&#\)-.)[ 13.791016 8.400391 13.959473 6.446289 13.824707 13.791016 12.533203 6.828125 7.097656 8.445312 12.724121 10.960938 13.824707 8.445312 13.791016 0.000000 ] xS
1 0 0 -1 474.29047 331 cm
-83.998291 -6.6850586 m
(89/&4\)#/%:0"%#/')[ 13.409180 12.499512 12.611816 11.556152 12.611816 8.400391 13.824707 12.611816 5.727539 12.499512 13.791016 6.289062 5.727539 13.824707 12.611816 0.000000 ] xS
-110.37305 24 m
(7#\)'&#/&6\)\)*/"'0&&*..)[ 7.108887 13.824707 8.602539 7.097656 10.960938 13.824707 12.611816 10.960938 12.533203 8.950684 8.445312 12.724121 12.611816 6.289062 7.097656 13.791016 10.960938 10.960938 12.724121 9.332520 0.000000 ] xS
1 0 0 -1 1179.7904 331 cm
-139.56665 -6.6850586 m
(340//*,'7#\)'\)*&*%;%/<'-0"0)[ 16.115723 12.611816 13.791016 12.611816 12.611816 12.724121 5.727539 7.097656 7.108887 13.824707 8.602539 7.097656 8.445312 12.724121 10.960938 12.724121 5.727539 11.556152 5.727539 12.611816 13.768555 7.097656 13.791016 13.791016 6.491211 0.000000 ] xS
-92.8479 24 m
(%/'0/#"4*\)'\)#6"%/*)[ 5.727539 12.611816 7.097656 13.791016 12.611816 13.959473 6.749512 12.611816 12.724121 8.602539 7.097656 8.400391 13.824707 12.533203 6.289062 5.727539 12.611816 0.000000 ] xS
1 0 0 -1 133.13632 36 cm
-83.346924 -6.6850586 m
(\(#\)2*\)'\)#6"%/*.)[ 22.966309 13.824707 8.950684 11.084473 12.724121 8.602539 7.097656 8.400391 13.824707 12.533203 6.289062 5.727539 12.611816 12.724121 0.000000 ] xS
-99.726562 24 m
(7#\)'-*&#-%/<'"\)07=&)[ 7.108887 13.824707 8.602539 7.097656 13.791016 12.724121 10.960938 13.824707 13.791016 5.727539 12.611816 13.768555 7.097656 6.289062 8.445312 13.791016 6.828125 12.207520 0.000000 ] xS
ep
end
%%Trailer
%%EOF

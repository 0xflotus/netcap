%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 1479.000000 1083.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.14.1 (Build 18B75) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 1479 1083
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 1479 1083
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: Futura-Medium
%!FontType1-1.0: Futura-Medium 1.0000.1.0000
/FontInfo 1 dict dup begin
/FSType 6 def
end readonly def
14 dict begin/FontName /Futura-Medium def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /N put
dup 34 /E put
dup 35 /T put
dup 36 /C put
dup 37 /A put
dup 38 /P put
dup 39 /O put
dup 40 /L put
dup 41 /R put
dup 42 /S put
dup 43 /U put
dup 44 /B put
dup 45 /period put
dup 46 /K put
dup 47 /Y put
dup 48 /I put
dup 49 /V put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -1074 1 index div -591 2 index div 2707 3 index div 2164 5 -1 roll div]cvx def
/sfnts [<


00>] def
/CharStrings 21 dict dup begin
/.notdef 0 def
/hyphen 1 def
/period 2 def
/A 3 def
/B 4 def
/C 5 def
/E 6 def
/I 7 def
/K 8 def
/L 9 def
/N 10 def
/O 11 def
/P 12 def
/R 13 def
/S 14 def
/T 15 def
/U 16 def
/V 17 def
/Y 18 def
/h 19 def
/hbar 20 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontInfo 1 dict dup begin
/FSType 6 def
end readonly def
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-1074 -591 2707 2164}def
/UniqueID 4208071 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C55AC8266BDD340E521355EEF85826934CAE169B3813170EF21157F980278DEA2CE475C6187CB4267A04435AB7CCB196A466EDED31699319305B4913DB428C1F94A0BD0621B41DEC2216CE6C1E3EBC36487BA48FFFC5F94B7C8705655675D4E21DD11D422EFC346F0840F70FCA808FD56424C244741A5EEC370A3276C5E050182153744A195066BD7AA429092A1D177FBAF786F0AF577C4D7E983BFDF2B7FE821BBBBAF2C47B5474634C57D58C056CE70A811D99DF0FA69A14BBE001116E86C0E0CB9F230014E30287CC9B59455A35064AD4F41B91C7E1DACE31AF9972713B5F6E2C473905B3991F6A5C397406358F33BAC85670F97FFC92D66ACC4C98E016C162F9F812A50A2B2F807477C518B2407FA20B5B3CDAF2772BDC22B11B098374B7BF2B73A544EBB833A2D0813ADA26115988EEB431648431485556A4B24E64CAA36787761AEA91EFB4122DC22AD2B648342D55F0F28DC2CB926B6163D8A5B9867891C39051952130F005DFAD2A4D58FAADB3FF4E67F33D6F1B803EE6A10B9C4C8C823060D28FB1DCB508F2E06C48B8203072C46C166577596DFD3313697ED1F0A151EC769A84FF9687EED7684F561989AD7FFB2679017635C9D6E3B67528260EFE9C9DC80F5276280BDA704DC02FD1F4E4BD481FC7C3FCB39A5FED3F74E771FC38C6D0A239DE6323CACA1B3686CF46685F872A56292141D5AFB29D4783090B6F69E6554C57E6B1B5B48AA30832CD23BDC994D23BAC802D1361FFF1A47580185E236F9B1E6737022D79A4AFB90B9C60CB4A4D9EE9D1F58E8FB7642893772124908E05558F13
E7E0B27D752DC289BAF0B551603C7BE9BF686B70A5AC01405695D590C7ADCEDC213809D3248C557546167B1F1AB9C10AFAC9AA1100FE6A8E45EBD0D910627F687D25255AACBD3C228C7302A322414318CC6C2825C5F8CDDEA3235FBB2F58A0AB620EE37E07B14B59F53942BE5F6E99DFB8C8FB6C522D893A3C15C17EB760F8D4303B879E8E225EB59798FF6023C5CE5AE487582F5489858BC5F5186E81A56E1D4CBDF4E97FF8474A81A5C5CB858174406A5166B214F4CEAFD10D8284AFDB1896A5CB84A5A8F9CE5AA75288B6EA75B1E6A3B93CC3A1F1E92EF667E47D01C0684FA5251379A21CF4D7EE8ADE19DB408C5ADDC5B509E8EC26A4F884CC4036F17233477F5438FB0124105D39E383084D4AF76A3E082620950CDFE4EB7559F19780854D2E2B31C7E5EEF757B860B8EBEF5BF974F6A300A486430D98D0D73E826D034A92F6B4F24DF73B152A70DED831033C781AEF29FEFF5C86BA0B0708056B50D6438F08AA1985370DA772A369B953C16135E7AFE65F17325C170F15EE847C077540FF6A390627C78DA584CC0B67123010F20347DFEE401C58650EA676877C8EE29B3F2DBB100A2D2A6A0953690B627FD472839595D9123E9AD9F2E3070B5A7FAF9D41C8BB44073E4BB921CAA95F8EEE06186EDD66CDD3A1D91B3093381AFB30C4973637EE1BA306BF263823CE9089D760026B6EC69903D0F50DDCCF25BBBF3E132298D5EA3F3D0481AC71410F3997799BA6D42D433695DB177FE8F36D31F932C0974F0D7799073A5F99CF1B187ED580F10C324F8192876D1F640363316D96EBFA0AF10E1D76199244B5D001546EAC02369D9225C0364D8EE1A1FF183045F9CC14D6E03B224BCEF88E21E9F4F469EB46334D3AEA5B1E4BC8102F9248906545D85F166DC1B3E0138DA98E2CB85382000EEB83674924F88AB815F21C9A9ABF0A1AABE66083323D9B0AF73BCC2E0AC03FAEFB8F543C6B73CD3BA6CE79FDFD002EFD94029C197BE9D5293DCD6F55A9F818175D30E7852D572D3171676EDC43BE244A54E3BFD2553C171EFC07FEE0B38DEAB6342EB04BEE1B9E5A63946AE3CCC08AD0444FD142C13BEFA2273D0A5653655B163D226F2EBCD7AD58DECD79DBC8AD9F88246F3B7901725652EC5F50BA5DD97DA3515FEA784697770548400BB20B12FD40C5899D89B64D9CEABFC266825AB5AA8FEFCB435700C2A6C625F03E8A7A04E12D5AC9337B65667700CE71BB2F9A9CEEC3B918EA3963E68D31E7F0097A0465D14FFE474E88653589DC21B192CAA41DA6D67E1955FA91F391BC726FD12821BA804D1E7044EF52990912700251E23491F0841D5CD8291D84BBA1542F30D263FA6DEFFABAC6F8BC883026129ACCCFD2C50C5FA368413D0915C1A93AB417D6F8D87BDD4F7573D90823F6C13584137CFD339ACBC7623D2698E274BAD184A7777AC47A9D47A1
77494144907BBFE7B9BD53816069DC6F834D05030D95B5E1156AC6EB996260CF8109B1688C9C737265B6ED35DBD768C617CB57EB4184C7DF3553D1E823137159D62B0F90294727E0822B8A8DD34EBD7AEF8253A13EE02D88C3944A63FD014758AC0CD890810D0B09F1E634C8F10B6C58E1131E7F57052D7B49BEF7A9659796F572780E5B080A606618140E9F6840A2D19FC7BB99A3B9FB720CA4CB51467C70445A20B8CDFA35216CA96284F9B2A6232A1AF327CA888BFA19BDCAC8965F87F770A73B6D59201C6D8839A879DA25E5B2F702472BBD256B427C1D86A9813C6F0D28CF89474563B81151F4E498B2737D58725408D1B0C36F47A2CDD8D3F09946FE2D73096DCC34D0D0146A7318A3779A780E442EA5C9E9DA1DA8D4F6D287319DC1F5DAE90627B96B9232DD18EC7F738C2ACA0457EC3C52A5756A4ABAA6E60116ECD6708EA43705BC2D0E7FAAD2A63098A2B5E97169745953A7A0CFBF891D325CDD147DB47263547FAE2461E4579A5EC0B7766FFAC5DBDB12131DBDC50293D06CA90D626FFC2DEEBB1FBEC19BAA02F6A3F5F28255CB8ED4CF890E0B569180B3FE78EC431F38411A5A380EDC10FB722A0E41E489040DCAC5FB5E4EADE50868702034DCB60D44A3404F4BB144A2EA9D7EAA7DB7224C9ECC3B2E788658A8F7D3937C63DB504D7542FDB55BFD3B09D01C92B671A320B6ED1CB236E544A30845B2DAB4D807DFD3533CCB7B454FE04C98B51C5DF8C97A9B5D6AFFAC00D51BB20B8F4964F7D2FA5BA38AB116ABE35C12C37E7C1578E77020F2718D1F9717D878EB122DDB7FAE38702B0F4ACA4CD0BE0A9036898E0D1D3EFFDC19408D675016065480E0CD62F2290052FD10C957A2BA3A93DE46BBCCBA85F4CE356C890E2E0E5E35F144C5F1B7914535CFFAD4F7C4F0894C36AD762591925CBC44612065F15591DB258F8EDF2381BB2D65F10D378555B7D2F8D1801FCB8192BB3A7ED32865
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/Futura-Medium cguidfix
/F1.1/Futura-Medium renmfont
%RBIBeginFontSubset: Futura-Bold
%!FontType1-1.0: Futura-Bold 1.0000.2.0010
/FontInfo 1 dict dup begin
/FSType 8 def
end readonly def
14 dict begin/FontName /Futura-Bold def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /S put
dup 34 /t put
dup 35 /e put
dup 36 /p put
dup 37 /space put
dup 38 /one put
dup 39 /colon put
dup 40 /n put
dup 41 /s put
dup 42 /o put
dup 43 /r put
dup 44 /a put
dup 45 /d put
dup 46 /C put
dup 47 /l put
dup 48 /c put
dup 49 /v put
dup 50 /g put
dup 51 /k put
dup 52 /y put
dup 53 /i put
dup 54 /two put
dup 55 /P put
dup 56 /u put
dup 57 /b put
dup 58 /three put
dup 59 /h put
dup 60 /m put
dup 61 /period put
dup 62 /E put
dup 63 /comma put
dup 64 /w put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -227 1 index div -344 2 index div 1459 3 index div 1099 5 -1 roll div]cvx def
/sfnts [<
74727565000900000000000063767420000000000000009C000000046670676D00000000000000A000000004676C796600000000000000A400000A98686561640000000000000B3C00000036686865610000000000000B7400000024686D74780000000000000B98000000886C6F63610000000000000C20000000466D6178700000000000000C6800000020707265700000000000000C8800000004000000000000000000020033000001C102F200030008000033112111273711211133018E1904FE9C02F2FD0E150402C4FD3800000001FFF4FF74012000BF000300003733032376AAB874BFFEB500000000010035FFEB011F00D50013000037343E0233321E0215140E0223222E023512202B18182B201212202B18182B201260182B201212202B18182B201212202B000001009B000001CD02F20005000001233521112301096E0132C4024CA6FD0E000001001C0000027B0306002100002901373E0335342E0223220615141723343E0233321E021514060F0133027BFDA1BB4A54290A0B161F15282D03D62B4E6B403F6B4E2C353A7DF4C24D6B4A2E101120190F34270B15426C4E2A2848633A3E693775000000010021FFEB027703070035000001163233323635342623220615233E0333321E02151406071E0115140E02232226272E0135331E0133323635342623220607012B080B04252E2B22242CB5072D465E39385B412329263A412C4F6D41578C2A130DC2023A3134303A280A120B01CC012C23222A30263B5C3F211F395132364519125D44385C4224444A214222353738293132030200000000020035FFEB011F022600130027000013343E0233321E0215140E0223222E0211343E0233321E0215140E0223222E023512202B18182B201212202B18182B201212202B18182B201212202B18182B201201B1182B201212202B18182B201212202BFEC7182B201212202B18182B201212202B000001002DFFEB026E030700200000012623220E0215141E0233323715070E0123222E0235343E0233321617026E44642C4B361F1F374A2B5E4B142D4E264E8F6D42416D904F2D573001F65320374C2C2D4C382050E807100F3B6B93575791693B131400000001004F000001FC02F2000B000001231533152315331521112101FCE9DCDCE9FE5301AD024C7EA682A602F20002004F0000028D02F200060011000001333235342B011123112132161514062B010113416C6C41C401387F87877F7401985E5EFDAC02F2847878840001002DFFEB025A0307002E0000012E0123220615141E02171E0115140E02232227371E0133323635342E02272E0335343E023332161701ED20401E2630182731186059274B6D458F7A542C562A302F0C1C2D20264939232543613C387A3802311A19241D141A130E08206B563A5E4325559E27262C1C11


01FD001E029D003E028C00000401000002B000000131003E0175001701540035000000160016002400440054008600D2010C013E0154017201B601EE02280256029002C0031403380360037803AE03D80412044C046804A604C204D604F405080516052C054C0000000100000022006E00070046000400010000000000000000000000000002000100000000
00>] def
/CharStrings 34 dict dup begin
/.notdef 0 def
/space 1 def
/comma 2 def
/period 3 def
/one 4 def
/two 5 def
/three 6 def
/colon 7 def
/C 8 def
/E 9 def
/P 10 def
/S 11 def
/a 12 def
/b 13 def
/c 14 def
/d 15 def
/e 16 def
/g 17 def
/h 18 def
/i 19 def
/k 20 def
/m 21 def
/n 22 def
/o 23 def
/p 24 def
/r 25 def
/s 26 def
/u 27 def
/v 28 def
/w 29 def
/y 30 def
/l 31 def
/t 32 def
/anoteleia 33 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontInfo 1 dict dup begin
/FSType 8 def
end readonly def
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-227 -344 1459 1099}def
/UniqueID 4364665 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C9315F0017FC3864FF8D40C74661F4AC4F359AB40455CCBD4B88F0CECF0F4D76C0CC6259ED904F1F9FAA469FA6017F0646F842006ED8C439985E098D059AB1CB30F2616803258C5AC771AFAE87FF2EFAEA59A9EFD77077BAC69C26208BC5BBAFE01D9BB395B4EE8521ED0D91B3D937B0432153D5C0A5DA034F4907DEC96B8AEF0C7C72DBCE855D56CC18C1229807048FC39A524BBAAE5791FF4A5FD3DA0A8311580DBCD28B0176DBDA41DFE3A6322853C0786CAE8DE3AF4DEBD721AA1914255B46F072F4D3F465B847AA7825A7E138594AB9B8D3D7A919AD76574F98BCB5C037BBE7FC321D5F34BC0D88B05F644C9CD05EAE4FB0930EF060E661D0C22FF8C07A0A4C9B9057325FEAE8AEA25C9B4974746BAEB6FDCCD4539B0282250869E58128732C9FD72F1137A32008080AF37DA254E730B0F0B3F79EB333419EBD2D687100F573D7085322B84B18E94E01321CE8FCBF00CF6AD0362960AA8A7FDC908F605862A6DE419D70D2F99866DC04FE375FEC7F5F86D45903904BC0446708298B838D0A77BDD39E084081698FE14890642F5FC6B64EA486116B6FCC43B1F93EC0CA9EA7903AB6D56ABD1ABEE6076224DA9742FB4C04F686C1788BCDDC6645E39A82D6E3D7375AB1D83D53E6C74B7175954E6563F21BC7BA18A12FDF8B30790BE7D289BE74BBB09D41FBBA647FECAEB20E25D50D3384FAA83B711FFCA24F33414B0E82930A1A4A7EF3BA6A330FCEF2C0F037053C0AC42D717F5AA4593B4AF404E2EF4A7BA
4E00EA1E9B1C8FA4B1926174DDDE1E6457B2D851866962CA28109C5E8DC849A750819028DE4502C66018F967B58008A077D8D484513771B98E35071EDB2ED67369ADE7E6F40F63282702DD07D17284915457EBCBB512631AB511C5823B8E92D9AC4F913F68098A74E66264EDF1F76A8C60FE6ACD45DDD87E5D1326F1E6350A4FEC2F661E24B1A960F608913972E832375BF336A1F46AC4269A7D61F86A7E94248503F284AC608425A0097839CA56B5C25BD4AA8A6246587A5915B3E7894048AF23DC083372BA6552EB7E3324A7E9316DC7060A6985A2A02C473CEA8176FBBE1CA31774F553D7C5CB3356DBCC5EF0E504CBD74F5A0A1DF333C91F7318122696726B11BB125F32B891B86C5537FCB3EA767AFD5DA5EAC90C8A83EE2583BFD1BF3C664FD398CFABCC05203A6CBE68D5895B4141EAA87652DEF399AF19476A4765DD85EADF90CA195FE825B4096C8E948D891A2F8248CDE3661170C2C2B37F8434D3E7292F0BA46D2F1DEB7BC2643AAE018E1CC5FA57A5A7E52D224E5FCE002DF16B53414156CCEC82CD9233C50446351D517B9EA0E9B12C121F6763F1EFD2C146312FF8609417F4F2D7AD2CCBFF6011C1F01D8D2409A53CDAE896743736EEDAB0C1380784670120B5E1B4DB3B6C769BF80939F52B539C6D942EEEB07FB32440EE72B6566B4676D34AA9C8554C906850933FEF65444236B850DEEDFF2521D10EFCC5B63037E9D0873ADF2DFD3324F788648A17D91322747C23752660DBAB74F8E23AFB615B41CF3FC55DA3DC8DF7754A1F3A9363D7768C3DDAA9EF418ECA26DA4654EC5E98B1E11C27A3700B80D01196A33BD260A08BE7BA3DBDF0A24C491DCC7E80A55E3AB989BB91C251C8478FA31E1DE9D493F75A4F6E9F6687B97CFFEC547F5D8B3D98B8CDE418940FD2BBAA3E34076E6C74C52C2CE6BB93872678F46DFF0FE4516DBDDC86702C46748300968F80FFA34CC46DA93220570C27B08A9F9CFA46BDE306E1D89CAAF3BD46DAAE0BB80BE0E2F0A6825EF4301F7420ACDD0BDE33F216C70B8619BAB53AB5EE489965D58C8E9462005BB840C5C633E67DA60839C7118710EB30AE6EEA84932123A09D8BD74595142170FE0C88974D192329A41691751454AF4710683CF82FE829A70FC6FCAEDD77857B284EC8BF284E188161689E7C82A1584E92130B4DACDED16AD1849FC9E32682FF776A9986BFEE60171F83432A4625503A130D91ECD2A1A1003E012EA2377C2754F687AC644C1CBDD39B4687F6D85E76EB8E7822870F8D15F30AD1B72F59671F9754F5348B3425DB52427E7C8F6471AEB19F7E449EE6FA4238A38B879CC53488E17AFBDB322A0928D031F30FE886202CE39E6197E383105283DE98A86C81DC57161098B3CD38E841F7E22BDDDF0DC6F16AA92F66F2045F419CDF292DE69AFFB7F5A469134D431345321F02567014
DF1B71CA020E9C619898ED444E49905A4AF4FD6F28F491D713DB0EB82738B49C3B7AF0241204FC39CE5B68D67D20FFD4E2FD2041B57622F4E68D6B4E39A84563E375ED19B56746988CDBE5F67A2190A6F53E3BEAFF98F1DFEEDAD4DF92909281B9759C74207D6EBB0F945E87865F705582433F8431667331B9E329730B79BF9043BBE8B5720AA2CBE843A55A4A01776B108FAF14891916BF71A18563CBFD8D93A97E9F1033EB4FF495358726588E7051CD1289DCA0BA00089B1763EA850E5014ACE4558705C5C1319AAA211C05D332F31A1B2E4D5B9FBBD0F87C3E63AB49C56C22B09761B9EB2843CE235C28D9AB1753F1561908121CA0D8838CBE125A370FC574F6D6238F51755D16647DE1994FF39E4DEB47B3352725BC2DC9B5A1B8AD1A64EE8E40BCCD6BBC810ED2267FD061AA0E35891BB544485A085C83527E45D8EAF5FB805C1AD5B34F059024D5F0FCE144F8D8E4045DB56F92D17471074F788DC1060E958171179A2A4428C7D76CBB6C4A200194838F595193BACA7F07F03A791A138AAEFFD8369CF1603B62A35817AFBACA9EE3EDC032B059439C49CACBF8DFEEF7BA3D7F87D45189FCEA5EB71FD1BAE546C9B279837246342F949236520CF1F259A8E1BBA77D88A82D1399ACFE7918F0730F0AB14B9E599AC82B3366C9B343AF32816A06DEABA8C986B7EED65CC7112785EC2BAF56D5E941D793B5FDDAB8B07C7AE7E322C6A6255497BF20899DEF21CFD5ACCADA2A0AB69FFE71C45624AEEC3B0C7329309B65FFB60BAAE57074833D61115700BDA10B0CDE207874A59C937B202917B7C50DCB9BBDFDCCCAF931895D801A4546E2485C90DF6E61C887145198CADB492D1222720C612609DCE46CC00BFAB16A17B3FE0023CACF4908F65730BD82B603241248A5E5E6197716247B3CDB9547C00E0BADFB5B50ECE4FDDC9D898FB1B01E6A5933F08D2E3CEFF0E6D8C68FB86BDB2176AA6546D2E51DEFCFF5FEC31FBA27468C5D93E8463E73AF337B437220FE45253D91ECA985F02728B0D4A683B2AA6C7EA6715EB0402394ED1E08D9B703F71754989D4A9A9380C771FA0E3D16F8BD9281332998C25375FFCB5027B716120FE6B6D47E7945625E492C5F5947F085CA8305601FCE3C45C908321DEB3316F2DE674EC73460E6BDA585BBF05F2E7106812F6AFDAEBE297063FB29AECE33C4827656EA1B3FB3BE5E30BD4000D3D667F02726121D0B8A088DFA300B5C2A754074DAB90D9C4995EC8E9A1E83861FA9DD0DC16748EE69CA0AEFBE27218304DB671AB540A3BE4E9AAEC754C6216F1CEFBA22E0356E0955AB159F0C1262495A7287463E6DCBD2BB4D14445B26B86770D297A182935D9558A3DB4497E3BAEFEC0266CFA8B089B15A0F88583AE747384DA64D7949FAEC37C28188811AB55E6941392CA3D660C1C0CE8C14D4B4C39DA4EA7F926159
8F6444E8127AF4BE8B209FC5C5F7BFA430C705E97A1063110ABDBEEF6FB1105099BBB51E7B8ACAEE11BC983A06B1A63A1A0AA15ADC173130761CD9487055F26DE59EDFF2C7A5A549AFD2D0C5365B42D65A928F0439F433BCC3FE49F27B33A66A6BD01E693DA9B48E22D5573469C657595FA6ADF329C8F461F88C9CE018177CB3CCE91230F154FFAE0673F744838501A9D2B7BFC18B48F4C5B940669F9D89DCF1011904A436C5AF2036AF7FC9064B8FDBD66DCAE13AF40CAD59180EDBF274DDF0AC44B99D558BA01E88A4B2B572ECD523631F47E6C8ABD0D8D154D76054BEC53D2818C8C30CBB9ACBB730F5386D83B83A38A2715E53BA09CFF5A4225661018C9485715DF6D632A795FC4CE002D5B982C8DC966F29C63930D6E0743121AB4A1AB13037643A53E8F6DBB10822F1914461EC10522AA7AED51BAF055B139519AA2B2C96FE43464810373987EA4286069194404F79849086D453B37F6D93A210CB5DE061EA17CBDCB07AD1AEF62118009103E960B17A5D2D716FEFEEB172781F5E009F7F908A0B202B926BF380F4996EF3B794E04F24262CD0DBCC2D26DA5A67BB039C7D371B00BE4595031E8BD59E4E9D460D46529C095ACBB5D53202B877B30697AAA214720AA2FEC27AB3C3927BF05B3FE53F6AFD39AE515649F849E9BBB7E2CE5999F655EAEE7742A44B72FF31951CC99EEA52DCD13F391AACCC4A9C8C52D71A963A8FD0B84A6A9AA92464BE3C9540FE34649184BD443AE07AE272A3CE48D90B1BFD16C8B99E2238878A36826AB30C4A6924CBEDE6429CFBF9288BF2A124E2DBFF6AB7BFDB2800648D693AABCF8C26FE75A3C92556BBBBCD4F5EC12700BEE3022D50D3AE706E623001EC0981E72F662022F5AFA1875DB46751CD0C2E9C080EA1DA625B04D1A89C47A601846D6E77F58D34272F25105AE0F6745B115972919A6A78A3F5056DAD8DD3AB0D7CC67BC3F2E7236419E2CC0710AC26CD8A43127092281150CBA0C9B1A964CEF7917572B6D225D3004D8D012DCEEB8A21B1B142BBEADF2568545701328D89416F1E33BBC355BB0188A305E105221D6305ECCE77CDF3DD9D46FF7C2A31CB75114AE38591BC8364966DC87C2EF99D2083DCE9C653F4B2D4B072A27874454734BC5B8E694B3369DD4E0E66731911EB1122B3C0EA82E00DB3D48C6C23E15AE1164BC0FEF7396FC32AD0C6A572EBB869CCB240FD38AD9F8DA9D2AA115C117DEB73FC754C45483C3B535D09900C1985799048EE0BAD25FF1F5D7210712250FEB331EE3C37F04FCE64BEA9CEA4AD877C5BE6692AD43F7BAECF6CAE1527827D82FD04646A7A4E2500CAB7CA36AFD0D2F236A010550D0568378FEE7F5760E334AB33FF161EFE3505ED6D89F90CEE5BB48C635680522305B46123BF37A1600A14089A06DA74DE7730E40D4D1CDFDF8BD2A4C9C988E21953ABCF141E59


0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/Futura-Bold cguidfix
/F2.1/Futura-Bold renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
 exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
1 J
1 j
0.60000002 i
/Cs1 SC
0 0 0 sc
q
0 0 1479 1083 rc
1 0 0 -1 -656 1132 cm
695.40991 565.29724 m
704.19672 573.69348 704.19672 587.30652 695.40991 595.70276 c
686.62311 604.09906 672.37689 604.09906 663.59009 595.70276 c
654.80328 587.30652 654.80328 573.69348 663.59009 565.29724 c
672.37689 556.90094 686.62311 556.90094 695.40991 565.29724 c
S
0 i
1 1 1 sc
CM
314.85007 367 m
746.85004 367 l
746.85004 165 l
314.85007 165 l
h
314.85007 367 m
f
Q
10 w
q
214.85005 467 m
846.85004 467 l
846.85004 65 l
214.85005 65 l
h
314.85007 367 m
746.85004 367 l
746.85004 165 l
314.85007 165 l
h
314.85007 367 m
W*
0 0 1479 1083 rc
1 0 0 -1 -656 1132 cm
970.85004 765 m
1402.8501 765 l
1402.8501 967 l
970.85004 967 l
h
970.85004 765 m
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 1479 1083 rc
1 0 0 -1 530.85004 266 cm
/F1.1[ 25 0 0 -25 0 0]sf
-48.309326 -6.7446289 m
(!"#$%&)[ 21.105957 14.135742 11.389160 17.968750 18.518066 0.000000 ] xS
-71.203613 26 m
($'\(\("$#'\))[ 17.395020 22.338867 11.083984 11.083984 14.135742 17.517090 11.462402 22.338867 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
314.85007 1078 m
746.85004 1078 l
746.85004 876 l
314.85007 876 l
h
314.85007 1078 m
f
Q
0.60000002 i
/Cs1 SC
0 0 0 sc
q
214.85005 1178 m
846.85004 1178 l
846.85004 776 l
214.85005 776 l
h
314.85007 1078 m
746.85004 1078 l
746.85004 876 l
314.85007 876 l
h
314.85007 1078 m
W*
0 0 1479 1083 rc
1 0 0 -1 -656 1132 cm
970.85004 54 m
1402.8501 54 l
1402.8501 256 l
970.85004 256 l
h
970.85004 54 m
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 1479 1083 rc
1 0 0 -1 530.85004 977 cm
/F1.1[ 25 0 0 -25 0 0]sf
-48.309326 -6.7446289 m
(!"#$%&)[ 21.105957 14.135742 11.389160 17.968750 18.518066 0.000000 ] xS
-50.891113 26 m
(*"!*'\))[ 14.575195 14.135742 21.105957 14.575195 22.338867 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
314.85007 115 m
509.85007 115 l
509.85007 5 l
314.85007 5 l
h
314.85007 115 m
f
Q
0.60000002 i
/Cs1 SC
0 0 0 sc
q
214.85005 215 m
609.85004 215 l
609.85004 -95 l
214.85005 -95 l
h
314.85007 115 m
509.85007 115 l
509.85007 5 l
314.85007 5 l
h
314.85007 115 m
W*
0 0 1479 1083 rc
1 0 0 -1 -656 1132 cm
970.85004 1017 m
1165.8501 1017 l
1165.8501 1127 l
970.85004 1127 l
h
970.85004 1017 m
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 1479 1083 rc
1 0 0 -1 412.35007 60 cm
/F1.1[ 25 0 0 -25 0 0]sf
-50.085449 9.6276855 m
(&+,-."/)[ 13.500977 18.469238 14.782715 7.714844 16.564941 14.135742 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
551.85004 115 m
746.85004 115 l
746.85004 5 l
551.85004 5 l
h
551.85004 115 m
f
Q
0.60000002 i
/Cs1 SC
0 0 0 sc
q
451.85007 215 m
846.85004 215 l
846.85004 -95 l
451.85007 -95 l
h
551.85004 115 m
746.85004 115 l
746.85004 5 l
551.85004 5 l
h
551.85004 115 m
W*
0 0 1479 1083 rc
1 0 0 -1 -656 1132 cm
1207.8501 1017 m
1402.8501 1017 l
1402.8501 1127 l
1207.8501 1127 l
h
1207.8501 1017 m
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 1479 1083 rc
1 0 0 -1 649.35004 60 cm
/F1.1[ 25 0 0 -25 0 0]sf
-52.185059 9.6276855 m
(&\)01-."/)[ 13.500977 15.051270 7.373047 15.026855 7.714844 16.564941 14.135742 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
314.85007 820 m
509.85007 820 l
509.85007 710 l
314.85007 710 l
h
314.85007 820 m
f
Q
0.60000002 i
/Cs1 SC
0 0 0 sc
q
214.85005 920 m
609.85004 920 l
609.85004 610 l
214.85005 610 l
h
314.85007 820 m
509.85007 820 l
509.85007 710 l
314.85007 710 l
h
314.85007 820 m
W*
0 0 1479 1083 rc
1 0 0 -1 -656 1132 cm
970.85004 312 m
1165.8501 312 l
1165.8501 422 l
970.85004 422 l
h
970.85004 312 m
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 1479 1083 rc
1 0 0 -1 412.35007 765 cm
/F1.1[ 25 0 0 -25 0 0]sf
-50.085449 9.6276855 m
(&+,-."/)[ 13.500977 18.469238 14.782715 7.714844 16.564941 14.135742 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
551.85004 820 m
746.85004 820 l
746.85004 710 l
551.85004 710 l
h
551.85004 820 m
f
Q
0.60000002 i
/Cs1 SC
0 0 0 sc
q
451.85007 920 m
846.85004 920 l
846.85004 610 l
451.85007 610 l
h
551.85004 820 m
746.85004 820 l
746.85004 710 l
551.85004 710 l
h
551.85004 820 m
W*
0 0 1479 1083 rc
1 0 0 -1 -656 1132 cm
1207.8501 312 m
1402.8501 312 l
1402.8501 422 l
1207.8501 422 l
h
1207.8501 312 m
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 1479 1083 rc
1 0 0 -1 649.35004 765 cm
/F1.1[ 25 0 0 -25 0 0]sf
-52.185059 9.6276855 m
(&\)01-."/)[ 13.500977 15.051270 7.373047 15.026855 7.714844 16.564941 14.135742 0.000000 ] xS
4 w
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -656 1132 cm
965.85004 1072 m
716.38098 1072 l
716.38098 1069.238 l
717.02289 1069.238 l
717.02289 150.3951 l
951.95007 150.2014 l
S
0 i
CM
308.75006 981.80914 m
295.94611 986.59857 l
295.95401 976.9986 l
h
308.75006 981.80914 m
f
0 J
0 j
1 0 0 -1 -656 1132 cm
964.75006 150.19086 m
951.94611 145.40141 l
951.95404 155.0014 l
h
964.75006 150.19086 m
S
1 J
1 j
0.60000002 i
1066 426 m
1066.6925 426 l
1066.6925 741.48395 l
S
0 i
CM
410.69254 377.71606 m
415.49252 390.51608 l
405.89252 390.51608 l
h
410.69254 377.71606 m
f
0 J
0 j
1 0 0 -1 -656 1132 cm
1066.6925 754.28394 m
1071.4926 741.48395 l
1061.8926 741.48395 l
h
1066.6925 754.28394 m
S
/Cs2 SC
0 sc
1 0 0 -1 870.35004 649.5 cm
/F2.1[ 25 0 0 -25 0 0]sf
-356.9375 9.6250153 m
(!"#$%&'%!#\(\)*+%,\(-%.*//#0"*+%\)#+1#+%2#\(#+,"#%3#4$,5+)[ 16.400000 9.575000 16.175000 17.525000 8.500000 17.000000 8.500000 8.500000 16.150000 16.175000 16.600000 12.725000 17.500000 11.625000 8.500000 17.525000 16.600000 17.525000 8.500000 16.675000 17.500000 7.625000 7.625000 16.175000 12.250000 9.550000 17.500000 11.625000 8.500000 12.725000 16.175000 12.425000 15.700000 16.175000 11.625000 8.500000 17.725000 16.175000 16.600000 16.175000 11.800000 17.525000 9.575000 16.175000 8.500000 16.675000 15.500000 17.200000 17.525000 17.525000 7.625000 0.000000 ] xS
1 0 0 -1 844.35004 577 cm
-330.63751 9.6250153 m
(!"#$%6'%!#+1#+%789/50%3#4%5\)%-5\)"+598"#-%"*%\)#\(\)*+\))[ 16.400000 9.575000 16.175000 17.525000 8.500000 17.000000 8.500000 8.500000 16.150000 16.175000 12.425000 15.700000 16.175000 11.625000 8.500000 16.950000 16.725000 17.525000 7.625000 7.625000 12.250000 8.500000 16.675000 15.500000 17.200000 8.500000 7.625000 12.725000 8.500000 17.525000 7.625000 13.075000 9.325000 11.650000 7.625000 17.525000 16.725000 9.575000 16.175000 17.525000 8.500000 9.550000 17.500000 8.500000 12.725000 16.175000 16.600000 12.725000 17.500000 11.575000 0.000000 ] xS
1 0 0 -1 992.35004 471.5 cm
-480.67499 -23.124954 m
(!"#$%:'%!#\(\)*+\)%8\)#%";#%\)#+1#+\)%$89/50%3#4%"*%\)#\(-%#\(0+4$"#-%<#\)\),2#\)=)[ 16.400000 9.575000 16.175000 17.525000 8.500000 17.000000 8.500000 8.500000 16.150000 16.175000 16.600000 12.725000 17.500000 11.575000 12.725000 8.500000 16.725000 12.725000 16.175000 8.500000 9.900000 16.600000 16.175000 8.500000 12.725000 16.175000 12.425000 15.700000 16.175000 11.575000 12.725000 8.500000 17.525000 16.725000 17.525000 7.625000 7.625000 12.250000 8.500000 16.675000 15.500000 17.200000 8.500000 9.550000 17.500000 8.500000 12.725000 16.175000 16.600000 17.525000 8.500000 16.175000 16.600000 12.250000 12.425000 17.200000 17.700000 9.575000 16.175000 17.525000 8.500000 24.800000 16.175000 12.725000 12.725000 17.525000 17.725000 16.175000 12.725000 0.000000 ] xS
-356.16251 9.6250153 m
(>,0;%<#\)\),2#%;,\)%";#%\)#\(\)*+\)%$89/50%3#4%$+#$#\(-#-?%)[ 14.250000 17.525000 12.875000 16.600000 8.500000 24.800000 16.175000 12.725000 12.725000 17.525000 17.725000 16.175000 8.500000 16.600000 17.525000 12.725000 8.500000 9.900000 16.600000 16.175000 8.500000 12.725000 16.175000 16.600000 12.725000 17.500000 11.575000 12.725000 8.500000 17.525000 16.725000 17.525000 7.625000 7.625000 12.250000 8.500000 16.675000 15.500000 17.200000 8.500000 17.525000 11.800000 16.175000 17.525000 16.175000 16.600000 17.525000 16.175000 17.525000 8.500000 0.000000 ] xS
-407.23749 42.374985 m
("*%,//*@%";#%\)#+1#+%"*%,8";#\("50,"#%,\(-%-#0+4$"%";#%<#\)\),2#)[ 9.550000 17.500000 8.500000 17.525000 7.625000 7.625000 16.850000 25.625000 8.500000 9.900000 16.600000 16.175000 8.500000 12.725000 16.175000 12.425000 15.700000 16.175000 11.625000 8.500000 9.550000 17.500000 8.500000 17.525000 16.725000 9.900000 16.600000 16.175000 16.600000 9.675000 7.625000 12.250000 17.525000 9.575000 16.175000 8.500000 17.525000 16.600000 17.525000 8.500000 17.525000 16.175000 12.250000 12.425000 17.200000 17.700000 9.325000 8.500000 9.900000 16.600000 16.175000 8.500000 24.800000 16.175000 12.725000 12.725000 17.525000 17.725000 0.000000 ] xS
1 0 0 -1 530.85004 193.5 cm
-8.5 9.6250153 m
(&)s
1 J
1 j
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -656 1132 cm
1186.8501 261 m
1186.8501 277.04999 l
1068.3501 277.04999 l
1068.3501 288.10001 l
S
0 i
CM
412.35007 831.09998 m
417.15005 843.90002 l
407.55005 843.90002 l
h
412.35007 831.09998 m
f
0 J
0 j
1 0 0 -1 -656 1132 cm
1068.3501 300.89999 m
1073.15 288.10001 l
1063.55 288.10001 l
h
1068.3501 300.89999 m
S
1 J
1 j
0.60000002 i
1180.0043 277.04999 m
1305.3501 277.04999 l
1305.3501 288.10001 l
S
0 i
CM
649.35004 831.09998 m
654.15002 843.90002 l
644.55005 843.90002 l
h
649.35004 831.09998 m
f
0 J
0 j
1 0 0 -1 -656 1132 cm
1305.3501 300.89999 m
1310.15 288.10001 l
1300.55 288.10001 l
h
1305.3501 300.89999 m
S
1 J
1 j
0.60000002 i
1186.8501 972 m
1186.8501 985.04999 l
1068.3501 985.04999 l
1068.3501 993.09998 l
S
0 i
CM
412.35007 126.1 m
417.15005 138.89999 l
407.55005 138.89999 l
h
412.35007 126.1 m
f
0 J
0 j
1 0 0 -1 -656 1132 cm
1068.3501 1005.9 m
1073.15 993.09998 l
1063.55 993.09998 l
h
1068.3501 1005.9 m
S
1 J
1 j
0.60000002 i
1177.8394 985.04999 m
1305.3501 985.04999 l
1305.3501 993.09998 l
S
0 i
CM
649.35004 126.1 m
654.15002 138.89999 l
644.55005 138.89999 l
h
649.35004 126.1 m
f
0 J
0 j
1 0 0 -1 -656 1132 cm
1305.3501 1005.9 m
1310.15 993.09998 l
1300.55 993.09998 l
h
1305.3501 1005.9 m
S
1 w
1 J
1 j
0.60000002 i
1202.7599 923.29724 m
1211.5468 931.69348 1211.5468 945.30652 1202.7599 953.70276 c
1193.9731 962.09906 1179.7269 962.09906 1170.9402 953.70276 c
1162.1533 945.30652 1162.1533 931.69348 1170.9402 923.29724 c
1179.7269 914.90094 1193.9731 914.90094 1202.7599 923.29724 c
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 530.85004 904.5 cm
-8.5 9.6250153 m
(&)s
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -656 1132 cm
1202.7599 212.29723 m
1211.5468 220.69348 1211.5468 234.30652 1202.7599 242.70277 c
1193.9731 251.09909 1179.7269 251.09909 1170.9402 242.70277 c
1162.1533 234.30652 1162.1533 220.69348 1170.9402 212.29723 c
1179.7269 203.90091 1193.9731 203.90091 1202.7599 212.29723 c
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 23.5 551.5 cm
-8.5 9.6250153 m
(6)s
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -656 1132 cm
1113.4099 565.29724 m
1122.1968 573.69348 1122.1968 587.30652 1113.4099 595.70276 c
1104.623 604.09906 1090.377 604.09906 1081.5901 595.70276 c
1072.8032 587.30652 1072.8032 573.69348 1081.5901 565.29724 c
1090.377 556.90094 1104.623 556.90094 1113.4099 565.29724 c
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 441.5 551.5 cm
-8.5 9.6250153 m
(:)s
ep
end
%%Trailer
%%EOF

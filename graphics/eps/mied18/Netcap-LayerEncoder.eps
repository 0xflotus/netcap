%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 1962.000000 809.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.14.1 (Build 18B75) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 1962 809
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 1962 809
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: Futura-Medium
%!FontType1-1.0: Futura-Medium 1.0000.1.0000
/FontInfo 1 dict dup begin
/FSType 6 def
end readonly def
14 dict begin/FontName /Futura-Medium def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /P put
dup 34 /a put
dup 35 /c put
dup 36 /k put
dup 37 /e put
dup 38 /t put
dup 39 /T put
dup 40 /i put
dup 41 /m put
dup 42 /s put
dup 43 /p put
dup 44 /E put
dup 45 /h put
dup 46 /r put
dup 47 /n put
dup 48 /period put
dup 49 /g put
dup 50 /z put
dup 51 /N put
dup 52 /D put
dup 53 /ellipsis put
dup 54 /one put
dup 55 /six put
dup 56 /zero put
dup 57 /two put
dup 58 /eight put
dup 59 /nine put
dup 60 /four put
dup 61 /three put
dup 62 /B put
dup 63 /plus put
dup 64 /seven put
dup 65 /five put
dup 66 /b put
dup 67 /l put
dup 68 /o put
dup 69 /space put
dup 70 /M put
dup 71 /A put
dup 72 /C put
dup 73 /d put
dup 74 /S put
dup 75 /u put
dup 76 /y put
dup 77 /R put
dup 78 /H put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -1074 1 index div -591 2 index div 2707 3 index div 2164 5 -1 roll div]cvx def
/sfnts [<



140706232226016FE122563C3D2B2B2B2A3D3D5603CEFC3203CE01953B562B2A3D3D2B2B560000000001008E000003F90699000B0000011101210901210107112311016F013D012EFE5901C6FEDCFEBE24E10699FBFA013BFE67FDCB019B24FE890699000001008E0000016F06990003000001112311016FE10699F9670699000001008E000005C603E9002000001333153637363332173633201901231134272623220615112311102322061511238EE1412E314AA5606AB50149E22223505D55E2965F57E103CE5A4418199090FE71FDA6021D8C3A3B8C9BFE09021A01048E99FE09000001008E000003D503E900150000133315363332171615112311342726232207061511238EE27694AA5F52E2282767702F2EE203CE5A756B5BCEFDAB02209037384A49B6FE2A000000020060FFE4046F03E9000E001C0000133400333217161514070623222726371417163332363534272623220660012ED9DA98969798DDDB9494E64E5083849E4F508381A001EED301289595D9DB94939694DC925556AA8E8E5556AC0002008EFDEE046C03E90010001F00000123113315363332171615140706232227013427262322061514171633323736016FE1E185A9C982848382C6AB8702174C4D757C9A4D4C7C754C4EFDEE05E06A859493E0DB92918901748C5859AC8C89595758580001008E0000030B03E9000F0000133315363736333217072623221901238EE13E303143596167403DB8E103CE574118193ACE2EFEEAFE070001004CFFE4030303E9002600000107262322061514171E01151407062322273716171633323534272E012726272635343736333202C4BA2C411F2C82B37C68658FF566C028152939725822442362283357597FBB0328635A292038374D826E8D5F5AEF59461326683C3411201130303D607F535300000000010035000002250533000B00000111231123353311331133150176E16060E1AF02FCFD0402FCD20165FE9BD20000000001008EFFE403CE03CE0015000001111433323511331114070607062322272627263511016FBFBFE11D1C4572B0AF72461D1C03CEFDD1F2F2022FFDCC75554C3D63633D4C448602340000000001000BFDEE044E03CE00070000250121090133012101C1FE4A0105012A0116FEFCF8FEFFB50319FDD00230FA200000000100130000044703CE00070000252115210121352101D10243FBFF0277FE0F03AED4D402FCD200FFFF0023000003D4069902260022000000070004002302E70001000000010000CA632CC75F0F3CF5012B080000000000BFEE600000000000D55E226FFBCEFDB10A93087400000009000200000000000000010000084FFDEC003D0AE0FBCEFECB0A93000100000000000000000000000000000031040000C802780000078E00B704F0006301BE0000027800B104F00057

00>] def
/CharStrings 49 dict dup begin
/.notdef 0 def
/space 1 def
/ellipsis 2 def
/plus 3 def
/hyphen 4 def
/period 5 def
/zero 6 def
/one 7 def
/two 8 def
/three 9 def
/four 10 def
/five 11 def
/six 12 def
/seven 13 def
/eight 14 def
/nine 15 def
/A 16 def
/B 17 def
/C 18 def
/D 19 def
/E 20 def
/H 21 def
/M 22 def
/N 23 def
/P 24 def
/R 25 def
/S 26 def
/T 27 def
/a 28 def
/b 29 def
/c 30 def
/d 31 def
/e 32 def
/g 33 def
/h 34 def
/i 35 def
/k 36 def
/l 37 def
/m 38 def
/n 39 def
/o 40 def
/p 41 def
/r 42 def
/s 43 def
/t 44 def
/u 45 def
/y 46 def
/z 47 def
/hbar 48 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontInfo 1 dict dup begin
/FSType 6 def
end readonly def
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-1074 -591 2707 2164}def
/UniqueID 4208071 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C55AC8266BDD340E521355EEF85826934CAE169B3813170EF21157F980278DEA2CE475C6187CB4267A04435AB7CCB196A466EDED31699319305B4913DB428C1F94A0BD0621B41DEC2216CE6C1E3EBC36487BA48FFFC5F94B7C8705655675D4E21DD11D422EFC346F0840F70FCA808FD56424C244741A5EEC370A3276C5E050182153744A195066BD7AA429092A1D177FBAF786F0AF577C4D7E983BFDF2B7FE821BBBBAF2C47B5474634AF000938B50CA57602DBC21791D98D90E067E2300A1614E887B59D50221D75A9928A958D075AABF557AA9CAB58CCBDA1F174D16F06D3C95C5044D358049C69728731DE160C56C1B3B562316DD8DDAF90131E84781E585ADFBABAAD9584BC18BAF27A0C79E389F88A9A82D1ECE15D99C6500EA7B7AE822DF12FA8C7CEB686F2B1CB32ED87E8C086DA0243DB5A737840F61BD119C7EC71004E67B2BC02D37B86B594CBB32AA0A0D73D3CD3240806E404DF9FCC499D949E9DBDDBFAA32286D426B816EFC44A8BFBF00B25BB7772BEFC062903A4EFC9301C7FEA574FD06C6DA409B4CBBB2384CAD8CAC33B8C45104B09EA658ACAD5CFEABD6652DA5CBEC375553E69FF80AF7B950AE216F261FE953E3FCEA1A3AA7D9242FD135FF86BBCF9E7CDE41012D8D45A2D4A35762DFDFF3556B5B42303B7F5A8B89DC4DB09DCDEBA07C7DF02C948DB4E6092732C2DC442CD917AA55054E9AB76BE7B3B6AF2267D06F366672EDFA57B6D089AED44CD3078FAF01C36EAB34F250115BE47B6EBB32A7CFB0ADC4A86DBC468566C2DD9631A490E083252B90AEA76565148F573F17FD
DFFD43B47EAB8D85CACF4CF349A2E697F01C589778A8107593EDD344EC25E7E34AD8EF6CC84876BC1BC05583D8D8093B784950D296FB2DF815C130F5124D2F3ECE3CAF309C941012CA362E4CB4909F96554949C59BA071724DD344F0A5ED5E5F372058722F7B0A27FF997B4ED4C890589C1788DF942DD69E3E64DDD36B17E721AB8714B624E0AEF10E36E64146A939056434BB469EEAC3267CDD12B9A639DAD06EDB45427818270562B6ACE72DFCD282A5E76CDDD3A2126CC6B4F158F41D52ADFF4EEC0B52E15ABB3FD94E7221FDAF3DC3813DF7286DF56D345E6AA39FB84AFD86E259A2F6EFC24FC33A3EB7569AA3E204D7C9C4DDF726484416396A722DC6005A01DD14D3EBBD1D85FB79F1F54E782E150BA883DA239AA0BDE568CFFECC03B0EBC87FEDCD4AF7CA95CB423BF8D6BEC3DE2AB966A74C64E659236DDCB2BA4E03504D274F5A7A8497BA5B26B33CA20AC6707D68B6F4B2FB8959B50D8B06D96743A968F95B05E974AD6C76CE4F7D345F42BDBDDB48DCCAB24526DE233F2B559BAC6E4664030C8DCE97B88A232899442CE91A15F6A8C745DB928D66293A74D01620D0FF218EF1079F94274F7B89F877E4CA79BFC03176E68C0BEFA1AF25E7A68FD58A1BA73D8186E3AFDCD4E2CCAA52D414C82217549E375FD837D27CC1DC00705C1409092571AB0C68991C0E389BD1F45A49AE284651602CE56588B9CB7CAD1A514310903A8ECF3B55A7B1DEBCB9DD23850386040CD14043F75DD827256C584563C5963D557C27B8FF7DBC53373DD736FE7D2BC546E3EA5C547FDDE3D7288AFEE599B2A5E1CB6C8D9C54E84A28D4C3902D545F6FA4AF828BE52EEDB7C5699F6EC000F577867CDFD51944C5BFE8CC332D7209742BDF8E36670DC30B306A1CFAA557FB4B951D9C6D1D5A279C988BF68F35427D9D7946606026853E21E31D14AD1EA42C4EE1F7307E54E596145DCE6E9E0AD3D934EE632BA044981E019AB1EBDC5D57A496B39ED3C4D9AD6E5E2FC0B0E0B6438A4634C58B4AB70AD93945296361B69803B6A1DE07315C88CE3761CC238A2AD41C5A9452367D9F5BB67BAE1637D3C318146D83002286140350F724A3F3425CA77E699947F7176EADEA718D510A8AAF2008E4F689498DA5F0605A1F753F5555BF1DADDDE4B07B1C5227E9F3D2785A13A34D504073B9D146A2D309AF9F7556FE0CB01E067D25AEED789D379B20FC67B9D581C3C65C996CEFEEC628BC4B80625E98289F9217E99337C44CCA09525C30B57E330BE67856840AF6BB7C881021709BA6F960924603B3CA7459E26FE4D8B7E3DEAAC63F9AB35C8E05C7F1D5D6E1815CB98A56ACD6439C8105A85E1CFE953A8453ACFFD05067A3C4DCEE03135E00C60BC6E5E14C9BD402ECE31132C00F96F835F542055E48D85731353437947B32F642B0D7CA7ABEE74F8DA1A6CE3944FCFF7CA7

25B3BFDAB0AC1F61D79C6C67682BD35F29AEDB6AF5224EE7F64218EE4F50703023AC29B6BE153758E6A48F75745CF1C0D6F94CEE5AF7EDAF0F994A5C27F79C7CA54FB48C530C9FDE5B3DE09E475E53DE1DE43EBC37206962CF32659BD70F90115F1561EDD2538B706F3CE284EDA4D1DE50FC96FB6678152AEAD8438E60DE79E1D7EEA5ED257F9B000FA3CFE4D409D7172102175DA7459F633C43E6A4082CD8F3EC8091E06DF4698112E6CB606D71794A564E8B8C1C7C6A7CCA7BB5C6EC91BC0DBC8D2D67A986C21BBF745B9B4B3930E61C803CEBACC134D8F385C0D576C15E879C3C416C2190DBFA1750A1DFE640817394CD5F9C5D3E3F79DBFAC367DDF3752FADADDD7D4CDC0D12A88C0DE905E762315D631C237B2A0DB5A64CD2E8226C87C06756372307C7422FC5957A0935305636A263D64614D0D459C17573BB11A7C25436960EFC196625DB4EDC13B01C282AF506DEB21134337DA6D4B132D663838925A213E63B67DCDAC8A384DBA8A5B8CF24B0133F9F7C4F9354DCF878EE59312970ED06B028525D08369CE41C03179073B097D29416B525FCFD5079F8DCF364D6321EECC21C078CD07BF936A109F888D2491E55FE4184A3FD22387CE4B184A1938FD9BD0CA9BCCD8D722DF92DA7E70AFF3387A91BC9C3FD9CCFE437DCD99B85FF872BD2CEBFAEFC76C649C646F3A4E806ABBD1B4F82CC4A2FB34E8AE4357F93B587899B0B723CD90F3AE9626B0D1A2DB2DD9BF9D35E6063104133D3B388F1D0595002E4311163C26326CDFC10FDD3AC2EEA8A929EAAC72CD53177CAD1BBC632D10565257D66295809FAAB4D0C1802A307BCB47F24E1E80B51BE85F36EC8AC9F6EA78E83C1355724E0889DD2F46570D35F813093AE00E8341B70FCCBE830A5BCABB04D462404ECE47F82B18D9760C1FD70D3EAF99B5BE5765113FD9117E5218303C30A03788777DF3E5CB8A0B027403DC7D3C47612D2F01F615F304684A993F388F9B14AFCC0724B529242CC26F2E0DE903549335C51D404661CC2E69E096746ABDBE0C3E3BDEF8F09405A68A34E5D028714E8FE17A2C6ABFEB414B7DB8009100BEA262B7A97AFD7A5725569652C4C54A567205078DDAA3DCB1840C08ADA698880B01ECA44387F8384494C66649EA6D9CB5362A09CBEE82E9C928EE9164686A0D0CC01E2FF3E0D0B5A56AD99B953594F717BD43607A1FD60E9C1E1A6EC191EF518F57EE57419722FE13C7BD68E9A1C2BB875638504D85B25F2365CB74014C939C14F70CAB85F77DB07F57170C8A7C3E65575290AD84D5C613DAA10899EFBEEC977B5B3AE230DDF0F88142DC898AAAE248D983AAC9126B813C5ADF36608E0817AE435A0C63ECB7DC5F91297A05BF6A27D0127B8D0AA945C9CBC0D13FCF2327541708E1C3D766B208571503F2166652742599F671CD6B0C6E17BF62750B72452D9652A
A1DA5D060B7C2B0B40CE4E371B5D28343E311AE68A620B8578A1DE6292D29D19ACF4F3504E99CD77E2B29FC75348E5B937882DC6B929EF9739F9B4B88893E46E128718DB90BBCC3AD2A1650E7025EDDC6257D8E62918B108CF5E28F51A5854FEB951F9680ED1BF06B923AEE6CB30F44820D092EA51F4F9A37A17D03F2D812C700FD72D2E7FA8D5A70C65338A9725860A1D8E11FEA7CB30C7538802CAC8E5318A1AF29D9D047252954DC194C005A7715B8F620E783369BF81AAD6751ACB55A4E6582779A631F3E8AC23EADA96AC1C9F6267505289919C1AF92410F48E6A22C064F0DA2D60D8955CAE86E82FDC09BF9925CF69C3BF9F0B38F5C352313159159BBA9B5AF061C39BF8971E0A08666352D5CC4930BB4A16A8B72EAECE911F67C80483E78D93B5455BC33348A17B3604AD298D48B0B1E539EA5C3379B6379F07A3A512AD9702FC2941E20DE314F633F399875152914CBC7D744566116971CD561044BB5A69F0485EDC7FA5438DD6ED959F6FA76B91593A0874AACCE675CC5A0CD39FE546C32F2BC0567941B681BF5811F98D47FD0B8BA018C4A3A1572EB75FD36F9B61C51CED055503E054EE7E1E442F6DE637CAC20792A116219CD976613F876848CA17785E5162E8BB0B470E16E4CFF2743CDAA2F5EFED63BEF1CFE74802F354610E33A1F17FCA3BE9F545FEF83AAAA39CBAF3161BA77F16AB1F3748F6E1D81B51529FB2BF8DF483B398CCD705D36B55B328D61928F102A8E2A62E0B5FDB51B89191F927B7909473A70B89EEB52831ABCA27E55F477C87C8E6B3C2B53E8C536329A73B9F2A43C51B62408D706C07D7D91A5170C2D92A35967DD50CCFE4CBE4009BA2E667B1AC3E6BC2476BB43486F905F92B928234CF0785A94C11F475D1484603D764B81E1E2A94940668274B91E50F8777A6D994D131DEA03B9166D7D714BA397CCA945FB1B1137B161FD35EF9F841B75FFB7E4D0938711A3A10CF017AB7B8CCE6B93F51F0A4CD2D57489E647BDCEC54C2D8A6584388D024134A6297A6A5E0E7746C38CD8DA423B32AD920926752BCDB83DA2E1BAC613BB3AAF6D0A150CBC59F0F3D8157D466EE092B11E09825D8D908BFC6983151C058A943B3DD27769B4573F532231DFDBA52CDB12860C1F6DF65B4FC2569AE61EF6E9F52C8FA958995A02C304BAA34BCB5B227908979190F8729638A9A32F84EDC92A45AB37913FC3DED03B9BEBADA3A5E3B48994BED7B65A7AFDB9FB7E53503A93BD2E5797505F09D4CE3B0D502301A02D079110437EEE91AA1869C7954378D46B78A8C7B66D274DEA236B211F2740FE875A0F31E3C6E45A8F2E4D152CC67BFAAAAE262FE335F96100661C4E2AB04547B8E9B6A13EAF7345A07975FD864ED6373ADAEFE12A6C92A53E75936E234A7B1F1834557B73A9B5E791DE069EDBED49A7E5A390CF211B1BE0836C9FE
1AF5618AAA38E273EB5DE087B9484999B9C5D62F6650EAFE2FB80CB4E76D1093B66C19CBD237A493CB340DFBD7720DEF4086FC3541FD9D6ADCC0035C3B1177F39A89A568978F55C94AFCAE6DC8BDB8554397D6F58DCA0AB76576DB14C8E079BD49E5CCA11191166742989D5C65FA12B6BD0EC749050D1B14DC963FCDD919383684FEB201887732297FB969C481A58DE9DF59FAC410289BE8A373C29A804AB84185929123EE35990D3AE75D749DBE590695EBF73B30DDD7F68A8C5D9A02BA939633561EF91DAC19F66E0D78F058DAD006D9ED088C231B8F1F25C8A0C5EC1F21964C4A8B8B2F425B412E35F80EBA9DE56FC653F1485AAB19418F6F99DABBD779CB36330907C37A68E78EF37C9157560E12BFB4C81A7AC02C3852632093647663DF6FFB4175B07B040848DC1DA2240D34C8C9CC24B4EE5843FEE76E12FDA0FAA9B6FF42513BE2E32EB84877C7F6F78DA33DCF2C021E31DC27BBD202023AF52BB84805374BEC7A9D870C22548481F07032D045D07FA9FCC7B2C4D052144F6A278938DE6868EC7A1D4C9E567377C7D461A4DB3485109F7CCDE55139F92DDDBD1B9D11D1A04ECBE267A4A33176CADF2EF103DCF9B094DB48408E2C985E6DAA91839D6BE39E383ABCB3316E026B4609F8E4A6B2C3074B1AEEBB6D78D09401BAD00E55A4CC76F090EC427BFEE330F1371856D4F6C183B5361FF7D1CF1155558A14A437D61D4E774023558553EE142995E83FFABDC84019C567C4E8712E55004FF44FF6618CDC77243C517C2DB9739A746D82DF6A957B77FCA46DB5E10E703AD8D8021A9B7C15E9956C7EB86A610043BE13A4D6B5F4B6113854C63AF4ABB2679110A9B0BC6B807E1A8F8C2CF8E2F57640007337EC9E421863CBE5A1C7130854F336B53CD060FAEF8AEDA1E46C8BAAAADC881D5CF92A1570DD30C638490EEBE266D1321A1D552FDC396FA2C342BAFCFB464C8710A878D23E5CEA6D145B7F6091B9BB73810406D4EC307CB69BF88304BF438AF9C50499B4065073096C27EA98A3FE922613A55392AB2CD70EBBDF79B9ECFD9D1F99AF74262A89CC9C1B4A8E985DAD05DAA5FCE1A94D0E1140CF86E157553A95E8E69501DCAD0CBCCFFB233A0635E1D184F752DFC09E3BCABB9952088B6FB8DEE4F0FBE5DE15DE0DEC862661A1FBF698EE484F0BE112A93DB5C16AA3AB02BA09E0A9B693D43039E65EC62AFFBA34118A0810285C0CE4F8ECF0FBB1B51F71F8534D234549C48CF6B453DEC57151CA4CE356A699D9523F5CB7AF37BAB4B14404E0EB74A35DBFEC9DFF7CF158F735A5126F7CBEDDF14132680181D209972EF564F068270DFF74A29F1B706D9BF0A4C86A9D65F3DA6C6D5C9336F0905635FA2D8351191B05C7A9544284A486654051423705BF5BC1E5E38A969DBCAB8C18241B95E2271C6B41C42C28F577EAD921F0B16E24B87C43
925A5AF3D0C1CEA7C98C64492229793BB98B53EC7BA4BA713AA5FE5337D52DF8E970370CFC172C79D9ADD96058CEE8EC8772CB6B44FF444B169541CDBFCA6905D313FE22E027AEF70B0A3590C01799F36A07C34FEC60DD8B66B3A719CBD069528844C47D964CF10FA1341209A392219EB6EE9640562C9B63B5D4A8A8B998B421937CA111BBFAA669F028B86186457B7DDE0DDE402F91CEE457542E6EBACE650E67B8FE11355BC0DB1137604E5A27416BB936ABBB6FD1EC04AF543906069B1A6FDA0C119ED51C290B9464A2105CFF2F175F9F16ACA64DD8C2C4CAB989025A2B61202D4167D469EBE81B29C4EDD1B07C5913B990E4E9D9B70737747EF74227F472992276B1094DA04EAF95383309CC8BCAB273EE360B7A76D492564E7851057B280BB630962255E3211AFA478FAE0B7F66FA3847A406A4D42C05348A298ECA602DFAE7571FFD371C5285D68EF4735E429316F1EB9A4721B6F5635C02BF38436252F6103AAFEF35FF8AEAC07CFB48656C96A587AD6DACBA2FA9BB5BE0BC230810E20E02F4FDCACCB191D27B2E8A4889991827C47B477DC8CBD0130F61D13C5BD3205ECB59B6C3DD6C804C3E65C2A7652270FDB40B10F149AF9B3F0D1ADF85AD10C5F448CFEF26BFC39790BEB532C331EAD82445724805E4E9602267761B90E39FD73800EE8C8AE413BF649DB19B824202938A80B424D00645D9781D5B
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/Futura-Medium cguidfix
/F1.1/Futura-Medium renmfont
%RBIBeginFontSubset: Futura-Bold
%!FontType1-1.0: Futura-Bold 1.0000.2.0010
/FontInfo 1 dict dup begin
/FSType 8 def
end readonly def
14 dict begin/FontName /Futura-Bold def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /D put
dup 34 /e put
dup 35 /c put
dup 36 /o put
dup 37 /d put
dup 38 /space put
dup 39 /P put
dup 40 /a put
dup 41 /k put
dup 42 /t put
dup 43 /r put
dup 44 /l put
dup 45 /B put
dup 46 /u put
dup 47 /f put
dup 48 /s put
dup 49 /i put
dup 50 /n put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -227 1 index div -344 2 index div 1459 3 index div 1099 5 -1 roll div]cvx def
/sfnts [<


00>] def
/CharStrings 20 dict dup begin
/.notdef 0 def
/space 1 def
/B 2 def
/D 3 def
/P 4 def
/a 5 def
/c 6 def
/d 7 def
/e 8 def
/f 9 def
/i 10 def
/k 11 def
/n 12 def
/o 13 def
/r 14 def
/s 15 def
/u 16 def
/l 17 def
/t 18 def
/anoteleia 19 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontInfo 1 dict dup begin
/FSType 8 def
end readonly def
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-227 -344 1459 1099}def
/UniqueID 4364665 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C92626C4DEA81D313B50D8F4EBFA95F2709469CAA9CCEDFB298F70C76D2AF510DC749A536B60A9224F5AE291E7510584EF00F684B123515BE50E27B3E0A9A8B2DC4EA62024B8C46676283440C071C47E17EE772557B2A7BA67622A0182D4C8921B337D358F4257263B949393D3BF125FB923563EDFD9049FE5B63657015A5C3A7BEC3306469DD436634AB8B8F22124961F74A228C0CAFBF49D246F86E31DB9B8345A28C7312F226258D3011DDCA1CCAB8A6382B895B9CBDC661D0E90C0B40840B9593254F8D5CBF61EAB8601ECBFEB534BD7B426F5FC9C0FE98264F972526192F7A720FEBA864FF30402E6BB65978140148F4D7A32D84BFDACC5224AEF1DC195E0C60E74E920025AC1EE23D61F65E735107A2FE67EA9A042FC36111110CAD09C439110825FD50DBDBD64A733E0B878DF962FE3145133B8801AD0F040EA132575A1FCDA1DA4AB49BE72C13A3C21E6868FF0F590FA339349E68A0521D8ECB0887E02EEDBE7C0E09EE2C6BE62ACDD240F1A7A4CFA07287883C552716196B7F397C89F20908976AC03C6C9F1101840A0E1EF344EE9F6E26E57F6EE2814114CD9DC913759FBAC7B820603DC5BDB50F14D50483C5866E9CE127425C9575377558FBB48A24468121656FF0D0AEFE4154BCCB53CEC64A7CCFD171F3342B542F635558ACA19F7115A38EDD478856310FD813DAC6039F57C8499A3E90370BD4CEE003A84B63D3D463CCDB5B3DE80ADE6A3CF1CF20C82D2F018B01205333CB2370979D9FD523BB
7B02E23A01F6E055C3213DFC3A5EE2DE4E01BF0067E7DD8225986C4E70F6A46383AFDE03CE7F702626DF2376291F1B6D303232BCA753485A57787AD0B28EF5D078B1EBD4E4A666B1A6F9D6E2421CE66D100D408B9D6CF55B77A934D3421DFFC3391D5F3DABEB0C3226D7D99B19A3D51034E928EBD4C6A68AD8BE3A75FABCB3BAC6F310BBF9FA8C49F9C4D88782FB667942EBBC802BE6186BC45DBED0912E11D515236B63C6E2F340107D97DFDEB54C9CE6EDE4E398F58370A6E76456BBFB3B5CD45D6D65A1A878B7C8315096A8770C4BE620A6D2270184FC1A416BDA68510C4356C177830F81FFD018DCC66CEAC606FC6B7B47B321B8B76F954FBA3C0989D2513EB949FDA59363F6D6BFEC8226FD4F77C23C329829B85B3275E6802C284F105A9C0CC82BA5B57BAE2D0398E8D729392E5277A3D1F980431BBF7F8C0541CEB9CFB90D00CD601237911586790F1B6E7411307C95C22FA8C78665B155109CC2B10B8DAAFCBDE6DEF2652C45919A2C1F210419E7D815721921DC7EECB55D4F3644C6B298DEC5A31906A959191E96FF9024EA3C1AE622475BD22B8A528BD30CCCFCEBFD03BDC5E934FC1E7AFDB19CCB8C2C230E85F9FBD3AD21CDF69960D183B6C29E95836563D542D692FB524CADB581D883E01029EEAD2DEF638CE2C84969F77C16B1687E4B35A96699F1C952237C69C12D62CA1B4C579BCC1FC7649757D84A7B71DEE0E65B9FD7E19DE6BE23CE47216C7317B2498F971139508F9EA4CB43FC6A5ABE21D3D940A47B302CA0A79BD6D536FA82833BC063B96FD07EAF7A30B269C12C69475ABF1D7002A25D5ACABDC1CB4AB97B4827C937397B434F78FCB86FF0293D8CE23B7EE095D4C89F58A044D918A31A745AE30AA02FF4DB17DDAB82DBE6754FBEE313622F91DAC622D2CF4BE474DBF55F9CEBFA5A14186A9E8DD08BB898D32F34321E531BEE76A2820FD636027207D09AC4959F2869E7BAA89CD06994B3999422642F73179141199BCF3C3ED992E47CD72D8811BC7E9F56129286ED81F8E3B11BC191319FF1AD0736D1BC8A554C1C5D7B13D09A10D7129DFA73C17F3615C0363752F5D072C1329C16EA0BE4FEB9E8DEA0C6D1AE50A44DC50EBA7F4F8C8508F3D194E5C3E81C751A9242C76024E2CB9E8ECAB42FF91781E941F17A3762EB119A732F74863EDD71CD7B0B4389FF9F2F56D0B995C8333F25999015BA9B38794B7D7FF81A636BA2DD076C82A6CB8549C63070A016D3251AE40596BD14845D29659FDE06B72EDCD57AF4001D4BCF626B7B86918C92E05341B72903F03F1283C1B76868C157FC6D6611E12CBA10324BCF3BC4052546BA3B2C001434F7FCC27D2DE0885F8C62DD9EB77FCA118DAA21D2E37A61382B8AFE55EC16C08CF017A7E36470B3B2B204806551309E226035E0756E4EBB8B5BEDF921EA547870596605C5CE6E13
DE553EA1F88664E423EA8CA4E5739C95BBB3B9149E6745C577733E526C87C4363A38931CF4470F912FF6F0D6D26E876A55F051ADA04A2830F300B99778D19D5973FA061B2F4DA47F0760DB9BA3FC79036E40B7A7490F16EBC0D5A84A8B741FF298E33E1EA78B8391F4F4FFF674B674C44BB3FB243FE1466B5CC037BE3307E892851DD85B49DA28877B03B2B229CA8D1888F71734E6D1B23C80792463EB39552B389763D07BD404E5B3336089B31F28BA352EB3E7249973094E2976613F35B01BC7707E036D8C6661C9AAC3EA7327BD76ED158E48D5038DE049BF67F9F6783AFE99EBC083F461A851513F0E72F6B0A56A332950857BF7DA3E0F59FE06C76F9715AC3279580F7B92A8649E3CC9B9303AE9E12BD9A6039D6955835388EF9AB2288F9F42A986A7403C138FC81CBF947BC7B4E99091D01008BE369FDD72EE95C7D9298E844BD5AE8034A7E44497BAD994B916C15244228A449EBFE9B32555D037D586B7BB144A503B284CF4933D9645D4CCA18F590C324F13E27A8B9CA3DB1E835A753326E830BB23CB75FB1774C1CE06552794232D3368248FC2AAC465B177E14E2345B127E5CC511FE357AAAA80E7EBB44D1199F6A3088960DDC120493353C192A0655A9E5514FCBBD87809F6897FA6A3A844EE178E1820595BA4DFB4A49CA8C63101042D4466B0C8D9EBB7986BAC1A9CEBD8D9E65D198A231062A3A2360CB925D103730AC97D52C344ABB6BDCA7ADF6EA946798B3BA480A2900A4878AAA00385984663C1FD44D0F33F1F3C2A03156804C3360B435F9F44C16321C02328D2853DB9C3C34BCD4CF057FDAF608D958AE43D1CC86A5EB70683F4FF6B15E1BD13D6C57D2BEF81CCA2B0D937805E35C0BF790571423F015AACE0861330B9560733C8F9B7FE3A10CC9E2630B5A79D21DB501839E7283D9CAB812F7D253753B659C55F585B09378BADA6A68557F8A22FFD52B014A5B6573FBA1C80A3708EEA5C375C0E0BD97FE40FD4178CB8979D9BCDB6C522125698BFC2F9EDB80CB9A4A9BF1E170B13048CD275FCB6988FA6AB06923F4A552DFFA0BB1B59C76DB214EF3568677B869606B86CCE73ECFCDAB2D4CBF1D6769F912DFE74436D902398C01DC963731924D852C61E1BEB92E894434947619CAEFC4A64184826EBE533E383E840B4B09EFA78544CC2747D467FDC86C0DC8F9D74C5785F269B0223014133C5AAD0797963E849C1980D7D13E70B0E4C10564933AEC8DF7791491D9875D96492C35FD4E4EF09D0F6AE51331E00A757F9FA1FF2663BA569601E159E00BA3BB1DC4AEE7C9B897B1624E3F499180A953FFFC1FD5356CC9A3B75723B9F8B6778033C855942E0C418B73DEC66CF8C088D1A0FF0C966ED7D624D7687D9756E4552902B6C52E53B410CE52295D720C9CE542A219FEFE4BFD9594938B1087F03D1A37D83263F7253061715B7
CB5B41EFBD6DA89A146B90480F8AC187779368C4FCE09797BE42C4B163563DE660DBA851BF53AB54CAE950165AAE46902F6CEA3B4CFB0A8398F2A57A2EE99D48609695C47648A76972B2C774A19C4F0934B2EB8EE6D5AF75E70010DC69B574EF5814978B50AB1FA023F45F827B54A884E92D91B0D5F616017E664D2D9158F1BF77B835B61974DFA071E86D92485DC5F6F40C13B4C4308B8D000578C255C1A0003B9A9564B058DCAC4C473E8908FD116B1119CF92350D91523F258BB4B2E71820B54DE99EBCBC96274F1BBEE12A518A3388EF549AD802584EF0403574227E1D335E6AF355
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/Futura-Bold cguidfix
/F2.1/Futura-Bold renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
 exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
10 w
1 J
1 j
0.60000002 i
/Cs1 SC
0 0 0 sc
q
324 904 m
1492 904 l
1492 -95 l
324 -95 l
h
424 804 m
1392 804 l
1392 5 l
424 5 l
h
424 804 m
W*
0 0 1962 809 rc
1 0 0 -1 -196 1056 cm
620 252 m
1588 252 l
1588 1051 l
620 1051 l
h
620 252 m
S
Q
0 i
1 1 1 sc
q
0 0 1962 809 rc
58 492.89859 m
265.18732 492.89859 l
265.18732 316.10141 l
58 316.10141 l
h
58 492.89859 m
f
Q
0.60000002 i
0 0 0 sc
q
-42 592.89856 m
365.18732 592.89856 l
365.18732 216.10143 l
-42 216.10143 l
h
58 492.89859 m
265.18732 492.89859 l
265.18732 316.10141 l
58 316.10141 l
h
58 492.89859 m
W*
0 0 1962 809 rc
1 0 0 -1 -196 1056 cm
254 563.10144 m
461.18732 563.10144 l
461.18732 739.89856 l
254 739.89856 l
h
254 563.10144 m
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 1962 809 rc
1 0 0 -1 161.59366 404.5 cm
/F1.1[ 32 0 0 -32 0 0]sf
-46.921875 -8.953125 m
(!"#$%&)[ 16.421875 19.187500 16.078125 15.421875 17.984375 0.000000 ] xS
-76.546875 33 m
('\(\)%*&"\)+)[ 16.015625 7.968750 25.312500 17.703125 12.984375 9.031250 19.187500 25.703125 0.000000 ] xS
1 0 0 -1 161.59366 611.5 cm
/F2.1[ 35 0 0 -35 0 0]sf
-150.28999 12.975021 m
(!"#$%"%&'\(#\)"*&)[ 27.510000 22.645000 17.150000 24.500000 24.535000 22.645000 24.535000 11.900000 23.310000 24.535000 18.025000 23.345000 22.890000 13.055000 0.000000 ] xS
5 w
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -196 1056 cm
1593 648.15009 m
1810.1005 646.66284 l
S
0 i
CM
1628.5001 409.43582 m
1614.0635 414.73703 l
1614.1375 403.93729 l
h
1628.5001 409.43582 m
f
0 J
0 j
1 0 0 -1 -196 1056 cm
1824.5001 646.56421 m
1810.0635 641.26294 l
1810.1375 652.06268 l
h
1824.5001 646.56421 m
S
Q
0.60000002 i
/Cs1 SC
0 0 0 sc
q
1541 569.22717 m
2056.3003 569.22717 l
2056.3003 251.97568 l
1541 251.97568 l
h
1641 469.22717 m
1956.3003 469.22717 l
1956.3003 351.97568 l
1641 351.97568 l
h
1641 469.22717 m
W*
0 0 1962 809 rc
1 0 0 -1 -196 1056 cm
1837 586.77283 m
2152.3003 586.77283 l
2152.3003 704.02435 l
1837 704.02435 l
h
1837 586.77283 m
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 1962 809 rc
1 0 0 -1 1798.6501 410.60141 cm
/F1.1[ 32 0 0 -32 0 0]sf
-123.46875 12.023438 m
(,&-%./%&0/#"+012)[ 18.093750 9.390625 17.546875 17.703125 12.453125 17.546875 17.984375 8.750000 9.875000 17.546875 15.250000 19.187500 19.187500 9.875000 19.156250 0.000000 ] xS
1 0 0 -1 1798.6501 611.5 cm
/F2.1[ 35 0 0 -35 0 0]sf
-77.489998 -10.049957 m
('+$*$#$,)[ 23.730000 16.450000 24.605000 13.370000 24.500000 17.150000 24.500000 0.000000 ] xS
-66.605003 36 m
(-.//"+0)[ 24.220000 23.415000 14.840000 14.070000 22.645000 16.205000 0.000000 ] xS
/Cs1 SC
0.60000002 0.60000002 0.60000002 sc
CM
459 294.13739 m
523.69873 294.13739 l
523.69873 260.86197 l
459 260.86197 l
h
459 294.13739 m
f
2 w
0.60000002 i
0 0 0 sc
1 0 0 -1 -196 1056 cm
655 761.86261 m
719.69873 761.86261 l
719.69873 795.138 l
655 795.138 l
h
655 761.86261 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 491.34937 277.49969 cm
/F1.1[ 20 0 0 -20 0 0]sf
-21.357422 7.7021484 m
(,34)[ 11.308594 16.884766 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -196 1056 cm
931.72339 761.86261 m
1138.2915 761.86261 l
1138.2915 795.138 l
931.72339 795.138 l
h
931.72339 761.86261 m
S
1138.2915 761.86261 m
1344.0802 761.86261 l
1344.0802 795.138 l
1138.2915 795.138 l
h
1138.2915 761.86261 m
S
1344.0802 761.86261 m
1551.0381 761.86261 l
1551.0381 795.138 l
1344.0802 795.138 l
h
1344.0802 761.86261 m
S
719.69873 761.86261 m
931.72339 761.86261 l
931.72339 795.138 l
719.69873 795.138 l
h
719.69873 761.86261 m
S
931.72339 728.58716 m
1138.2915 728.58716 l
1138.2915 761.86261 l
931.72339 761.86261 l
h
931.72339 728.58716 m
S
1138.2915 728.58716 m
1344.0802 728.58716 l
1344.0802 761.86261 l
1138.2915 761.86261 l
h
1138.2915 728.58716 m
S
1344.0802 728.58716 m
1551.0381 728.58716 l
1551.0381 761.86261 l
1344.0802 761.86261 l
h
1344.0802 728.58716 m
S
719.69873 728.58716 m
931.72339 728.58716 l
931.72339 761.86261 l
719.69873 761.86261 l
h
719.69873 728.58716 m
S
0 i
0.60000002 0.60000002 0.60000002 sc
CM
459 327.41284 m
523.69873 327.41284 l
523.69873 294.13739 l
459 294.13739 l
h
459 327.41284 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -196 1056 cm
655 728.58716 m
719.69873 728.58716 l
719.69873 761.86261 l
655 761.86261 l
h
655 728.58716 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 491.34937 310.77512 cm
-9.4433594 7.7021484 m
(5)s
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -196 1056 cm
1138.2915 695.31171 m
1344.0802 695.31171 l
1344.0802 728.58716 l
1138.2915 728.58716 l
h
1138.2915 695.31171 m
S
0 i
0.60000002 0.60000002 0.60000002 sc
CM
459 360.68826 m
523.69873 360.68826 l
523.69873 327.41284 l
459 327.41284 l
h
459 360.68826 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -196 1056 cm
655 695.31171 m
719.69873 695.31171 l
719.69873 728.58716 l
655 728.58716 l
h
655 695.31171 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 491.34937 344.05057 cm
-17.636719 7.7021484 m
(678)[ 10.585938 12.343750 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -196 1056 cm
931.72339 695.31171 m
1138.2915 695.31171 l
1138.2915 728.58716 l
931.72339 728.58716 l
h
931.72339 695.31171 m
S
1344.0802 695.31171 m
1551.0381 695.31171 l
1551.0381 728.58716 l
1344.0802 728.58716 l
h
1344.0802 695.31171 m
S
719.69873 695.31171 m
931.72339 695.31171 l
931.72339 728.58716 l
719.69873 728.58716 l
h
719.69873 695.31171 m
S
1138.2915 662.03632 m
1344.0802 662.03632 l
1344.0802 695.31171 l
1138.2915 695.31171 l
h
1138.2915 662.03632 m
S
931.72339 662.03632 m
1138.2915 662.03632 l
1138.2915 695.31171 l
931.72339 695.31171 l
h
931.72339 662.03632 m
S
0 i
0.60000002 0.60000002 0.60000002 sc
CM
459 393.96371 m
523.69873 393.96371 l
523.69873 360.68826 l
459 360.68826 l
h
459 393.96371 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -196 1056 cm
655 662.03632 m
719.69873 662.03632 l
719.69873 695.31171 l
655 695.31171 l
h
655 662.03632 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 491.34937 377.32599 cm
-17.724609 7.7021484 m
(69:)[ 10.761719 12.343750 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -196 1056 cm
1344.0802 662.03632 m
1551.0381 662.03632 l
1551.0381 695.31171 l
1344.0802 695.31171 l
h
1344.0802 662.03632 m
S
719.69873 662.03632 m
931.72339 662.03632 l
931.72339 695.31171 l
719.69873 695.31171 l
h
719.69873 662.03632 m
S
1138.2915 628.76086 m
1344.0802 628.76086 l
1344.0802 662.03632 l
1138.2915 662.03632 l
h
1138.2915 628.76086 m
S
931.72339 628.76086 m
1138.2915 628.76086 l
1138.2915 662.03632 l
931.72339 662.03632 l
h
931.72339 628.76086 m
S
0 i
0.60000002 0.60000002 0.60000002 sc
CM
459 427.23914 m
523.69873 427.23914 l
523.69873 393.96371 l
459 393.96371 l
h
459 427.23914 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -196 1056 cm
655 628.76086 m
719.69873 628.76086 l
719.69873 662.03632 l
655 662.03632 l
h
655 628.76086 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 491.34937 410.60141 cm
-12.34375 7.7021484 m
(;7)[ 12.343750 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -196 1056 cm
719.69873 628.76086 m
931.72339 628.76086 l
931.72339 662.03632 l
719.69873 662.03632 l
h
719.69873 628.76086 m
S
1344.0802 628.76086 m
1551.0381 628.76086 l
1551.0381 662.03632 l
1344.0802 662.03632 l
h
1344.0802 628.76086 m
S
1344.0802 595.48541 m
1551.0381 595.48541 l
1551.0381 628.76086 l
1344.0802 628.76086 l
h
1344.0802 595.48541 m
S
0 i
0.60000002 0.60000002 0.60000002 sc
CM
459 460.51459 m
523.69873 460.51459 l
523.69873 427.23914 l
459 427.23914 l
h
459 460.51459 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -196 1056 cm
655 595.48541 m
719.69873 595.48541 l
719.69873 628.76086 l
655 628.76086 l
h
655 595.48541 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 491.34937 443.87686 cm
-12.255859 7.7021484 m
(7<)[ 12.167969 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -196 1056 cm
719.69873 562.20996 m
931.72339 562.20996 l
931.72339 595.48541 l
719.69873 595.48541 l
h
719.69873 562.20996 m
S
1344.0802 562.20996 m
1551.0381 562.20996 l
1551.0381 595.48541 l
1344.0802 595.48541 l
h
1344.0802 562.20996 m
S
931.72339 562.20996 m
1138.2915 562.20996 l
1138.2915 595.48541 l
931.72339 595.48541 l
h
931.72339 562.20996 m
S
0 i
0.60000002 0.60000002 0.60000002 sc
CM
459 493.79001 m
523.69873 493.79001 l
523.69873 460.51459 l
459 460.51459 l
h
459 493.79001 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -196 1056 cm
655 562.20996 m
719.69873 562.20996 l
719.69873 595.48541 l
655 595.48541 l
h
655 562.20996 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 491.34937 477.15228 cm
-12.34375 7.7021484 m
(=9)[ 12.343750 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -196 1056 cm
1138.2915 562.20996 m
1344.0802 562.20996 l
1344.0802 595.48541 l
1138.2915 595.48541 l
h
1138.2915 562.20996 m
S
0 i
0.60000002 0.60000002 0.60000002 sc
CM
459 527.06543 m
523.69873 527.06543 l
523.69873 493.79001 l
459 493.79001 l
h
459 527.06543 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -196 1056 cm
655 528.93457 m
719.69873 528.93457 l
719.69873 562.20996 l
655 562.20996 l
h
655 528.93457 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 491.34937 510.42773 cm
-6.171875 7.7021484 m
(8)s
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -196 1056 cm
719.69873 528.93457 m
931.72339 528.93457 l
931.72339 562.20996 l
719.69873 562.20996 l
h
719.69873 528.93457 m
S
1138.2915 528.93457 m
1344.0802 528.93457 l
1344.0802 562.20996 l
1138.2915 562.20996 l
h
1138.2915 528.93457 m
S
931.72339 528.93457 m
1138.2915 528.93457 l
1138.2915 562.20996 l
931.72339 562.20996 l
h
931.72339 528.93457 m
S
1344.0802 528.93457 m
1551.0381 528.93457 l
1551.0381 562.20996 l
1344.0802 562.20996 l
h
1344.0802 528.93457 m
S
0 i
0.60000002 0.60000002 0.60000002 sc
CM
459 560.34088 m
523.69873 560.34088 l
523.69873 527.06543 l
459 527.06543 l
h
459 560.34088 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -196 1056 cm
655 495.65912 m
719.69873 495.65912 l
719.69873 528.93457 l
655 528.93457 l
h
655 495.65912 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 491.34937 543.70319 cm
-11.137695 7.7021484 m
(>\(&)[ 11.826172 4.980469 0.000000 ] xS
/Cs1 SC
0.60000002 0.60000002 0.60000002 sc
CM
523.69873 560.34088 m
735.72339 560.34088 l
735.72339 527.06543 l
523.69873 527.06543 l
h
523.69873 560.34088 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -196 1056 cm
719.69873 495.65912 m
931.72339 495.65912 l
931.72339 528.93457 l
719.69873 528.93457 l
h
719.69873 495.65912 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 629.71106 543.70319 cm
-24.6875 7.7021484 m
(?800@)[ 12.343750 12.343750 6.171875 6.171875 0.000000 ] xS
/Cs1 SC
0.60000002 0.60000002 0.60000002 sc
CM
942.29156 560.34088 m
1148.0802 560.34088 l
1148.0802 527.06543 l
942.29156 527.06543 l
h
942.29156 560.34088 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -196 1056 cm
1138.2915 495.65912 m
1344.0802 495.65912 l
1344.0802 528.93457 l
1138.2915 528.93457 l
h
1138.2915 495.65912 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 1045.1859 543.70319 cm
-36.152344 7.7021484 m
(?67009=)[ 12.343750 10.585938 12.343750 6.171875 6.171875 12.343750 0.000000 ] xS
/Cs1 SC
0.60000002 0.60000002 0.60000002 sc
CM
735.72339 560.34088 m
942.29156 560.34088 l
942.29156 527.06543 l
735.72339 527.06543 l
h
735.72339 560.34088 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -196 1056 cm
931.72339 495.65912 m
1138.2915 495.65912 l
1138.2915 528.93457 l
931.72339 528.93457 l
h
931.72339 495.65912 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 839.00745 543.70319 cm
-29.267578 7.7021484 m
(?:006A)[ 12.343750 12.343750 6.171875 4.570312 10.761719 0.000000 ] xS
/Cs1 SC
0.60000002 0.60000002 0.60000002 sc
CM
1148.0802 560.34088 m
1355.0381 560.34088 l
1355.0381 527.06543 l
1148.0802 527.06543 l
h
1148.0802 560.34088 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -196 1056 cm
1344.0802 495.65912 m
1551.0381 495.65912 l
1551.0381 528.93457 l
1344.0802 528.93457 l
h
1344.0802 495.65912 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 1251.5592 543.70319 cm
-36.083984 7.7021484 m
(?9<00=6)[ 12.343750 12.207031 12.343750 6.171875 6.171875 10.585938 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
523.62274 527.22974 m
1353.986 527.22974 l
1353.986 461.00754 l
523.62274 461.00754 l
h
523.62274 527.22974 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -196 1056 cm
719.62274 528.77026 m
1549.986 528.77026 l
1549.986 594.99243 l
719.62274 594.99243 l
h
719.62274 528.77026 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 938.80432 494.11865 cm
-42.529297 7.7021484 m
(!.%"\)BC%)[ 10.800781 7.343750 11.064453 11.992188 15.820312 11.992188 4.980469 0.000000 ] xS
/Cs1 SC
0.75 1 1 sc
CM
523.62274 427.89642 m
941.724 427.89642 l
941.724 394.78531 l
523.62274 394.78531 l
h
523.62274 427.89642 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -196 1056 cm
719.62274 628.10358 m
1137.724 628.10358 l
1137.724 661.21466 l
719.62274 661.21466 l
h
719.62274 628.10358 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 732.6734 411.34088 cm
-116.83105 7.7021484 m
(4%*&\(/"&\(D/EFGHEGII.%**)[ 14.521484 11.064453 8.115234 5.468750 4.980469 10.966797 11.992188 5.468750 4.980469 12.021484 10.966797 6.171875 19.228516 14.111328 14.013672 6.171875 14.794922 11.992188 11.992188 7.343750 11.064453 8.115234 0.000000 ] xS
/Cs1 SC
1 1 0.75 sc
CM
523.62274 394.78531 m
1353.986 394.78531 l
1353.986 361.67422 l
523.62274 361.67422 l
h
523.62274 394.78531 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -196 1056 cm
719.62274 661.21466 m
1549.986 661.21466 l
1549.986 694.32581 l
719.62274 694.32581 l
h
719.62274 661.21466 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 938.80432 378.22977 cm
-97.797852 7.7021484 m
(JDK.#%EFGHEGII.%**)[ 11.660156 12.021484 10.898438 7.304688 9.531250 11.064453 6.171875 19.228516 14.111328 14.013672 6.171875 14.794922 11.992188 11.992188 7.343750 11.064453 8.115234 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
523.62274 361.67422 m
941.724 361.67422 l
941.724 328.56311 l
523.62274 328.56311 l
h
523.62274 361.67422 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -196 1056 cm
719.62274 694.32581 m
1137.724 694.32581 l
1137.724 727.43689 l
719.62274 727.43689 l
h
719.62274 694.32581 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 732.6734 345.11865 cm
-44.682617 7.7021484 m
(,&-%.'L+%)[ 11.308594 5.869141 10.966797 11.064453 7.480469 8.750000 10.869141 11.992188 0.000000 ] xS
/Cs1 SC
0.75 1 0.75 sc
CM
523.62274 328.56311 m
1353.986 328.56311 l
1353.986 295.452 l
523.62274 295.452 l
h
523.62274 328.56311 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -196 1056 cm
719.62274 727.43689 m
1549.986 727.43689 l
1549.986 760.54803 l
719.62274 760.54803 l
h
719.62274 727.43689 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 938.80432 312.00754 cm
-37.231445 7.7021484 m
(!"LCD"I)[ 10.263672 12.167969 11.044922 4.980469 12.021484 11.992188 0.000000 ] xS
/Cs1 SC
0.75 1 1 sc
CM
523.62274 461.00754 m
1353.986 461.00754 l
1353.986 427.89642 l
523.62274 427.89642 l
h
523.62274 461.00754 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -196 1056 cm
719.62274 594.99243 m
1549.986 594.99243 l
1549.986 628.10358 l
719.62274 628.10358 l
h
719.62274 594.99243 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 938.80432 444.452 cm
-116.83105 7.7021484 m
(4%*&\(/"&\(D/EFGHEGII.%**)[ 14.521484 11.064453 8.115234 5.468750 4.980469 10.966797 11.992188 5.468750 4.980469 12.021484 10.966797 6.171875 19.228516 14.111328 14.013672 6.171875 14.794922 11.992188 11.992188 7.343750 11.064453 8.115234 0.000000 ] xS
/Cs1 SC
1 1 0.75 sc
CM
941.724 427.89642 m
1353.986 427.89642 l
1353.986 394.78531 l
941.724 394.78531 l
h
941.724 427.89642 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -196 1056 cm
1137.724 628.10358 m
1549.986 628.10358 l
1549.986 661.21466 l
1137.724 661.21466 l
h
1137.724 628.10358 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 1147.855 411.34088 cm
-97.797852 7.7021484 m
(JDK.#%EFGHEGII.%**)[ 11.660156 12.021484 10.898438 7.304688 9.531250 11.064453 6.171875 19.228516 14.111328 14.013672 6.171875 14.794922 11.992188 11.992188 7.343750 11.064453 8.115234 0.000000 ] xS
/Cs1 SC
0.75 1 0.75 sc
CM
941.724 361.67422 m
1353.986 361.67422 l
1353.986 328.56311 l
941.724 328.56311 l
h
941.724 361.67422 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -196 1056 cm
1137.724 694.32581 m
1549.986 694.32581 l
1549.986 727.43689 l
1137.724 727.43689 l
h
1137.724 694.32581 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 1147.855 345.11865 cm
-37.231445 7.7021484 m
(!"LCD"I)[ 10.263672 12.167969 11.044922 4.980469 12.021484 11.992188 0.000000 ] xS
/Cs1 SC
1 0.75 0.75 sc
CM
523.62274 295.452 m
1353.986 295.452 l
1353.986 262.34088 l
523.62274 262.34088 l
h
523.62274 295.452 m
f
0.60000002 i
0 0 0 sc
1 0 0 -1 -196 1056 cm
719.62274 760.54803 m
1549.986 760.54803 l
1549.986 793.65912 l
719.62274 793.65912 l
h
719.62274 760.54803 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 938.80432 278.89642 cm
-68.393555 7.7021484 m
(HMHEH-%#$*K\))[ 14.013672 11.699219 14.013672 6.171875 14.013672 10.966797 11.064453 10.048828 9.960938 8.115234 10.898438 0.000000 ] xS
4 w
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -196 1056 cm
466.18732 651.5 m
596.09998 651.5 l
S
0 i
CM
412.89999 404.5 m
400.10001 409.29999 l
400.10001 399.70001 l
h
412.89999 404.5 m
f
0 J
0 j
1 0 0 -1 -196 1056 cm
608.90002 651.5 m
596.09998 646.70001 l
596.09998 656.29999 l
h
608.90002 651.5 m
S
/Cs2 SC
0 sc
1 0 0 -1 889 681 cm
/F1.1[ 75 0 0 -75 0 0]sf
-181.53076 28.383057 m
(,'N,M3,')[ 42.407227 36.181641 55.004883 42.407227 45.153809 63.317871 42.407227 0.000000 ] xS
1 0 0 -1 889 166.70285 cm
/F2.1[ 35 0 0 -35 0 0]sf
-138.32001 12.975021 m
(!\(*\(&#$,,"#*1$2)[ 27.510000 24.535000 13.405000 24.535000 11.900000 17.150000 24.500000 10.675000 10.675000 22.645000 17.150000 13.545000 10.675000 24.500000 0.000000 ] xS
ep
end
%%Trailer
%%EOF

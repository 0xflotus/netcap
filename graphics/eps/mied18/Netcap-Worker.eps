%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 1909.000000 1587.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.14.1 (Build 18B75) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 1909 1587
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 1909 1587
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: Futura-Medium
%!FontType1-1.0: Futura-Medium 1.0000.1.0000
/FontInfo 1 dict dup begin
/FSType 6 def
end readonly def
14 dict begin/FontName /Futura-Medium def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /L put
dup 34 /I put
dup 35 /N put
dup 36 /K put
dup 37 /space put
dup 38 /A put
dup 39 /Y put
dup 40 /E put
dup 41 /R put
dup 42 /T put
dup 43 /W put
dup 44 /O put
dup 45 /S put
dup 46 /P put
dup 47 /w put
dup 48 /o put
dup 49 /r put
dup 50 /k put
dup 51 /e put
dup 52 /C put
dup 53 /i put
dup 54 /m put
dup 55 /s put
dup 56 /t put
dup 57 /a put
dup 58 /p put
dup 59 /c put
dup 60 /F put
dup 61 /ellipsis put
dup 62 /H put
dup 63 /period put
dup 64 /V put
dup 65 /four put
dup 66 /U put
dup 67 /D put
dup 68 /l put
dup 69 /g put
dup 70 /u put
dup 71 /n put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -1074 1 index div -591 2 index div 2707 3 index div 2164 5 -1 roll div]cvx def
/sfnts [<
74727565000900000000000063767420000000000000009C000000046670676D00000000000000A000000004676C796600000000000000A400000B88686561640000000000000C2C00000036686865610000000000000C6400000024686D74780000000000000C88000000AC6C6F63610000000000000D34000000586D6178700000000000000D8C00000020707265700000000000000DAC000000040000000000000000000200C80000033806080003000700003311211127112111C802702BFDE60608F9F82B05B2FA4E00000300B7FFE406D600FA000C001A002800003734363332161514070623222625343633321615140706232227262534363332161514070623222726B75239395229283A3B50028452393A5229283A3B28290285523939522928393B282970385252393A2928503C385252393A292828293B385252393A29282829000000010000018D01BE0251000300001121152101BEFE420251C4000000000100B1FFE401C700FA000C000037343633321615140706232226B15239395229283A3B5070385252393A29285000000002001300000496067B0008000B000001331523152335210103110103F2A4A4E9FD0A03DFE9FE9C01AFD4DBDB05A0FB340205FDFB00000000020008000005E5066900060009000001210323090123010B010444FD6BACFB02FC02E1FFFEFFE5F00177FE890669F9970252020DFDF3000001006CFFE4052E0626001B0000011126232207061514003332373E0137110623202726111037122132052ECAD8EEA3A40148EE7B56306739C8DCFEB5EAE9C3F0017DD005B5FEECA9ABAAF6F3FEB228144430FEE771E7E901490127E7011B00000200B9000005630608000E001B000033112132171617161110070607062327333237363736353427262123B90144E9879176EFF97D8980EB57699D686854ACAA99FED66906082E2D6CDAFE9DFE9CDC6E2B2BDB21234C9DFCFE9E8D000100B90000040D0608000B0000012111211521112115211121040DFD950259FDA7026BFCAC0354052DFE8DDBFDFCDB06080000000100B9000003BC0608000900000121112115211123112103BCFDE60207FDF9E90303052DFE8DDBFD210608000100B9000005250608000B000001211133112311211123113301A2029AE9E9FD66E9E903AC025CF9F802D1FD2F0608000100B9000001A20608000300000111231101A2E90608F9F8060800000100B9000005360608000B000009012109012101071123113301A202590137FD4602BEFEC8FDD430E9E903A00268FD45FCB302AF30FD8106080000000100B90000036806080005000001112115211101A201C6FD510608FAD3DB0608000000000100B9FFA206080671000700003311011133110111B90466E9FB9A0671FB660431F99A0497FBC70002006CFFE406BA0625000F


CEFDD40285FD7B022CFBE90273FD8D0417000000FFFF0023000003D406990226001D000000070003002302E70001000000010000CA632CC75F0F3CF5012B080000000000BFEE600000000000D55E226FFBCEFDB10A93087400000009000200000000000000010000084FFDEC003D0AE0FBCEFECB0A9300010000000000000000000000000000002B040000C802780000078E00B701BE0000027800B104F0001305ED0008059B006C05CF00B9048600B9041100B905DE00B9025C00B9054D00B9038C00B906C100B90726006C045200B904D100B904AA006C03DC001705E900B905690008087C000804CDFFF904CC006003D00060046D006004CA00600463008E01FE006C03FC008E01FE008E0654008E0463008E04CF006004CC008E02FE008E033F004C02300035045C008E0631000B04630023000000140014005200600078009400B000E0010E0128013E015601640182019401A801E0020602300276028A02B002C402E002FA032E035C039403DE040004220440044E048004A404D205040520055C0574059A05B805C400010000002B005D00070043000400010000000000000000000000000002000100000000
00>] def
/CharStrings 43 dict dup begin
/.notdef 0 def
/space 1 def
/ellipsis 2 def
/hyphen 3 def
/period 4 def
/four 5 def
/A 6 def
/C 7 def
/D 8 def
/E 9 def
/F 10 def
/H 11 def
/I 12 def
/K 13 def
/L 14 def
/N 15 def
/O 16 def
/P 17 def
/R 18 def
/S 19 def
/T 20 def
/U 21 def
/V 22 def
/W 23 def
/Y 24 def
/a 25 def
/c 26 def
/e 27 def
/g 28 def
/h 29 def
/i 30 def
/k 31 def
/l 32 def
/m 33 def
/n 34 def
/o 35 def
/p 36 def
/r 37 def
/s 38 def
/t 39 def
/u 40 def
/w 41 def
/hbar 42 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontInfo 1 dict dup begin
/FSType 6 def
end readonly def
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-1074 -591 2707 2164}def
/UniqueID 4208071 def
currentdict currentfile eexec


1117C2D8CE935FB5031B1A719DBDA53C5F93C39171A3879520B9201A881C62BA2D1CA8F4794332457C70A8B9EBFD75EC1B3627833B1B483C74215925CE19AA4CEC07D5464B52C24B5A244A01610FBE6D526A91E6996494BAD70A345E6A50AC07F07936E29AD8BAD6BBD6CD42C47C96D153F44644B89F4DAC179C7BC8CCD16F80582D6D0539F350011C05DF66178CE1B96C3DC20C91B2D549FE4CC5274D1A9D0F1E30E80D64AD464D9E762947C3D2869FF15AD227D84531D4AFCF59E9AFE354DDF65A7D54122ECD4C424CE08598268E64AF10785674460E8A8B578D61B6B86E9C819E328E0277A4E013C35F4A65D7FA8A84570B24349F908ECFAD5A6D7D344521E7F4999944CBAE9A7BADDF3A448F94453FFD804F5A989D3301FC31343CBDB86E63DEB8230AAD7BDDDE323EC57DB11473F64AF302A60BC901924B7476AC032C1985930B064A7BCE1DCBF85549F2F83FB55961BE2C7B41007793F59B7F28A34F8410CB1B7009B9D2DCFD1950D5FD16ED5A38F83E1826EB03155D1F9DAAA8A8AE6FCDAEFBE8F2AB31CE4E8A4129F56DFFAECE64B578BDD590E66F112F21F664E2CAF4265B0521ADB6A11817CE2714CD72FDDC770390216DA431E42F918857F2C49BE66EE1AE325AA05AD1331269A9F0190CE9648F4E8D8F5C8535D8F329527148289705F1FAE4AC351C0616C4CE2FA0BD8CBDE8F8129033B4CA3984D8572E904AC9F1B0C7BBDC5ABE1E9DF629803E127F60F621EDC6F4615D917E6D35ADC697E66C5AD4511C766041BE8FD5D0C4C85D3E08E30847DE2EC7641573C9E92ECA27D74AB27AAC5E20AB1EC4F425035276EF01582D2B8C5DCA192B15D70B8D605BDCB81603228278D23C30073183CDBA650D9DF0EB85CC522D4FDBCC0BF91A731752E6850A66811C9246370659A5559BD2A831F19E4F5CC4C03DA2EB9F48C49FFDB8D31185F33D08DC59C88D6BE3873E8A075A9FEE9856D3FAFB37491678C46694B87F8C2C62FB547A82814E4631FA424B141F46AA97C343833081D5BC3E62B38CC2E3A08B6C5B33E311CDF35497F2B51A1E25EA5E40023825AEE924A018A34DC968CEDFFD708A73426F5729AFFDA9E063C588F2E0371536F479849E7BFBA0944C36BF443D9264D22E77B7DD1080939D9B75AF13736B999099012E73F6332B37F3571FD365F0114C8F6AF09D7755E6728264730D6F28D6A43BE37B8C315C83ED8E3CDE79D64A3F422FE8545B1393D022A9A604E477A1125945B047D2B2635A1F247E837B4B0D764184AD5A527F08DA9CD8D398534665FFA2323BA2706C107F0FFD7B6B03435A8FE7C4A4AC3B6C323290808ACFC2D32C2B0FF7E327C0E95E5BAD4B295AAF741A81C0892B5DE31F3FD43BBF3217DFD6B22C7408787353AD5ACCA2DF22C9ACFF270716C32811AC2304B758F0E3C32FCFA1D61624966619CBEE7F36803C7746
5E04F5AFE7EA35B91C4CFA947616D23775097239FCF14D3D6346A7CC6391A7DE8834882FEA3696DEC6E422EFEC45D624A0BD900AFF67C68DC55282E36D4F6685A6E1F27AA5F9FE7DFCEA779A74A300CE5ACDED962EE8C3568D097C083CC9DEEF714FF9D92FBB30AACAB0F5C91C608C15CBB70D980FC4DC724EBA133F8195C06A256B0B9C20DE4D1942FE8AB3F75607875089F31E57426F1659E1A26BBDAD25C498D274C536F93DF858BC6C4BD67686787F4F74F0504E20FB1BEDD182DA32F4094F23B322D09E03C118B91C80E0600F516DBAB8210ADE0755B7F83B93BBA9E6505C2148874CBFBFE7B81AE78327D127A014A3B923D1C9D42766288FF971C9DEB14A00BD88A427331CD5F8211CF996DD3A075CDFF73E74F8A563D8D99519A178775F0A11117DD4CA18981263E2E8807EC404A583195956883C88674B23FF5773FDDF636292FCD3818B4AE3F1436988CB0D8C0820FDD1F0D56C964843CA190E2D25BC766CD04C2B3787DE141FBA10C53DC12312322219CF6AB90B54918DDCDFE3E54B20F0CC5DFB5DCC4D04F27BF4CF90CB19A73FD1167A1199A32C5ED515D3AC11664041234452BC692C7F8AEFE5BD2ED18C7293B87FF8FF54A16C1EE6D655AD3500C010F45748156366367BCF69824BD90684A27111D2F4A8FA6FBB5C4E9E5E864BCEF5071FDE2C45A802188334BB5A2E1BF473011865029B402D70A1F75EA92D46E4B9EDB39A69CBC68E922C340D14C5E7B6A3DDE9E1BE0C9B0E8CFD02352C96FFAE43AF1EBE6B737E01F9EFB5166F8B1F5C640C0C2B018A5450B1C3DB698D1A51CDA85E964A9492540744642266CA7C27B1B8941A650F3FEAB1A1090728BFAB594A8B71FBF8B83BC2869C30B898B065AFDAAAAE689609561A0EA5D8B10936BAAA727F7919B5971B2155ADFEB82E1723478EA36DED197D1F629B6BF342D29661CE759EF358A777C189AA7E81B52C7B2B6F81EE229AB9D052D2B91B2833DA264F6413DF1C317BDA53E4CC6FA10BD2B653B9524C45E68E7D5E6E5007D7ECA941A027B4CB0FE44F27BCAB3ED43F2D0923007A051384220C9DD42E6CE7125FFEBB37E39AFE1EE1DE84A6B323593B7042E58A5420A6ED5F36D7D357C2847AF5C0231DC9324B263BEAE5A0BECA1660FB1C051D624C4EB4DB931EF7BCF5DC63C9A24F2719CC7C0ECFC10954CF4CF2CAD659BB27457FDC58B19A5D8CFBD7F497103A96D20B3F30FB819A7E28399195DBC4CFB7FCC19B5FAF9788CBB804CDF2ECDFF579E96F89CF08FF35978A5C86EE6144404E67E1E58046D88B220D6B034A24BA273339EEC12ADA83233DE74805F06CA34FBA64526ED2434C92A82618C0599DEC1E073D2778AA944A174F03CE2C97683EA79F7DAADD5A1BA1DC35B0534F4BD694A56984D5D5446765DE417D8B7DA3AA07069E5E69ABE8DB01A2568D642442F6FADA7B2E
64FD76D98590162D4AFE28E749BCFC1DAB45BD160E6D2094B141796A993EC052B234288F9606656C214CC2585F7BC27F8550EDD32FC3388CDF96EE6B01E358B5D93FE4B045A5DF2A5321FF5A4748A0A8F4BE4827AAA63F4FF8D324279612B24A7F8D2CAFBCB41E6F194A56EAD732750204EE7ECE39D3A8C4A1DEAA6DB5EA6FA9F7CC3D1469A177DD3FA62A51B61C7A2CF84F4E882288B7AE050C26F18469884E7BB6233EAFADC30D60592CC85EC0C6D25B28ECAFC638CD4300E7D57E4418B7A9DE6629A93E60A648DC9563A4B5A86659CE821432AFB4D5815825F9DD70CC2FE710C9067501CF28287A0A61821177DAC575BC7FFA8EF4A5CBCE8A07481B2F0348C152A7973E2654CD152FD9182915BFA9FCC29BB8C7E13C091AD6293CED2C40BCA0106D7D426F7199BF96C6EDAA92EB633E804D0773C8F10AA872783A3EE94DB64630D29E99609649214789544508858CEE64A03320FA3591075A5AC7E1F0E705C86EAB1D9F626411D2548724DAFD8C6CA09809E4F2D1249B23682B99A43BA13C62C80EEBDA6E8B773C9A8F1430493FCAF9518158535A1D36FCEAF1D18353376DEDF230C7B4722A41093E510DBD01836D248EF99AC95F94D3A7B360BD4A6B19ED9EDD07D89753D237E0F0B33EC19C1B229D821190145D7A77733802E5DEAF3DC814E4561709D6C9B1CF49F75F19EC80E009474DED6B5F4964517499714D2285B9BCAA7596FF677BCEA4238FDD6FEAF9D07CD9E8BDD7BBE4115571EA7DE68E00778854A83E6AE9DE5D6705044C5EA7419B915C924F6B65AB85F9204B08E722E454E7EE74CE3BDEB5AB115340EDDBD1352DE559FBB178ABB088247BEC78C4C2FEC7B7B38B6BE73972B306DC7FECFF469610F303F95DA74E5F4488DA8780628ED6C3DD8C03C31E8865BD8E79EC712B94758292DA7CDEC76837A812B304F69CE6B11D6B856A97B7F9C9AD34B14C08A462DF3C01072F81EB4C7007AA5E1A75DA0ABFD9A59027E0F7100C272B03A9A78D9EABCF99BF81CC19F9569ADE3C574104E31289B892119BB5ABEEAC0F6B3D911E7EFCD8FBFC9F219D80A6CEEE2C986BB550139A643E2BD411FBF3FFD9E921C728BB0F06D6B235272A32F6ED5FEA4D50C1090BF635B0772425A1EF926167D9D8ED821422ABB33E9FFC0B851C32FA3C371E6D255E07DEBF35EA0A29D5B712C0F4F28AAC44A27A26D63A1C36847F85043F640F46AA7445D02DE5E9063C9E46B77592F9DF36B4DD8B65B757D083DF516F1234D9F415EEB9037E85608663B4C07A5E7E1F95E93A76EFC5AB00777B7017AF1EED7B0E62A6DC8472B91953A1F81818C68AA154687025CBF44599DF75FEEF2277906D413C8AB8A85630B3761A9D1413BA837EEF0043E4BF9682FF4F70BBF62F03052E6AFCB2DB7F9B20CFF76A08050DD86339BF3C34AC97AE97F608EAF108F9D37BE65364
8B00E18BD9B1C33228D1CC13BADAF6ED783CF9C4828A4974F1600FCEF0476CA11513BC348BBB0C952BAEB1C091F7136E665AFD196ACD66515DD85195FA2134B132533EA9898C4E8B75B9509FF6335C3F3457F46ED5B98813FE3E1FA53B09CAF67F60B8D48BC04B14910A4ECE08A88411FFC43F
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/Futura-Medium cguidfix
/F1.1/Futura-Medium renmfont
%RBIBeginFontSubset: Futura-Bold
%!FontType1-1.0: Futura-Bold 1.0000.2.0010
/FontInfo 1 dict dup begin
/FSType 8 def
end readonly def
14 dict begin/FontName /Futura-Bold def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /N put
dup 34 /E put
dup 35 /T put
dup 36 /C put
dup 37 /A put
dup 38 /P put
dup 39 /space put
dup 40 /L put
dup 41 /a put
dup 42 /y put
dup 43 /e put
dup 44 /r put
dup 45 /n put
dup 46 /c put
dup 47 /o put
dup 48 /d put
dup 49 /s put
dup 50 /u put
dup 51 /t put
dup 52 /m put
dup 53 /k put
dup 54 /I put
dup 55 /f put
dup 56 /l put
dup 57 /B put
dup 58 /D put
dup 59 /i put
dup 60 /g put
dup 61 /M put
dup 62 /U put
dup 63 /w put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -227 1 index div -344 2 index div 1459 3 index div 1099 5 -1 roll div]cvx def
/sfnts [<


153E01333A011715262322061D01233EB51D543807110B242A3F3FB50201542E3102AD124B48DC000001001EFFED01DF021400290000012623220615141E02171E0115140E02232227371633323635342E02272E0135343E0233321701923230191F0511211B4B4A24405A366865424C44192005101F195443203C55345550017D1A1411090B0A08060F4D3C2D48311B3B803416110A0D0B090511433B2B45301A2100000001003EFFED02600201000F000013111433323511331114062322263511F35C5CB5898888890201FEDF5F5F0121FEBC686868680144000000010000000004010201000C00001B02331B013301230B012301CA7B80728081C9FEF479807A7BFEF90201FEF2010EFEEA0116FDFF0119FEE702010000010000FF0002B00201000700003703331B01330123F8F8D28985D0FE64CB4601BBFEF90107FCFF0001003E000000F3033E0003000013112311F3B5033EFCC2033E0000000100170000016F029B000B00000111231123353335331533150108B53C3CB567016AFE96016A979A9A970000010035013C011F02260013000013343E0233321E0215140E0223222E023512202B18182B201212202B18182B201201B1182B201212202B18182B201212202B0001000000020042F14D90795F0F3CF5000903E800000000D3A8864900000000D55E2271FF1DFEA805B3044B00010009000200000000000000010000040FFEFC001E05DAFF1DFF2205B300010000000000000000000000000000002101F40033015400000322000702B4004F029B002D0312004F023A004F0162004F0214004F040B002D038F004F02A6004F02160008032F004F02BD002A01EA002A02BD002A0287002A0187000C02B9002A0131003202BA003E03E0003E0298003E02BC002A01D1003E01FD001E029D003E0401000002B000000131003E017500170154003500000016001600300064009600C000D600E400F40110012601440156017A01B201E0021A024A027802CC02F4030C0342036C03A603C20400041C043A044E045C04720492000100000021006E00070046000400010000000000000000000000000002000100000000
00>] def
/CharStrings 33 dict dup begin
/.notdef 0 def
/space 1 def
/A 2 def
/B 3 def
/C 4 def
/D 5 def
/E 6 def
/I 7 def
/L 8 def
/M 9 def
/N 10 def
/P 11 def
/T 12 def
/U 13 def
/a 14 def
/c 15 def
/d 16 def
/e 17 def
/f 18 def
/g 19 def
/i 20 def
/k 21 def
/m 22 def
/n 23 def
/o 24 def
/r 25 def
/s 26 def
/u 27 def
/w 28 def
/y 29 def
/l 30 def
/t 31 def
/anoteleia 32 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontInfo 1 dict dup begin
/FSType 8 def
end readonly def
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-227 -344 1459 1099}def
/UniqueID 4364665 def
currentdict currentfile eexec


C3985E013C27DD585D91FDC68405C9ABF1DB01D93BB4CA89D0699F57661A4D95F6C0155285CF371E8F4F44D7DAD3BE01A38640E16944C314D818FE6E141890C4CCC2729331D96889E0DDB97A01BD979B148A9DC055E9209DFDC58982282570BEED646501B03BEA4DE3365288AF020780F1440E9CFF05D9F241462929B23BEE79302DB25194B3AB660CA0E603BFA012DF5577829C9AE4190019F9A9C360D8F382BD274A9EEB9102E554FE6073742ECBA37AC348A9207C68146332143F642925D6B8C7433B318AA9065113F6237CD22421040E08625F8A70A4423B5C9BF9B919AFD1E81ACE990372C9FD825E9885A608E896726CFE18400030F443B98A09CACC0D3E62436CCA17A24C1E7C8BD88A16EEFA641E323B865FFEB0235691F0394D19B479CDFD8EBC7DDA915AD77586D34E9369AC60D02016C532FEFB593D1B74CD77AC7FB95AECF6E92F1BF9C50C1025066F543005D54A6121FAE759718D750BB9671850ED52AAA9D5B78708977078216D290B9E2FBE1DA65F2AE1AB61DD54D322454462026CB15604A10A90A787E42B94D09BAB326EB7701F0616976393CFDD9B8829817AAC745222F53BA5B29ED4148BE6029863179A8E50540244A9BBBBE1C08445CD13C6647E88282AEE2DB4DB6F3EE335D45C8A568AE0E53CE1AC5FBC728EB20993E6D677446DC7886DDD92FC9DC1D895E387D322290CF668BF991083BE4EBD15674BE86F9AC1EEB811FD0092892592DB7DC6B1144C33770343DA6C8B51CD75CB8C03333499DECC6B6466625D233C98A54EC664274C84E0FF5D83EF3E8A97EC29682789729C9EA220CE8BAC416CCFAECCF451E4FC11C89B39FA69937D25552B7F719A4826742CD71DC795655B377A17346ACFA40FD502C4B139B6ACF5A617F27A6E897B3DB1092D819BFF3B0F029E984064C0F5788734E275D37996BC2A5CED237743AC8D5294C9B12DABA46604F9B08C9D0F31B1AB34A939962B8E0A99CF6063E1FE032620EB807ADF4DB351ACE8F69E6459AD5231FFA44C9F3B17647E308D00E74B72B804771216B4C45173151DF3C7159CEFA067B1488AA2E2FA095427FE00033A569F455257FC76183B348835E33BD683E77686AAA684FC3529081366DF36BBD71225D2518333F1B71D93D271B87A2A6711CE310B07ED190CB2AE6CE7EA762515F7E433D43714ED3BD06E998B44C4A1CA8CC01FED6E330FE92887394909B491D8B674E67E455750E6F78B67CC6136BB94891CDBA5AB6C73AD4D34794DF90C6A29F3C656FF9CB478B387C71CE47F93A9413938C35FBC254D8CB15447F218EEDCB43B27DBB1FF6B25DD51E74CDE151DD6A233984B5EF7EDFB5005107870305E01FA4D486041040CCF88668015F7231C790CBA1B1D212348CBF2C1A716C94252578E36F6D4EE12981D66A9898FF0E479C22FE04DAC123453964B98A035FBD01B
15A7CC17D6C220020364F3BC382669A54D56D3BA7877982C2149EAC1D243C367A1DC23947BE2BAB6810D7B61A76E4813E98B26AC7DBEF5C562744F0380E4DAADBE99DF5B42405B1D0684343C1410E439CD586A445447BC78A128603A8909F2155C16A37D5C9E01BDD37104F345DF3F8F87FEB4D08DADCBB020DE2A23B05DB232A89CE296BC4E62684BC8FD69769AA8F4CC5694B537AD383463B05E48788DDC93376856AD92C95EA93F005D8B9E187C3A5CB182FF1E2F3B9E43779D1E2D8DB107399894A0FED4446B72AD94EEF0532F27CD1AD858E158A3E19428CA713A305DD75BBB91AB017B38E3F37156A276A76F4B86A7A4B2F01C5E83660CACDE02FF78658CC71BF16275169AFE9B28BD9C90C791B7D7CDDEFCF354C15CE6B66D2B8ADB02C8E8448CD36F77688670824D32D9A8DC2957986659F2C1C63F45BAE97E5C986C2BC5CFAC14DB3907805E751B5CCB3398EC3FF5D93808B7A557CA6F4DFA7C3AAEFF9E5805FA1A049CDF91B94F0A0C8D5D39C022FF14D84FD5BD2765873A11F67B4F93901F93DA8FF7ADBDFF05904B3E0D92CA88C93ED58E48236880E8615DC6CAF71345EA6ED2174013CC4BA9DC4721E29CD2AAF66EC569E96D8B6BA6268D3DD37D89F89EC951AF20C246451BB6E34482A5A6301B8B1AACD510E6EE9341458745DD4EFA212E390A0CBBC242300EBF87AD8F497785B55730863CCF18EDE83A492FDECDD650ABA6CEA201E9A5A2BEA77085B9221596F22F2EE3D84369884C0136DD5F11A9C6B35AB79C1C98F309681CF72EE04FB6D815FC6AE553F3062137420F753AA3E74F6E96DB93E81F69D10D5458D6BE0DD3D641D4642EF4FFC44CD889D7286178660636644CDC824D588BA916622B67B3851E505AA774479423FFFACBCB8EE2B62182F5D010D5F764F96EC0D17802CE598E755418544620D77932FB24A80C4B9A4AA8CBAD699A516ABDA63F17DD0709A92D10B51C3BF75A5129D42E65F2B0CEC466C979989A9221329E66BF7742FC47110A641AAB3D83495C796EC141255C3024D08935E4A2935F340B5F7FD2A52BF7D51A9CDCF9636D872FCEB6F2A4591A6E11B2DDF8FDB1E9324FFFC925A73E3C5D895BEE5F0E25DEBBED709BEB20798E7DBB4997798E1DD70747F403FDB9433AE35D361B811C7FD2B44E8F5AF589D788DBA29858EFF15CF0FE2ED7E1334DCEA83C630ED098EA4FEFC8EB36948936E477CBACC9939E2341F7FC602AD07EF66EB5A786B343AC9A5269BE61274D1F9DC5DAE0B20786859996C5E475BC66FDA9516C9A907F71A25C772D5768F9B2040F04EE56B35081A4868C3C2A814A712622AF5A3307B11E4D8666CF02294ED1291B5891E6A8A11D469FDDEAE7083A247476E4EBB139EAF5772DD6B898D23F903CC3E21D4AD028C6AF7A7BD54088D62E29E1A71B02E922C2EF7409986F46FE08C0A74F7E
CD36713B06DC9FF5FBA01A6995437D2CC39E5C9C1E76DB771118B8C22FDA220FA12B2CA1A0E79011B0DFE0EAAB304AA9B8BE3FB8E26D22596165769022B71E6EABFDC8FBC218E79E6496800116ACE21AC2CB7D3EC9845974D183F3E0B72B9386A0548CE517A326A6FA19E0D3FE9E45CA25CB103971851BD3F8260F367B24A59F2E8E2326DCF5D7C8C7407B78A9CFBED9EBFF50F10FC22C8A82730C75104B727FB5899A70C7BA73A0F31E6C8DF52302D178F5F7264B33C2DFE92B3B0F00052B9D8817FDBB5991870D64C7DC5FE3BF3F2BC003316E1262D1323740B130B13F3172A1007097EFAFF1A14CE20D4A02D827BC5DE43F36848DE8264F0317778B17DE9B5DD1C6DF6203499D484C5C72DBAA0EBCC22DC0723F0D5D543A0359E33DCEB8DC5ED24A827EDFCA65518E56FF424485D78903944C38E6E588C8D057DD607D62E60CFF896C2DFB590745FF69B14F0950460FD70E5423FB27CD189D38F791FEA73EE18721C05A9488EA76FAFEE3D9046F69E6770C690390305C93DA0A460A322FD601FB6DFBE4D13013A425A033519DA3431CEEEC2520F13F8BC4425950EA690752E962D51C96993FCF9388BECFBD16C854DD2EEC36EFEC8E13449C827520AFF4E19FCAB16038F8A6084E58B8FC2FBFE422E35AE098BFA44A6A8EFA9FD2D809D982C619E39FE821B0FA84481D59F3CCC17506CE86BDAA7FE1F4AF5CB867E7230DBC9EA5D2CAFD6248573415F89586F30C3D214EFCC4FDC5DC984715BFA0A804A880151DC589FFB116538CAF074CDE3F992868F990E633450510B7AC2DC8EC837359D2ED83425C367009C651
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/Futura-Bold cguidfix
/F2.1/Futura-Bold renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
 exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
10 w
1 J
1 j
0.60000002 i
/Cs1 SC
0 0 0 sc
q
271 1283 m
1439 1283 l
1439 284 l
271 284 l
h
371 1183 m
1339 1183 l
1339 384 l
371 384 l
h
371 1183 m
W*
0 0 1909 1587 rc
1 0 0 -1 -249 1435 cm
620 252 m
1588 252 l
1588 1051 l
620 1051 l
h
620 252 m
S
Q
q
354.76733 1198.4175 m
879 1198.4175 l
879 880.14008 l
354.76733 880.14008 l
h
454.76733 1098.4175 m
779 1098.4175 l
779 980.14008 l
454.76733 980.14008 l
h
454.76733 1098.4175 m
W*
0 0 1909 1587 rc
1 0 0 -1 -249 1435 cm
703.76733 336.58252 m
1028 336.58252 l
1028 454.85989 l
703.76733 454.85989 l
h
703.76733 336.58252 m
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 1909 1587 rc
1 0 0 -1 616.88367 1039.2788 cm
/F1.1[ 25 0 0 -25 0 0]sf
-68.518066 9.6276855 m
(!"#$%!&'\(\))[ 11.083984 7.373047 21.105957 16.564941 7.714844 12.133789 16.870117 15.002441 14.135742 0.000000 ] xS
Q
0.60000002 i
/Cs1 SC
0 0 0 sc
q
354 1022.9828 m
878.23267 1022.9828 l
878.23267 704.70551 l
354 704.70551 l
h
454 922.98285 m
778.23267 922.98285 l
778.23267 804.70551 l
454 804.70551 l
h
454 922.98285 m
W*
0 0 1909 1587 rc
1 0 0 -1 -249 1435 cm
703 512.01715 m
1027.2327 512.01715 l
1027.2327 630.29449 l
703 630.29449 l
h
703 512.01715 m
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 1909 1587 rc
1 0 0 -1 616.11633 863.84418 cm
/F1.1[ 25 0 0 -25 0 0]sf
-104.47388 9.6276855 m
(#\(*+,\)$%!&'\(\))[ 21.105957 14.135742 13.183594 25.659180 22.338867 15.051270 16.564941 7.714844 12.133789 16.870117 15.002441 14.135742 0.000000 ] xS
Q
0.60000002 i
/Cs1 SC
0 0 0 sc
q
354 848.06561 m
878.23267 848.06561 l
878.23267 529.78827 l
354 529.78827 l
h
454 748.06561 m
778.23267 748.06561 l
778.23267 629.78827 l
454 629.78827 l
h
454 748.06561 m
W*
0 0 1909 1587 rc
1 0 0 -1 -249 1435 cm
703 686.93439 m
1027.2327 686.93439 l
1027.2327 805.21173 l
703 805.21173 l
h
703 686.93439 m
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 1909 1587 rc
1 0 0 -1 616.11633 688.92694 cm
/F1.1[ 25 0 0 -25 0 0]sf
-112.47559 9.6276855 m
(*\)&#-.,\)*%!&'\(\))[ 12.060547 15.051270 18.518066 21.105957 14.575195 13.500977 22.338867 14.831543 12.060547 7.714844 12.133789 16.870117 15.002441 14.135742 0.000000 ] xS
1 0 0 -1 872 1516 cm
/F2.1[ 99 0 0 -99 0 0]sf
-338.56097 37.01506 m
(!"#$%&')[ 90.189000 56.430000 52.173000 67.815000 79.398000 67.122000 0.000000 ] xS
/F1.1[ 73 0 0 -73 0 0]sf
108.22602 37.01506 m
(/01231)[ 55.177734 43.878418 28.408691 35.181152 40.385254 0.000000 ] xS
Q
0.60000002 i
/Cs1 SC
0 0 0 sc
q
354 684.27734 m
878.23267 684.27734 l
878.23267 366 l
354 366 l
h
454 584.27734 m
778.23267 584.27734 l
778.23267 466 l
454 466 l
h
454 584.27734 m
W*
0 0 1909 1587 rc
1 0 0 -1 -249 1435 cm
703 850.72266 m
1027.2327 850.72266 l
1027.2327 969 l
703 969 l
h
703 850.72266 m
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 1909 1587 rc
1 0 0 -1 616.11633 525.13867 cm
/F1.1[ 25 0 0 -25 0 0]sf
-121.60034 9.6276855 m
(&..!"4&*",#%!&'\(\))[ 18.518066 13.500977 13.500977 11.083984 7.373047 17.968750 17.468262 12.060547 7.373047 22.338867 21.105957 7.714844 12.133789 16.870117 15.002441 14.135742 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
5 878 m
212.18733 878 l
212.18733 701.20282 l
5 701.20282 l
h
5 878 m
f
Q
0.60000002 i
/Cs1 SC
0 0 0 sc
q
-95 978 m
312.18732 978 l
312.18732 601.20282 l
-95 601.20282 l
h
5 878 m
212.18733 878 l
212.18733 701.20282 l
5 701.20282 l
h
5 878 m
W*
0 0 1909 1587 rc
1 0 0 -1 -249 1435 cm
254 557 m
461.18732 557 l
461.18732 733.79718 l
254 733.79718 l
h
254 557 m
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 1909 1587 rc
1 0 0 -1 108.59367 789.60144 cm
/F1.1[ 25 0 0 -25 0 0]sf
-52.886963 -6.7446289 m
(*567896:)[ 12.512207 6.225586 19.775391 10.144043 7.055664 14.990234 20.080566 0.000000 ] xS
-36.657715 26 m
(.9;238)[ 12.829590 14.990234 12.561035 12.048340 14.050293 0.000000 ] xS
Q
0.60000002 i
/Cs1 SC
0 0 0 sc
q
786.4986 1196 m
1243.4987 1196 l
1243.4987 878.07831 l
786.4986 878.07831 l
h
886.4986 1096 m
1143.4987 1096 l
1143.4987 978.07831 l
886.4986 978.07831 l
h
886.4986 1096 m
W*
0 0 1909 1587 rc
1 0 0 -1 -249 1435 cm
1135.4987 339 m
1392.4987 339 l
1392.4987 456.92172 l
1135.4987 456.92172 l
h
1135.4987 339 m
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 1909 1587 rc
1 0 0 -1 1014.9986 1037.0392 cm
/F1.1[ 25 0 0 -25 0 0]sf
-35.534668 9.6276855 m
(<!,+)[ 12.707520 10.314941 21.533203 0.000000 ] xS
Q
0.60000002 i
/Cs1 SC
0 0 0 sc
q
786.4986 1021.6087 m
1243.4987 1021.6087 l
1243.4987 703.68701 l
786.4986 703.68701 l
h
886.4986 921.6087 m
1143.4987 921.6087 l
1143.4987 803.68701 l
886.4986 803.68701 l
h
886.4986 921.6087 m
W*
0 0 1909 1587 rc
1 0 0 -1 -249 1435 cm
1135.4987 513.3913 m
1392.4987 513.3913 l
1392.4987 631.31299 l
1135.4987 631.31299 l
h
1135.4987 513.3913 m
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 1909 1587 rc
1 0 0 -1 1014.9986 862.64789 cm
/F1.1[ 25 0 0 -25 0 0]sf
-88.238525 9.6276855 m
(4,##\(4*",#)[ 17.395020 22.338867 21.105957 21.105957 14.135742 17.517090 12.060547 7.373047 22.338867 0.000000 ] xS
Q
0.60000002 i
/Cs1 SC
0 0 0 sc
q
786.4986 847.21747 m
1243.4987 847.21747 l
1243.4987 529.29572 l
786.4986 529.29572 l
h
886.4986 747.21747 m
1143.4987 747.21747 l
1143.4987 629.29572 l
886.4986 629.29572 l
h
886.4986 747.21747 m
W*
0 0 1909 1587 rc
1 0 0 -1 -249 1435 cm
1135.4987 687.78253 m
1392.4987 687.78253 l
1392.4987 805.70428 l
1135.4987 805.70428 l
h
1135.4987 687.78253 m
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 1909 1587 rc
1 0 0 -1 1014.9986 688.25659 cm
/F1.1[ 25 0 0 -25 0 0]sf
-18.896484 9.6276855 m
(*!-)[ 12.060547 11.157227 0.000000 ] xS
Q
0.60000002 i
/Cs1 SC
0 0 0 sc
q
786.4986 683.92169 m
1243.4987 683.92169 l
1243.4987 366 l
786.4986 366 l
h
886.4986 583.92169 m
1143.4987 583.92169 l
1143.4987 466 l
886.4986 466 l
h
886.4986 583.92169 m
W*
0 0 1909 1587 rc
1 0 0 -1 -249 1435 cm
1135.4987 851.07831 m
1392.4987 851.07831 l
1392.4987 969 l
1135.4987 969 l
h
1135.4987 851.07831 m
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 1909 1587 rc
1 0 0 -1 1014.9986 524.96088 cm
/F1.1[ 25 0 0 -25 0 0]sf
-11.804199 9.6276855 m
(=)s
1 0 0 -1 613.79291 1287.5 cm
/F2.1[ 35 0 0 -35 0 0]sf
-52.797501 -10.049957 m
(\(\)*+,')[ 18.620000 24.885000 23.170000 22.645000 16.275000 0.000000 ] xS
-83.019997 36 m
("-./0+,1)[ 19.950000 23.240000 17.150000 24.500000 24.535000 22.645000 16.205000 0.000000 ] xS
1 0 0 -1 1014.9986 1287.5 cm
-68.827499 -10.049957 m
($213/4')[ 23.345000 23.415000 18.305000 13.370000 24.500000 34.720000 0.000000 ] xS
-83.019997 36 m
("-./0+,1)[ 19.950000 23.240000 17.150000 24.500000 24.535000 22.645000 16.205000 0.000000 ] xS
1 0 0 -1 108.59367 1264.5 cm
-62.580002 -33.049957 m
(&\).5+3')[ 23.310000 24.535000 18.025000 23.345000 22.890000 13.055000 0.000000 ] xS
-37.064999 13 m
(6-7/)[ 12.390000 23.240000 14.000000 0.000000 ] xS
5 w
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -249 1435 cm
1593 464.29169 m
1811.5476 380.62314 l
S
0 i
CM
1575.9957 1059.5254 m
1560.6169 1059.4199 l
1564.4783 1049.3337 l
h
1575.9957 1059.5254 m
f
0 J
0 j
1 0 0 -1 -249 1435 cm
1824.9957 375.47467 m
1809.6169 375.58008 l
1813.4783 385.6662 l
h
1824.9957 375.47467 m
S
1 J
1 j
0.60000002 i
1593 559.50433 m
1810.6617 518.55554 l
S
0 i
CM
1575.8135 919.10681 m
1560.6633 921.75134 l
1562.6602 911.13751 l
h
1575.8135 919.10681 m
f
0 J
0 j
1 0 0 -1 -249 1435 cm
1824.8135 515.89319 m
1809.6633 513.24866 l
1811.6602 523.86249 l
h
1824.8135 515.89319 m
S
1 J
1 j
0.60000002 i
1593 743.83423 m
1810.6644 784.93414 l
S
0 i
CM
1575.8143 647.39398 m
1562.6664 655.37207 l
1560.6625 644.75958 l
h
1575.8143 647.39398 m
f
0 J
0 j
1 0 0 -1 -249 1435 cm
1824.8143 787.60602 m
1811.6664 779.62793 l
1809.6625 790.24042 l
h
1824.8143 787.60602 m
S
1 J
1 j
0.60000002 i
1593 654.69757 m
1810.2847 656.11841 l
S
0 i
CM
1575.6843 778.78748 m
1561.3199 784.28149 l
1561.2493 773.48175 l
h
1575.6843 778.78748 m
f
0 J
0 j
1 0 0 -1 -249 1435 cm
1824.6843 656.21252 m
1810.3199 650.71851 l
1810.2493 661.51825 l
h
1824.6843 656.21252 m
S
Q
0.60000002 i
/Cs1 SC
0 0 0 sc
q
1488 1283.1014 m
2003.3003 1283.1014 l
2003.3003 965.84991 l
1488 965.84991 l
h
1588 1183.1014 m
1903.3003 1183.1014 l
1903.3003 1065.85 l
1588 1065.85 l
h
1588 1183.1014 m
W*
0 0 1909 1587 rc
1 0 0 -1 -249 1435 cm
1837 251.89857 m
2152.3003 251.89857 l
2152.3003 369.15009 l
1837 369.15009 l
h
1837 251.89857 m
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 1909 1587 rc
1 0 0 -1 1745.6501 1124.4757 cm
/F1.1[ 25 0 0 -25 0 0]sf
-105.78003 9.6276855 m
(\(*>\(\)#\(*?.\),*,)[ 14.135742 12.060547 18.334961 14.135742 15.051270 21.105957 14.135742 11.291504 7.714844 13.500977 14.624023 21.667480 11.462402 0.000000 ] xS
Q
0.60000002 i
/Cs1 SC
0 0 0 sc
q
1488.1842 1109.7013 m
2003.3003 1109.7013 l
2003.3003 792.44983 l
1488.1842 792.44983 l
h
1588.1842 1009.7013 m
1903.3003 1009.7013 l
1903.3003 892.44983 l
1588.1842 892.44983 l
h
1588.1842 1009.7013 m
W*
0 0 1909 1587 rc
1 0 0 -1 -249 1435 cm
1837.1842 425.29871 m
2152.3003 425.29871 l
2152.3003 542.55017 l
1837.1842 542.55017 l
h
1837.1842 425.29871 m
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 1909 1587 rc
1 0 0 -1 1745.7422 951.07556 cm
/F1.1[ 25 0 0 -25 0 0]sf
-72.259521 9.6276855 m
(".@A?.\),*,)[ 7.373047 13.500977 16.906738 15.429688 7.714844 13.500977 14.624023 21.667480 11.462402 0.000000 ] xS
Q
0.60000002 i
/Cs1 SC
0 0 0 sc
q
1488.1842 936.30121 m
2003.3003 936.30121 l
2003.3003 619.04968 l
1488.1842 619.04968 l
h
1588.1842 836.30121 m
1903.3003 836.30121 l
1903.3003 719.04968 l
1588.1842 719.04968 l
h
1588.1842 836.30121 m
W*
0 0 1909 1587 rc
1 0 0 -1 -249 1435 cm
1837.1842 598.69879 m
2152.3003 598.69879 l
2152.3003 715.95032 l
1837.1842 715.95032 l
h
1837.1842 598.69879 m
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 1909 1587 rc
1 0 0 -1 1745.7422 777.67542 cm
/F1.1[ 25 0 0 -25 0 0]sf
-69.65332 9.6276855 m
(BC.?.\),*,)[ 18.469238 18.151855 11.376953 7.714844 13.500977 14.624023 21.667480 11.462402 0.000000 ] xS
Q
0.60000002 i
/Cs1 SC
0 0 0 sc
q
1488.1842 773.93353 m
2003.3003 773.93353 l
2003.3003 456.68204 l
1488.1842 456.68204 l
h
1588.1842 673.93353 m
1903.3003 673.93353 l
1903.3003 556.68201 l
1588.1842 556.68201 l
h
1588.1842 673.93353 m
W*
0 0 1909 1587 rc
1 0 0 -1 -249 1435 cm
1837.1842 761.06647 m
2152.3003 761.06647 l
2152.3003 878.31799 l
1837.1842 878.31799 l
h
1837.1842 761.06647 m
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 1909 1587 rc
1 0 0 -1 1745.7422 615.3078 cm
/F1.1[ 25 0 0 -25 0 0]sf
-65.795898 9.6276855 m
(*4.?.\),*,)[ 11.389160 17.517090 11.376953 7.714844 13.500977 14.624023 21.667480 11.462402 0.000000 ] xS
Q
0.60000002 i
/Cs1 SC
0 0 0 sc
q
240.5 362 m
693.59216 362 l
693.59216 71.039146 l
240.5 71.039146 l
h
340.5 262 m
593.59216 262 l
593.59216 171.03914 l
340.5 171.03914 l
h
340.5 262 m
W*
0 0 1909 1587 rc
1 0 0 -1 -249 1435 cm
589.5 1173 m
842.59216 1173 l
842.59216 1263.9608 l
589.5 1263.9608 l
h
589.5 1173 m
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 1909 1587 rc
1 0 0 -1 467.04608 216.51958 cm
/F1.1[ 25 0 0 -25 0 0]sf
-55.57251 9.6276855 m
(311017?D0E)[ 13.830566 9.729004 9.130859 15.026855 9.350586 10.144043 7.714844 6.225586 15.026855 0.000000 ] xS
Q
0.60000002 i
/Cs1 SC
0 0 0 sc
q
645.45392 362 m
1098.546 362 l
1098.546 71.039146 l
645.45392 71.039146 l
h
745.45392 262 m
998.54608 262 l
998.54608 171.03914 l
745.45392 171.03914 l
h
745.45392 262 m
W*
0 0 1909 1587 rc
1 0 0 -1 -249 1435 cm
994.45392 1173 m
1247.546 1173 l
1247.546 1263.9608 l
994.45392 1263.9608 l
h
994.45392 1173 m
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 1909 1587 rc
1 0 0 -1 872 216.51958 cm
/F1.1[ 25 0 0 -25 0 0]sf
-65.905762 9.6276855 m
(311017?:;9:)[ 13.830566 9.729004 9.130859 15.026855 9.350586 10.144043 7.714844 14.990234 11.914062 14.990234 0.000000 ] xS
Q
0.60000002 i
/Cs1 SC
0 0 0 sc
q
1050.4078 362 m
1503.5 362 l
1503.5 71.039146 l
1050.4078 71.039146 l
h
1150.4078 262 m
1403.5 262 l
1403.5 171.03914 l
1150.4078 171.03914 l
h
1150.4078 262 m
W*
0 0 1909 1587 rc
1 0 0 -1 -249 1435 cm
1399.4078 1173 m
1652.5 1173 l
1652.5 1263.9608 l
1399.4078 1263.9608 l
h
1399.4078 1173 m
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 1909 1587 rc
1 0 0 -1 1276.954 216.51958 cm
/F1.1[ 25 0 0 -25 0 0]sf
-82.849121 9.6276855 m
(FG2G0/G?:;9:)[ 13.623047 13.708496 12.451172 13.708496 14.550781 19.348145 13.708496 7.714844 14.990234 11.914062 14.990234 0.000000 ] xS
5 w
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -249 1435 cm
1405.0339 1056 m
1475.3109 1150.4313 l
S
0 i
CM
1234.9081 273.01666 m
1230.6429 287.7926 l
1221.9789 281.34476 l
h
1234.9081 273.01666 m
f
0 J
0 j
1 0 0 -1 -249 1435 cm
1483.9081 1161.9833 m
1479.6429 1147.2074 l
1470.9789 1153.6553 l
h
1483.9081 1161.9833 m
S
1 J
1 j
0.60000002 i
827.2226 1056 m
762.9541 1149.926 l
S
0 i
CM
505.82236 273.1897 m
518.41071 282.02454 l
509.49753 288.12332 l
h
505.82236 273.1897 m
f
0 J
0 j
1 0 0 -1 -249 1435 cm
754.82239 1161.8103 m
767.41071 1152.9755 l
758.4975 1146.8767 l
h
754.82239 1161.8103 m
S
1 J
1 j
0.60000002 i
1116.1283 1056 m
1118.8301 1146.1099 l
S
0 i
CM
870.26166 274.49664 m
875.22766 289.052 l
864.4325 288.72833 l
h
870.26166 274.49664 m
f
0 J
0 j
1 0 0 -1 -249 1435 cm
1119.2616 1160.5034 m
1124.2277 1145.948 l
1113.4325 1146.2717 l
h
1119.2616 1160.5034 m
S
1 J
1 j
0.60000002 i
865.60315 459.85989 m
865.49268 485.11737 l
S
0 i
CM
616.42969 935.48279 m
621.89258 949.85901 l
611.09271 949.90625 l
h
616.42969 935.48279 m
f
0 J
0 j
1 0 0 -1 -249 1435 cm
865.42969 499.51724 m
870.89258 485.14099 l
860.09271 485.09375 l
h
865.42969 499.51724 m
S
1 J
1 j
0.60000002 i
865.11633 635.29449 m
865.11633 660.03436 l
S
0 i
CM
616.11633 760.56561 m
621.5163 774.96564 l
610.71631 774.96564 l
h
616.11633 760.56561 m
f
0 J
0 j
1 0 0 -1 -249 1435 cm
865.11633 674.43439 m
870.5163 660.03436 l
859.71631 660.03436 l
h
865.11633 674.43439 m
S
1 J
1 j
0.60000002 i
865.11633 810.21173 m
865.11633 823.82263 l
S
0 i
CM
616.11633 596.77734 m
621.5163 611.17737 l
610.71631 611.17737 l
h
616.11633 596.77734 m
f
0 J
0 j
1 0 0 -1 -249 1435 cm
865.11633 838.22266 m
870.5163 823.82263 l
859.71631 823.82263 l
h
865.11633 838.22266 m
S
1 J
1 j
0.60000002 i
1263.9987 461.92172 m
1263.9987 486.49127 l
S
0 i
CM
1014.9986 934.1087 m
1020.3986 948.50873 l
1009.5986 948.50873 l
h
1014.9986 934.1087 m
f
0 J
0 j
1 0 0 -1 -249 1435 cm
1263.9987 500.89127 m
1269.3986 486.49127 l
1258.5986 486.49127 l
h
1263.9987 500.89127 m
S
1 J
1 j
0.60000002 i
1263.9987 636.31299 m
1263.9987 660.88257 l
S
0 i
CM
1014.9986 759.71747 m
1020.3986 774.11743 l
1009.5986 774.11743 l
h
1014.9986 759.71747 m
f
0 J
0 j
1 0 0 -1 -249 1435 cm
1263.9987 675.28253 m
1269.3986 660.88257 l
1258.5986 660.88257 l
h
1263.9987 675.28253 m
S
1 J
1 j
0.60000002 i
1263.9987 810.70428 m
1263.9987 824.17828 l
S
0 i
CM
1014.9986 596.42169 m
1020.3986 610.82172 l
1009.5986 610.82172 l
h
1014.9986 596.42169 m
f
0 J
0 j
1 0 0 -1 -249 1435 cm
1263.9987 838.57831 m
1269.3986 824.17828 l
1258.5986 824.17828 l
h
1263.9987 838.57831 m
S
Q
0.60000002 i
/Cs1 SC
0 0 0 sc
q
1488.1842 613.35291 m
2003.3003 613.35291 l
2003.3003 296.10141 l
1488.1842 296.10141 l
h
1588.1842 513.35291 m
1903.3003 513.35291 l
1903.3003 396.10141 l
1588.1842 396.10141 l
h
1588.1842 513.35291 m
W*
0 0 1909 1587 rc
1 0 0 -1 -249 1435 cm
1837.1842 921.64709 m
2152.3003 921.64709 l
2152.3003 1038.8986 l
1837.1842 1038.8986 l
h
1837.1842 921.64709 m
S
Q
/Cs2 SC
0 sc
0 i
q
0 0 1909 1587 rc
1 0 0 -1 1745.7422 454.72717 cm
/F1.1[ 25 0 0 -25 0 0]sf
-11.804199 9.6276855 m
(=)s
5 w
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -249 1435 cm
1593 831.98981 m
1811.6389 912.68945 l
S
0 i
CM
1576.1482 517.32434 m
1564.5088 527.37653 l
1560.7692 517.24463 l
h
1576.1482 517.32434 m
f
0 J
0 j
1 0 0 -1 -249 1435 cm
1825.1482 917.67566 m
1813.5088 907.62347 l
1809.7692 917.75537 l
h
1825.1482 917.67566 m
S
/Cs2 SC
0 sc
1 0 0 -1 1745.6501 1287.5 cm
/F2.1[ 35 0 0 -35 0 0]sf
-77.489998 -10.049957 m
(&,/3/./8)[ 23.730000 16.450000 24.605000 13.370000 24.500000 17.150000 24.500000 0.000000 ] xS
-66.605003 36 m
(9277+,1)[ 24.220000 23.415000 14.840000 14.070000 22.645000 16.205000 0.000000 ] xS
1 0 0 -1 472 51.5 cm
-87.324997 -10.049957 m
(:+./0;-<)[ 27.510000 22.645000 17.150000 24.500000 24.535000 10.675000 23.240000 0.000000 ] xS
-86.449997 36 m
(",,/,'\(/<)[ 19.950000 16.310000 16.450000 24.500000 16.275000 11.900000 18.620000 24.500000 0.000000 ] xS
1 0 0 -1 877 51.5 cm
-103.6 -10.049957 m
(=\)87/,4+0)[ 35.280000 24.535000 10.675000 14.000000 24.500000 16.310000 34.720000 22.645000 0.000000 ] xS
-71.574997 36 m
(&\).5+31)[ 23.310000 24.535000 18.025000 23.345000 22.890000 13.230000 0.000000 ] xS
1 0 0 -1 1276.954 51.5 cm
-91.262497 -10.049957 m
(>-5-/?-)[ 28.910000 23.240000 24.430000 23.240000 23.590000 35.875000 0.000000 ] xS
-86.397499 36 m
(&,/3/./81)[ 23.730000 16.450000 24.605000 13.370000 24.500000 17.150000 24.500000 10.675000 0.000000 ] xS
8 w
1 J
1 j
0.60000002 i
/Cs1 SC
0 0 0 sc
1 0 0 -1 -249 1435 cm
466.18732 645.39856 m
553.41119 645.39856 l
553.41119 220.45352 l
865.88367 220.45352 l
865.88367 300.68253 l
S
0 i
CM
616.88367 1115.1174 m
624.08368 1134.3175 l
609.68365 1134.3175 l
h
616.88367 1115.1174 m
f
0 J
0 j
1 0 0 -1 -249 1435 cm
865.88367 319.88254 m
873.08368 300.68253 l
858.68365 300.68253 l
h
865.88367 319.88254 m
S
1 J
1 j
0.60000002 i
865.35724 220.45352 m
1267.4637 220.45352 l
1267.4637 305.68253 l
S
0 i
CM
1018.4638 1110.1174 m
1025.6638 1129.3175 l
1011.2638 1129.3175 l
h
1018.4638 1110.1174 m
f
0 J
0 j
1 0 0 -1 -249 1435 cm
1267.4637 324.88254 m
1274.6638 305.68253 l
1260.2638 305.68253 l
h
1267.4637 324.88254 m
S
ep
end
%%Trailer
%%EOF
